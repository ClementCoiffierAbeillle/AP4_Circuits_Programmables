

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jan 23 17:02:01 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 06/07/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F1719 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     008C                     	;# 
    78     008D                     	;# 
    79     008E                     	;# 
    80     008F                     	;# 
    81     0090                     	;# 
    82     0091                     	;# 
    83     0092                     	;# 
    84     0093                     	;# 
    85     0095                     	;# 
    86     0096                     	;# 
    87     0097                     	;# 
    88     0098                     	;# 
    89     0099                     	;# 
    90     009A                     	;# 
    91     009B                     	;# 
    92     009B                     	;# 
    93     009C                     	;# 
    94     009D                     	;# 
    95     009E                     	;# 
    96     009F                     	;# 
    97     010C                     	;# 
    98     010D                     	;# 
    99     010E                     	;# 
   100     010F                     	;# 
   101     0110                     	;# 
   102     0111                     	;# 
   103     0112                     	;# 
   104     0113                     	;# 
   105     0114                     	;# 
   106     0115                     	;# 
   107     0116                     	;# 
   108     0117                     	;# 
   109     0118                     	;# 
   110     0119                     	;# 
   111     011A                     	;# 
   112     011B                     	;# 
   113     011B                     	;# 
   114     011C                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     018E                     	;# 
   118     018F                     	;# 
   119     0190                     	;# 
   120     0191                     	;# 
   121     0191                     	;# 
   122     0192                     	;# 
   123     0193                     	;# 
   124     0193                     	;# 
   125     0194                     	;# 
   126     0195                     	;# 
   127     0196                     	;# 
   128     0197                     	;# 
   129     0199                     	;# 
   130     0199                     	;# 
   131     0199                     	;# 
   132     019A                     	;# 
   133     019A                     	;# 
   134     019A                     	;# 
   135     019B                     	;# 
   136     019B                     	;# 
   137     019B                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019C                     	;# 
   141     019C                     	;# 
   142     019C                     	;# 
   143     019D                     	;# 
   144     019D                     	;# 
   145     019D                     	;# 
   146     019E                     	;# 
   147     019E                     	;# 
   148     019E                     	;# 
   149     019F                     	;# 
   150     019F                     	;# 
   151     019F                     	;# 
   152     019F                     	;# 
   153     019F                     	;# 
   154     020C                     	;# 
   155     020D                     	;# 
   156     020E                     	;# 
   157     020F                     	;# 
   158     0210                     	;# 
   159     0211                     	;# 
   160     0211                     	;# 
   161     0212                     	;# 
   162     0212                     	;# 
   163     0213                     	;# 
   164     0213                     	;# 
   165     0214                     	;# 
   166     0214                     	;# 
   167     0215                     	;# 
   168     0215                     	;# 
   169     0215                     	;# 
   170     0215                     	;# 
   171     0216                     	;# 
   172     0216                     	;# 
   173     0217                     	;# 
   174     0217                     	;# 
   175     028C                     	;# 
   176     028D                     	;# 
   177     028E                     	;# 
   178     028F                     	;# 
   179     0290                     	;# 
   180     0291                     	;# 
   181     0291                     	;# 
   182     0292                     	;# 
   183     0293                     	;# 
   184     0293                     	;# 
   185     0298                     	;# 
   186     0298                     	;# 
   187     0299                     	;# 
   188     029A                     	;# 
   189     029A                     	;# 
   190     029E                     	;# 
   191     030C                     	;# 
   192     030D                     	;# 
   193     030E                     	;# 
   194     030F                     	;# 
   195     0310                     	;# 
   196     038C                     	;# 
   197     038D                     	;# 
   198     038E                     	;# 
   199     038F                     	;# 
   200     0390                     	;# 
   201     0391                     	;# 
   202     0392                     	;# 
   203     0393                     	;# 
   204     0394                     	;# 
   205     0395                     	;# 
   206     0396                     	;# 
   207     0397                     	;# 
   208     0398                     	;# 
   209     0399                     	;# 
   210     039D                     	;# 
   211     039E                     	;# 
   212     039F                     	;# 
   213     0415                     	;# 
   214     0416                     	;# 
   215     0417                     	;# 
   216     041C                     	;# 
   217     041D                     	;# 
   218     041E                     	;# 
   219     0498                     	;# 
   220     0498                     	;# 
   221     0499                     	;# 
   222     049A                     	;# 
   223     049B                     	;# 
   224     049B                     	;# 
   225     049C                     	;# 
   226     049D                     	;# 
   227     049E                     	;# 
   228     049F                     	;# 
   229     0511                     	;# 
   230     0515                     	;# 
   231     0617                     	;# 
   232     0618                     	;# 
   233     0619                     	;# 
   234     0619                     	;# 
   235     061A                     	;# 
   236     061B                     	;# 
   237     061C                     	;# 
   238     061C                     	;# 
   239     0691                     	;# 
   240     0692                     	;# 
   241     0693                     	;# 
   242     0694                     	;# 
   243     0695                     	;# 
   244     0696                     	;# 
   245     0697                     	;# 
   246     0698                     	;# 
   247     0699                     	;# 
   248     069A                     	;# 
   249     069B                     	;# 
   250     069C                     	;# 
   251     069D                     	;# 
   252     069E                     	;# 
   253     069F                     	;# 
   254     0E0F                     	;# 
   255     0E10                     	;# 
   256     0E11                     	;# 
   257     0E12                     	;# 
   258     0E13                     	;# 
   259     0E14                     	;# 
   260     0E15                     	;# 
   261     0E17                     	;# 
   262     0E20                     	;# 
   263     0E21                     	;# 
   264     0E22                     	;# 
   265     0E24                     	;# 
   266     0E25                     	;# 
   267     0E28                     	;# 
   268     0E29                     	;# 
   269     0E2A                     	;# 
   270     0E2B                     	;# 
   271     0E90                     	;# 
   272     0E91                     	;# 
   273     0E92                     	;# 
   274     0E93                     	;# 
   275     0E94                     	;# 
   276     0E95                     	;# 
   277     0E96                     	;# 
   278     0E97                     	;# 
   279     0E98                     	;# 
   280     0E99                     	;# 
   281     0E9A                     	;# 
   282     0E9B                     	;# 
   283     0E9C                     	;# 
   284     0E9D                     	;# 
   285     0E9E                     	;# 
   286     0E9F                     	;# 
   287     0EA0                     	;# 
   288     0EA1                     	;# 
   289     0EA2                     	;# 
   290     0EA3                     	;# 
   291     0EA4                     	;# 
   292     0EA5                     	;# 
   293     0EA6                     	;# 
   294     0EA7                     	;# 
   295     0EA8                     	;# 
   296     0EA9                     	;# 
   297     0EAA                     	;# 
   298     0EAB                     	;# 
   299     0EAC                     	;# 
   300     0EAD                     	;# 
   301     0EAE                     	;# 
   302     0EAF                     	;# 
   303     0EB0                     	;# 
   304     0EB1                     	;# 
   305     0EB2                     	;# 
   306     0F0F                     	;# 
   307     0F10                     	;# 
   308     0F11                     	;# 
   309     0F12                     	;# 
   310     0F13                     	;# 
   311     0F14                     	;# 
   312     0F15                     	;# 
   313     0F16                     	;# 
   314     0F17                     	;# 
   315     0F18                     	;# 
   316     0F19                     	;# 
   317     0F1A                     	;# 
   318     0F1B                     	;# 
   319     0F1C                     	;# 
   320     0F1D                     	;# 
   321     0F1E                     	;# 
   322     0F1F                     	;# 
   323     0F20                     	;# 
   324     0F21                     	;# 
   325     0F22                     	;# 
   326     0F23                     	;# 
   327     0F24                     	;# 
   328     0F25                     	;# 
   329     0F26                     	;# 
   330     0F27                     	;# 
   331     0F28                     	;# 
   332     0F29                     	;# 
   333     0F2A                     	;# 
   334     0F2B                     	;# 
   335     0F2C                     	;# 
   336     0F2D                     	;# 
   337     0F2E                     	;# 
   338     0F2F                     	;# 
   339     0F30                     	;# 
   340     0F31                     	;# 
   341     0F32                     	;# 
   342     0F33                     	;# 
   343     0F34                     	;# 
   344     0F35                     	;# 
   345     0F36                     	;# 
   346     0F37                     	;# 
   347     0FE4                     	;# 
   348     0FE5                     	;# 
   349     0FE6                     	;# 
   350     0FE7                     	;# 
   351     0FE8                     	;# 
   352     0FE9                     	;# 
   353     0FEA                     	;# 
   354     0FEB                     	;# 
   355     0FED                     	;# 
   356     0FEE                     	;# 
   357     0FEF                     	;# 
   358     009B                     _ADRESL	set	155
   359     009C                     _ADRESH	set	156
   360     009E                     _ADCON1bits	set	158
   361     009D                     _ADCON0bits	set	157
   362     008D                     _TRISBbits	set	141
   363     008F                     _TRISDbits	set	143
   364     010D                     _LATBbits	set	269
   365     010F                     _LATDbits	set	271
   366     018C                     _ANSELAbits	set	396
   367                           
   368                           	psect	cinit
   369     07FD                     start_initialization:	
   370                           ; #config settings
   371                           
   372     07FD                     __initialization:
   373     07FD                     end_of_initialization:	
   374                           ;End of C runtime variable initialization code
   375                           
   376     07FD                     __end_of__initialization:
   377     07FD  0020               	movlb	0
   378     07FE  3187  2F32         	ljmp	_main	;jump to C main() function
   379                           
   380                           	psect	cstackCOMMON
   381     0070                     __pcstackCOMMON:
   382     0070                     ?_init_leds:
   383     0070                     ??_init_leds:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0070                     ?_init_pot:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     ??_init_pot:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0070                     ?_init_adc:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ??_init_adc:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_main:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_valeur_adc:	
   402                           ; 1 bytes @ 0x0
   403                           
   404                           
   405                           ; 2 bytes @ 0x0
   406     0070                     	ds	2
   407     0072                     ??_valeur_adc:
   408     0072                     ??_main:	
   409                           ; 1 bytes @ 0x2
   410                           
   411                           
   412                           ; 1 bytes @ 0x2
   413     0072                     	ds	1
   414     0073                     main@x:
   415                           
   416                           ; 2 bytes @ 0x3
   417     0073                     	ds	2
   418                           
   419                           	psect	maintext
   420     0732                     __pmaintext:	
   421 ;;
   422 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   423 ;;
   424 ;; *************** function _main *****************
   425 ;; Defined at:
   426 ;;		line 60 in file "main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;  x               2    3[COMMON] int 
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, pclath, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : B1F/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   443 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   444 ;;Total ram usage:        3 bytes
   445 ;; Hardware stack levels required when called: 1
   446 ;; This function calls:
   447 ;;		_init_adc
   448 ;;		_init_leds
   449 ;;		_init_pot
   450 ;;		_valeur_adc
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456     0732                     _main:	
   457                           ;psect for function _main
   458                           
   459     0732                     l644:	
   460                           ;incstack = 0
   461                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   462                           
   463                           
   464                           ;main.c: 62:     init_leds();
   465     0732  3187  2711  3187   	fcall	_init_leds
   466                           
   467                           ;main.c: 63:     init_pot();
   468     0735  3186  26F7  3187   	fcall	_init_pot
   469     0738                     l646:
   470                           
   471                           ;main.c: 64:     init_adc();
   472     0738  3186  26FB  3187   	fcall	_init_adc
   473     073B                     l648:
   474                           
   475                           ;main.c: 68:     int x = valeur_adc();
   476     073B  3187  2706  3187   	fcall	_valeur_adc
   477     073E  0871               	movf	?_valeur_adc+1,w
   478     073F  00F4               	movwf	main@x+1
   479     0740  0870               	movf	?_valeur_adc,w
   480     0741  00F3               	movwf	main@x
   481     0742                     l650:
   482                           
   483                           ;main.c: 69:         if (x < 128) {
   484     0742  0874               	movf	main@x+1,w
   485     0743  3A80               	xorlw	128
   486     0744  00F2               	movwf	??_main
   487     0745  3080               	movlw	128
   488     0746  0272               	subwf	??_main,w
   489     0747  1D03               	skipz
   490     0748  2F4B               	goto	u115
   491     0749  3080               	movlw	128
   492     074A  0273               	subwf	main@x,w
   493     074B                     u115:
   494     074B  1803               	skipnc
   495     074C  2F4E               	goto	u111
   496     074D  2F4F               	goto	u110
   497     074E                     u111:
   498     074E  2F59               	goto	l654
   499     074F                     u110:
   500     074F                     l652:
   501                           
   502                           ;main.c: 70:         LATDbits.LATD0 = 1;
   503     074F  0022               	movlb	2	; select bank2
   504     0750  140F               	bsf	15,0	;volatile
   505                           
   506                           ;main.c: 71:         LATDbits.LATD1 = 0;
   507     0751  108F               	bcf	15,1	;volatile
   508                           
   509                           ;main.c: 72:         LATDbits.LATD2 = 0;
   510     0752  110F               	bcf	15,2	;volatile
   511                           
   512                           ;main.c: 73:         LATDbits.LATD3 = 0;
   513     0753  118F               	bcf	15,3	;volatile
   514                           
   515                           ;main.c: 74:         LATBbits.LATB0 = 0;
   516     0754  100D               	bcf	13,0	;volatile
   517                           
   518                           ;main.c: 75:         LATBbits.LATB1 = 0;
   519     0755  108D               	bcf	13,1	;volatile
   520                           
   521                           ;main.c: 76:         LATBbits.LATB2 = 0;
   522     0756  110D               	bcf	13,2	;volatile
   523                           
   524                           ;main.c: 77:         LATBbits.LATB3 = 0;
   525     0757  118D               	bcf	13,3	;volatile
   526                           
   527                           ;main.c: 79:     } else if (x < 256) {
   528     0758  2F3B               	goto	l648
   529     0759                     l654:
   530     0759  0874               	movf	main@x+1,w
   531     075A  3A80               	xorlw	128
   532     075B  00F2               	movwf	??_main
   533     075C  3081               	movlw	129
   534     075D  0272               	subwf	??_main,w
   535     075E  1D03               	skipz
   536     075F  2F62               	goto	u125
   537     0760  3000               	movlw	0
   538     0761  0273               	subwf	main@x,w
   539     0762                     u125:
   540     0762  1803               	skipnc
   541     0763  2F65               	goto	u121
   542     0764  2F66               	goto	u120
   543     0765                     u121:
   544     0765  2F70               	goto	l658
   545     0766                     u120:
   546     0766                     l656:
   547                           
   548                           ;main.c: 80:         LATDbits.LATD1 = 1;
   549     0766  0022               	movlb	2	; select bank2
   550     0767  148F               	bsf	15,1	;volatile
   551                           
   552                           ;main.c: 81:         LATDbits.LATD0 = 0;
   553     0768  100F               	bcf	15,0	;volatile
   554                           
   555                           ;main.c: 82:         LATDbits.LATD2 = 0;
   556     0769  110F               	bcf	15,2	;volatile
   557                           
   558                           ;main.c: 83:         LATDbits.LATD3 = 0;
   559     076A  118F               	bcf	15,3	;volatile
   560                           
   561                           ;main.c: 84:         LATBbits.LATB0 = 0;
   562     076B  100D               	bcf	13,0	;volatile
   563                           
   564                           ;main.c: 85:         LATBbits.LATB1 = 0;
   565     076C  108D               	bcf	13,1	;volatile
   566                           
   567                           ;main.c: 86:         LATBbits.LATB2 = 0;
   568     076D  110D               	bcf	13,2	;volatile
   569                           
   570                           ;main.c: 87:         LATBbits.LATB3 = 0;
   571     076E  118D               	bcf	13,3	;volatile
   572                           
   573                           ;main.c: 89:     } else if (x < 384) {
   574     076F  2F3B               	goto	l648
   575     0770                     l658:
   576     0770  0874               	movf	main@x+1,w
   577     0771  3A80               	xorlw	128
   578     0772  00F2               	movwf	??_main
   579     0773  3081               	movlw	129
   580     0774  0272               	subwf	??_main,w
   581     0775  1D03               	skipz
   582     0776  2F79               	goto	u135
   583     0777  3080               	movlw	128
   584     0778  0273               	subwf	main@x,w
   585     0779                     u135:
   586     0779  1803               	skipnc
   587     077A  2F7C               	goto	u131
   588     077B  2F7D               	goto	u130
   589     077C                     u131:
   590     077C  2F87               	goto	l662
   591     077D                     u130:
   592     077D                     l660:
   593                           
   594                           ;main.c: 90:         LATDbits.LATD2 = 1;
   595     077D  0022               	movlb	2	; select bank2
   596     077E  150F               	bsf	15,2	;volatile
   597                           
   598                           ;main.c: 91:         LATDbits.LATD1 = 0;
   599     077F  108F               	bcf	15,1	;volatile
   600                           
   601                           ;main.c: 92:         LATDbits.LATD0 = 0;
   602     0780  100F               	bcf	15,0	;volatile
   603                           
   604                           ;main.c: 93:         LATDbits.LATD3 = 0;
   605     0781  118F               	bcf	15,3	;volatile
   606                           
   607                           ;main.c: 94:         LATBbits.LATB0 = 0;
   608     0782  100D               	bcf	13,0	;volatile
   609                           
   610                           ;main.c: 95:         LATBbits.LATB1 = 0;
   611     0783  108D               	bcf	13,1	;volatile
   612                           
   613                           ;main.c: 96:         LATBbits.LATB2 = 0;
   614     0784  110D               	bcf	13,2	;volatile
   615                           
   616                           ;main.c: 97:         LATBbits.LATB3 = 0;
   617     0785  118D               	bcf	13,3	;volatile
   618                           
   619                           ;main.c: 99:     } else if (x < 512) {
   620     0786  2F3B               	goto	l648
   621     0787                     l662:
   622     0787  0874               	movf	main@x+1,w
   623     0788  3A80               	xorlw	128
   624     0789  00F2               	movwf	??_main
   625     078A  3082               	movlw	130
   626     078B  0272               	subwf	??_main,w
   627     078C  1D03               	skipz
   628     078D  2F90               	goto	u145
   629     078E  3000               	movlw	0
   630     078F  0273               	subwf	main@x,w
   631     0790                     u145:
   632     0790  1803               	skipnc
   633     0791  2F93               	goto	u141
   634     0792  2F94               	goto	u140
   635     0793                     u141:
   636     0793  2F9E               	goto	l666
   637     0794                     u140:
   638     0794                     l664:
   639                           
   640                           ;main.c: 100:         LATDbits.LATD3 = 1;
   641     0794  0022               	movlb	2	; select bank2
   642     0795  158F               	bsf	15,3	;volatile
   643                           
   644                           ;main.c: 101:         LATDbits.LATD1 = 0;
   645     0796  108F               	bcf	15,1	;volatile
   646                           
   647                           ;main.c: 102:         LATDbits.LATD2 = 0;
   648     0797  110F               	bcf	15,2	;volatile
   649                           
   650                           ;main.c: 103:         LATDbits.LATD0 = 0;
   651     0798  100F               	bcf	15,0	;volatile
   652                           
   653                           ;main.c: 104:         LATBbits.LATB0 = 0;
   654     0799  100D               	bcf	13,0	;volatile
   655                           
   656                           ;main.c: 105:         LATBbits.LATB1 = 0;
   657     079A  108D               	bcf	13,1	;volatile
   658                           
   659                           ;main.c: 106:         LATBbits.LATB2 = 0;
   660     079B  110D               	bcf	13,2	;volatile
   661                           
   662                           ;main.c: 107:         LATBbits.LATB3 = 0;
   663     079C  118D               	bcf	13,3	;volatile
   664                           
   665                           ;main.c: 109:     } else if (x < 640) {
   666     079D  2F3B               	goto	l648
   667     079E                     l666:
   668     079E  0874               	movf	main@x+1,w
   669     079F  3A80               	xorlw	128
   670     07A0  00F2               	movwf	??_main
   671     07A1  3082               	movlw	130
   672     07A2  0272               	subwf	??_main,w
   673     07A3  1D03               	skipz
   674     07A4  2FA7               	goto	u155
   675     07A5  3080               	movlw	128
   676     07A6  0273               	subwf	main@x,w
   677     07A7                     u155:
   678     07A7  1803               	skipnc
   679     07A8  2FAA               	goto	u151
   680     07A9  2FAB               	goto	u150
   681     07AA                     u151:
   682     07AA  2FB5               	goto	l670
   683     07AB                     u150:
   684     07AB                     l668:
   685                           
   686                           ;main.c: 110:         LATBbits.LATB0 = 1;
   687     07AB  0022               	movlb	2	; select bank2
   688     07AC  140D               	bsf	13,0	;volatile
   689                           
   690                           ;main.c: 111:         LATDbits.LATD1 = 0;
   691     07AD  108F               	bcf	15,1	;volatile
   692                           
   693                           ;main.c: 112:         LATDbits.LATD2 = 0;
   694     07AE  110F               	bcf	15,2	;volatile
   695                           
   696                           ;main.c: 113:         LATDbits.LATD3 = 0;
   697     07AF  118F               	bcf	15,3	;volatile
   698                           
   699                           ;main.c: 114:         LATDbits.LATD0 = 0;
   700     07B0  100F               	bcf	15,0	;volatile
   701                           
   702                           ;main.c: 115:         LATBbits.LATB1 = 0;
   703     07B1  108D               	bcf	13,1	;volatile
   704                           
   705                           ;main.c: 116:         LATBbits.LATB2 = 0;
   706     07B2  110D               	bcf	13,2	;volatile
   707                           
   708                           ;main.c: 117:         LATBbits.LATB3 = 0;
   709     07B3  118D               	bcf	13,3	;volatile
   710                           
   711                           ;main.c: 119:     } else if (x < 768) {
   712     07B4  2F3B               	goto	l648
   713     07B5                     l670:
   714     07B5  0874               	movf	main@x+1,w
   715     07B6  3A80               	xorlw	128
   716     07B7  00F2               	movwf	??_main
   717     07B8  3083               	movlw	131
   718     07B9  0272               	subwf	??_main,w
   719     07BA  1D03               	skipz
   720     07BB  2FBE               	goto	u165
   721     07BC  3000               	movlw	0
   722     07BD  0273               	subwf	main@x,w
   723     07BE                     u165:
   724     07BE  1803               	skipnc
   725     07BF  2FC1               	goto	u161
   726     07C0  2FC2               	goto	u160
   727     07C1                     u161:
   728     07C1  2FCC               	goto	l674
   729     07C2                     u160:
   730     07C2                     l672:
   731                           
   732                           ;main.c: 120:         LATBbits.LATB1 = 1;
   733     07C2  0022               	movlb	2	; select bank2
   734     07C3  148D               	bsf	13,1	;volatile
   735                           
   736                           ;main.c: 121:         LATDbits.LATD1 = 0;
   737     07C4  108F               	bcf	15,1	;volatile
   738                           
   739                           ;main.c: 122:         LATDbits.LATD2 = 0;
   740     07C5  110F               	bcf	15,2	;volatile
   741                           
   742                           ;main.c: 123:         LATDbits.LATD3 = 0;
   743     07C6  118F               	bcf	15,3	;volatile
   744                           
   745                           ;main.c: 124:         LATBbits.LATB0 = 0;
   746     07C7  100D               	bcf	13,0	;volatile
   747                           
   748                           ;main.c: 125:         LATDbits.LATD0 = 0;
   749     07C8  100F               	bcf	15,0	;volatile
   750                           
   751                           ;main.c: 126:         LATBbits.LATB2 = 0;
   752     07C9  110D               	bcf	13,2	;volatile
   753                           
   754                           ;main.c: 127:         LATBbits.LATB3 = 0;
   755     07CA  118D               	bcf	13,3	;volatile
   756                           
   757                           ;main.c: 129:     } else if (x < 896) {
   758     07CB  2F3B               	goto	l648
   759     07CC                     l674:
   760     07CC  0874               	movf	main@x+1,w
   761     07CD  3A80               	xorlw	128
   762     07CE  00F2               	movwf	??_main
   763     07CF  3083               	movlw	131
   764     07D0  0272               	subwf	??_main,w
   765     07D1  1D03               	skipz
   766     07D2  2FD5               	goto	u175
   767     07D3  3080               	movlw	128
   768     07D4  0273               	subwf	main@x,w
   769     07D5                     u175:
   770     07D5  1803               	skipnc
   771     07D6  2FD8               	goto	u171
   772     07D7  2FD9               	goto	u170
   773     07D8                     u171:
   774     07D8  2FE3               	goto	l678
   775     07D9                     u170:
   776     07D9                     l676:
   777                           
   778                           ;main.c: 130:         LATBbits.LATB2 = 1;
   779     07D9  0022               	movlb	2	; select bank2
   780     07DA  150D               	bsf	13,2	;volatile
   781                           
   782                           ;main.c: 131:         LATDbits.LATD1 = 0;
   783     07DB  108F               	bcf	15,1	;volatile
   784                           
   785                           ;main.c: 132:         LATDbits.LATD2 = 0;
   786     07DC  110F               	bcf	15,2	;volatile
   787                           
   788                           ;main.c: 133:         LATDbits.LATD3 = 0;
   789     07DD  118F               	bcf	15,3	;volatile
   790                           
   791                           ;main.c: 134:         LATBbits.LATB0 = 0;
   792     07DE  100D               	bcf	13,0	;volatile
   793                           
   794                           ;main.c: 135:         LATBbits.LATB1 = 0;
   795     07DF  108D               	bcf	13,1	;volatile
   796                           
   797                           ;main.c: 136:         LATDbits.LATD0 = 0;
   798     07E0  100F               	bcf	15,0	;volatile
   799                           
   800                           ;main.c: 137:         LATBbits.LATB3 = 0;
   801     07E1  118D               	bcf	13,3	;volatile
   802                           
   803                           ;main.c: 139:     } else if (x < 1024) {
   804     07E2  2F3B               	goto	l648
   805     07E3                     l678:
   806     07E3  0874               	movf	main@x+1,w
   807     07E4  3A80               	xorlw	128
   808     07E5  00F2               	movwf	??_main
   809     07E6  3084               	movlw	132
   810     07E7  0272               	subwf	??_main,w
   811     07E8  1D03               	skipz
   812     07E9  2FEC               	goto	u185
   813     07EA  3000               	movlw	0
   814     07EB  0273               	subwf	main@x,w
   815     07EC                     u185:
   816     07EC  1803               	skipnc
   817     07ED  2FEF               	goto	u181
   818     07EE  2FF0               	goto	u180
   819     07EF                     u181:
   820     07EF  2FFA               	goto	l48
   821     07F0                     u180:
   822     07F0                     l680:
   823                           
   824                           ;main.c: 140:         LATBbits.LATB3 = 1;
   825     07F0  0022               	movlb	2	; select bank2
   826     07F1  158D               	bsf	13,3	;volatile
   827                           
   828                           ;main.c: 141:         LATDbits.LATD1 = 0;
   829     07F2  108F               	bcf	15,1	;volatile
   830                           
   831                           ;main.c: 142:         LATDbits.LATD2 = 0;
   832     07F3  110F               	bcf	15,2	;volatile
   833                           
   834                           ;main.c: 143:         LATDbits.LATD3 = 0;
   835     07F4  118F               	bcf	15,3	;volatile
   836                           
   837                           ;main.c: 144:         LATBbits.LATB0 = 0;
   838     07F5  100D               	bcf	13,0	;volatile
   839                           
   840                           ;main.c: 145:         LATBbits.LATB1 = 0;
   841     07F6  108D               	bcf	13,1	;volatile
   842                           
   843                           ;main.c: 146:         LATBbits.LATB2 = 0;
   844     07F7  110D               	bcf	13,2	;volatile
   845                           
   846                           ;main.c: 147:         LATDbits.LATD0 = 0;
   847     07F8  100F               	bcf	15,0	;volatile
   848     07F9  2F3B               	goto	l648
   849     07FA                     l48:
   850     07FA  2F3B               	goto	l648
   851     07FB  3180  2802         	ljmp	start
   852     07FD                     __end_of_main:
   853                           
   854                           	psect	text1
   855     0706                     __ptext1:	
   856 ;; *************** function _valeur_adc *****************
   857 ;; Defined at:
   858 ;;		line 54 in file "main.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  2    0[COMMON] int 
   865 ;; Registers used:
   866 ;;		wreg
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   876 ;;Total ram usage:        2 bytes
   877 ;; Hardware stack levels used: 1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885     0706                     _valeur_adc:	
   886                           ;psect for function _valeur_adc
   887                           
   888     0706                     l638:	
   889                           ;incstack = 0
   890                           ; Regs used in _valeur_adc: [wreg]
   891                           
   892                           
   893                           ;main.c: 55:     ADCON0bits.ADGO = 1;
   894     0706  0021               	movlb	1	; select bank1
   895     0707  149D               	bsf	29,1	;volatile
   896     0708                     l30:	
   897                           ;main.c: 56:     while (ADCON0bits.ADGO){};
   898                           
   899     0708  189D               	btfsc	29,1	;volatile
   900     0709  2F0B               	goto	u101
   901     070A  2F0C               	goto	u100
   902     070B                     u101:
   903     070B  2F08               	goto	l30
   904     070C                     u100:
   905     070C                     l640:
   906                           
   907                           ;main.c: 57:     return ((ADRESH << 8) + ADRESL);
   908     070C  081C               	movf	28,w	;volatile
   909     070D  00F1               	movwf	?_valeur_adc+1
   910     070E  081B               	movf	27,w	;volatile
   911     070F  00F0               	movwf	?_valeur_adc
   912     0710                     l33:
   913     0710  0008               	return
   914     0711                     __end_of_valeur_adc:
   915                           
   916                           	psect	text2
   917     06F7                     __ptext2:	
   918 ;; *************** function _init_pot *****************
   919 ;; Defined at:
   920 ;;		line 39 in file "main.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		None
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   938 ;;Total ram usage:        0 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947     06F7                     _init_pot:	
   948                           ;psect for function _init_pot
   949                           
   950     06F7                     l584:	
   951                           ;incstack = 0
   952                           ; Regs used in _init_pot: []
   953                           
   954                           
   955                           ;main.c: 40:     ANSELAbits.ANSA0 = 1;
   956     06F7  0023               	movlb	3	; select bank3
   957     06F8  140C               	bsf	12,0	;volatile
   958                           
   959                           ;main.c: 41:     ANSELAbits.ANSA0 = 0;
   960     06F9  100C               	bcf	12,0	;volatile
   961     06FA                     l24:
   962     06FA  0008               	return
   963     06FB                     __end_of_init_pot:
   964                           
   965                           	psect	text3
   966     0711                     __ptext3:	
   967 ;; *************** function _init_leds *****************
   968 ;; Defined at:
   969 ;;		line 28 in file "main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		None
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996     0711                     _init_leds:	
   997                           ;psect for function _init_leds
   998                           
   999     0711                     l582:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _init_leds: []
  1002                           
  1003                           
  1004                           ;main.c: 29:     TRISDbits.TRISD0 = 0; LATDbits.LATD0 = 0;
  1005     0711  0021               	movlb	1	; select bank1
  1006     0712  100F               	bcf	15,0	;volatile
  1007     0713  0022               	movlb	2	; select bank2
  1008     0714  100F               	bcf	15,0	;volatile
  1009                           
  1010                           ;main.c: 30:     TRISDbits.TRISD1 = 0; LATDbits.LATD1 = 0;
  1011     0715  0021               	movlb	1	; select bank1
  1012     0716  108F               	bcf	15,1	;volatile
  1013     0717  0022               	movlb	2	; select bank2
  1014     0718  108F               	bcf	15,1	;volatile
  1015                           
  1016                           ;main.c: 31:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
  1017     0719  0021               	movlb	1	; select bank1
  1018     071A  110F               	bcf	15,2	;volatile
  1019     071B  0022               	movlb	2	; select bank2
  1020     071C  110F               	bcf	15,2	;volatile
  1021                           
  1022                           ;main.c: 32:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
  1023     071D  0021               	movlb	1	; select bank1
  1024     071E  118F               	bcf	15,3	;volatile
  1025     071F  0022               	movlb	2	; select bank2
  1026     0720  118F               	bcf	15,3	;volatile
  1027                           
  1028                           ;main.c: 33:     TRISBbits.TRISB0 = 0; LATBbits.LATB0 = 0;
  1029     0721  0021               	movlb	1	; select bank1
  1030     0722  100D               	bcf	13,0	;volatile
  1031     0723  0022               	movlb	2	; select bank2
  1032     0724  100D               	bcf	13,0	;volatile
  1033                           
  1034                           ;main.c: 34:     TRISBbits.TRISB1 = 0; LATBbits.LATB1 = 0;
  1035     0725  0021               	movlb	1	; select bank1
  1036     0726  108D               	bcf	13,1	;volatile
  1037     0727  0022               	movlb	2	; select bank2
  1038     0728  108D               	bcf	13,1	;volatile
  1039                           
  1040                           ;main.c: 35:     TRISBbits.TRISB2 = 0; LATBbits.LATB2 = 0;
  1041     0729  0021               	movlb	1	; select bank1
  1042     072A  110D               	bcf	13,2	;volatile
  1043     072B  0022               	movlb	2	; select bank2
  1044     072C  110D               	bcf	13,2	;volatile
  1045                           
  1046                           ;main.c: 36:     TRISBbits.TRISB3 = 0; LATBbits.LATB3 = 0;
  1047     072D  0021               	movlb	1	; select bank1
  1048     072E  118D               	bcf	13,3	;volatile
  1049     072F  0022               	movlb	2	; select bank2
  1050     0730  118D               	bcf	13,3	;volatile
  1051     0731                     l21:
  1052     0731  0008               	return
  1053     0732                     __end_of_init_leds:
  1054                           
  1055                           	psect	text4
  1056     06FB                     __ptext4:	
  1057 ;; *************** function _init_adc *****************
  1058 ;; Defined at:
  1059 ;;		line 44 in file "main.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;		None
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1077 ;;Total ram usage:        0 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; This function calls:
  1080 ;;		Nothing
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086     06FB                     _init_adc:	
  1087                           ;psect for function _init_adc
  1088                           
  1089     06FB                     l586:	
  1090                           ;incstack = 0
  1091                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  1092                           
  1093                           
  1094                           ;main.c: 45:     ADCON0bits.ADON = 1;
  1095     06FB  0021               	movlb	1	; select bank1
  1096     06FC  141D               	bsf	29,0	;volatile
  1097     06FD                     l588:
  1098                           
  1099                           ;main.c: 46:     ADCON1bits.ADCS = 0b00;
  1100     06FD  308F               	movlw	-113
  1101     06FE  059E               	andwf	30,f	;volatile
  1102                           
  1103                           ;main.c: 47:     ADCON1bits.ADPREF = 0b00;
  1104     06FF  30FC               	movlw	-4
  1105     0700  059E               	andwf	30,f	;volatile
  1106     0701                     l590:
  1107                           
  1108                           ;main.c: 48:     ADCON1bits.ADNREF = 0;
  1109     0701  111E               	bcf	30,2	;volatile
  1110     0702                     l592:
  1111                           
  1112                           ;main.c: 49:     ADCON1bits.ADFM = 1;
  1113     0702  179E               	bsf	30,7	;volatile
  1114                           
  1115                           ;main.c: 50:     ADCON0bits.CHS = 0;
  1116     0703  3083               	movlw	-125
  1117     0704  059D               	andwf	29,f	;volatile
  1118     0705                     l27:
  1119     0705  0008               	return
  1120     0706                     __end_of_init_adc:
  1121     007E                     btemp	set	126	;btemp
  1122     007E                     wtemp0	set	126
  1123                           
  1124                           	psect	config
  1125                           
  1126                           ;Config register CONFIG1 @ 0x8007
  1127                           ;	Oscillator Selection Bits
  1128                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  1129                           ;	Watchdog Timer Enable
  1130                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  1131                           ;	Power-up Timer Enable
  1132                           ;	PWRTE = OFF, PWRT disabled
  1133                           ;	MCLR Pin Function Select
  1134                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1135                           ;	Flash Program Memory Code Protection
  1136                           ;	CP = OFF, Program memory code protection is disabled
  1137                           ;	Brown-out Reset Enable
  1138                           ;	BOREN = ON, Brown-out Reset enabled
  1139                           ;	Clock Out Enable
  1140                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1141                           ;	Internal/External Switchover Mode
  1142                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  1143                           ;	Fail-Safe Clock Monitor Enable
  1144                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1145     8007                     	org	32775
  1146     8007  3FEA               	dw	16362
  1147                           
  1148                           ;Config register CONFIG2 @ 0x8008
  1149                           ;	Flash Memory Self-Write Protection
  1150                           ;	WRT = OFF, Write protection off
  1151                           ;	Peripheral Pin Select one-way control
  1152                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  1153                           ;	Zero-cross detect disable
  1154                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1155                           ;	Phase Lock Loop enable
  1156                           ;	PLLEN = OFF, 4x PLL is disabled
  1157                           ;	Stack Overflow/Underflow Reset Enable
  1158                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1159                           ;	Brown-out Reset Voltage Selection
  1160                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1161                           ;	Low-Power Brown Out Reset
  1162                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1163                           ;	In-Circuit Debugger Mode
  1164                           ;	DEBUG = 0x1, unprogrammed default
  1165                           ;	Low-Voltage Programming Enable
  1166                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1167     8008                     	org	32776
  1168     8008  1EFB               	dw	7931

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_valeur_adc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     177
                                              2 COMMON     3     3      0
                           _init_adc
                          _init_leds
                           _init_pot
                         _valeur_adc
 ---------------------------------------------------------------------------------
 (1) _valeur_adc                                           2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_pot                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_leds                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_adc
   _init_leds
   _init_pot
   _valeur_adc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       5       2       35.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jan 23 17:02:01 2024

                     l21 0731                       l30 0708                       l24 06FA  
                     l33 0710                       l27 0705                       l48 07FA  
                    l640 070C                      l650 0742                      l660 077D  
                    l652 074F                      l644 0732                      l590 0701  
                    l582 0711                      l638 0706                      l670 07B5  
                    l662 0787                      l654 0759                      l646 0738  
                    l592 0702                      l584 06F7                      l680 07F0  
                    l672 07C2                      l664 0794                      l656 0766  
                    l648 073B                      l586 06FB                      l674 07CC  
                    l666 079E                      l658 0770                      l588 06FD  
                    l676 07D9                      l668 07AB                      l678 07E3  
                    u100 070C                      u101 070B                      u110 074F  
                    u111 074E                      u120 0766                      u121 0765  
                    u130 077D                      u131 077C                      u115 074B  
                    u140 0794                      u141 0793                      u125 0762  
                    u150 07AB                      u151 07AA                      u135 0779  
                    u160 07C2                      u161 07C1                      u145 0790  
                    u170 07D9                      u171 07D8                      u155 07A7  
                    u180 07F0                      u181 07EF                      u165 07BE  
                    u175 07D5                      u185 07EC                     _main 0732  
                   btemp 007E                     start 0002                    ?_main 0070  
                  main@x 0073                    wtemp0 007E          __initialization 07FD  
           __end_of_main 07FD                   ??_main 0072                   _ADRESH 009C  
                 _ADRESL 009B         __end_of_init_adc 0706         __end_of_init_pot 06FB  
__end_of__initialization 07FD           __pcstackCOMMON 0070               __pmaintext 0732  
              ?_init_adc 0070                ?_init_pot 0070                  __ptext1 0706  
                __ptext2 06F7                  __ptext3 0711                  __ptext4 06FB  
      __end_of_init_leds 0732     end_of_initialization 07FD               ??_init_adc 0070  
             ??_init_pot 0070               _valeur_adc 0706                _TRISBbits 008D  
              _TRISDbits 008F      start_initialization 07FD              ?_valeur_adc 0070  
              ___latbits 0003                _init_leds 0711                 _LATBbits 010D  
               _LATDbits 010F               _ADCON0bits 009D               _ADCON1bits 009E  
             ?_init_leds 0070               _ANSELAbits 018C                 _init_adc 06FB  
               _init_pot 06F7             ??_valeur_adc 0072              ??_init_leds 0070  
     __end_of_valeur_adc 0711  
