

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb  6 17:29:51 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16LF1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 06/07/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16LF1719 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000F                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0016                     	;# 
   103     0017                     	;# 
   104     0018                     	;# 
   105     0019                     	;# 
   106     001A                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     008C                     	;# 
   110     008D                     	;# 
   111     008E                     	;# 
   112     008F                     	;# 
   113     0090                     	;# 
   114     0091                     	;# 
   115     0092                     	;# 
   116     0093                     	;# 
   117     0095                     	;# 
   118     0096                     	;# 
   119     0097                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009A                     	;# 
   123     009B                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     0110                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011A                     	;# 
   144     011B                     	;# 
   145     011B                     	;# 
   146     011C                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     018E                     	;# 
   150     018F                     	;# 
   151     0190                     	;# 
   152     0191                     	;# 
   153     0191                     	;# 
   154     0192                     	;# 
   155     0193                     	;# 
   156     0193                     	;# 
   157     0194                     	;# 
   158     0195                     	;# 
   159     0196                     	;# 
   160     0199                     	;# 
   161     0199                     	;# 
   162     0199                     	;# 
   163     019A                     	;# 
   164     019A                     	;# 
   165     019A                     	;# 
   166     019B                     	;# 
   167     019B                     	;# 
   168     019B                     	;# 
   169     019B                     	;# 
   170     019B                     	;# 
   171     019C                     	;# 
   172     019C                     	;# 
   173     019C                     	;# 
   174     019D                     	;# 
   175     019D                     	;# 
   176     019D                     	;# 
   177     019E                     	;# 
   178     019E                     	;# 
   179     019E                     	;# 
   180     019F                     	;# 
   181     019F                     	;# 
   182     019F                     	;# 
   183     019F                     	;# 
   184     019F                     	;# 
   185     020C                     	;# 
   186     020D                     	;# 
   187     020E                     	;# 
   188     020F                     	;# 
   189     0210                     	;# 
   190     0211                     	;# 
   191     0211                     	;# 
   192     0212                     	;# 
   193     0212                     	;# 
   194     0213                     	;# 
   195     0213                     	;# 
   196     0214                     	;# 
   197     0214                     	;# 
   198     0215                     	;# 
   199     0215                     	;# 
   200     0215                     	;# 
   201     0215                     	;# 
   202     0216                     	;# 
   203     0216                     	;# 
   204     0217                     	;# 
   205     0217                     	;# 
   206     028C                     	;# 
   207     028D                     	;# 
   208     028E                     	;# 
   209     028F                     	;# 
   210     0290                     	;# 
   211     0291                     	;# 
   212     0291                     	;# 
   213     0292                     	;# 
   214     0293                     	;# 
   215     0293                     	;# 
   216     0298                     	;# 
   217     0298                     	;# 
   218     0299                     	;# 
   219     029A                     	;# 
   220     029A                     	;# 
   221     029E                     	;# 
   222     030C                     	;# 
   223     030D                     	;# 
   224     030E                     	;# 
   225     030F                     	;# 
   226     0310                     	;# 
   227     038C                     	;# 
   228     038D                     	;# 
   229     038E                     	;# 
   230     038F                     	;# 
   231     0390                     	;# 
   232     0391                     	;# 
   233     0392                     	;# 
   234     0393                     	;# 
   235     0394                     	;# 
   236     0395                     	;# 
   237     0396                     	;# 
   238     0397                     	;# 
   239     0398                     	;# 
   240     0399                     	;# 
   241     039D                     	;# 
   242     039E                     	;# 
   243     039F                     	;# 
   244     0415                     	;# 
   245     0416                     	;# 
   246     0417                     	;# 
   247     041C                     	;# 
   248     041D                     	;# 
   249     041E                     	;# 
   250     0498                     	;# 
   251     0498                     	;# 
   252     0499                     	;# 
   253     049A                     	;# 
   254     049B                     	;# 
   255     049B                     	;# 
   256     049C                     	;# 
   257     049D                     	;# 
   258     049E                     	;# 
   259     049F                     	;# 
   260     0511                     	;# 
   261     0515                     	;# 
   262     0617                     	;# 
   263     0618                     	;# 
   264     0619                     	;# 
   265     0619                     	;# 
   266     061A                     	;# 
   267     061B                     	;# 
   268     061C                     	;# 
   269     061C                     	;# 
   270     0691                     	;# 
   271     0692                     	;# 
   272     0693                     	;# 
   273     0694                     	;# 
   274     0695                     	;# 
   275     0696                     	;# 
   276     0697                     	;# 
   277     0698                     	;# 
   278     0699                     	;# 
   279     069A                     	;# 
   280     069B                     	;# 
   281     069C                     	;# 
   282     069D                     	;# 
   283     069E                     	;# 
   284     069F                     	;# 
   285     0E0F                     	;# 
   286     0E10                     	;# 
   287     0E11                     	;# 
   288     0E12                     	;# 
   289     0E13                     	;# 
   290     0E14                     	;# 
   291     0E15                     	;# 
   292     0E17                     	;# 
   293     0E20                     	;# 
   294     0E21                     	;# 
   295     0E22                     	;# 
   296     0E24                     	;# 
   297     0E25                     	;# 
   298     0E28                     	;# 
   299     0E29                     	;# 
   300     0E2A                     	;# 
   301     0E2B                     	;# 
   302     0E90                     	;# 
   303     0E91                     	;# 
   304     0E92                     	;# 
   305     0E93                     	;# 
   306     0E94                     	;# 
   307     0E95                     	;# 
   308     0E96                     	;# 
   309     0E97                     	;# 
   310     0E98                     	;# 
   311     0E99                     	;# 
   312     0E9A                     	;# 
   313     0E9B                     	;# 
   314     0E9C                     	;# 
   315     0E9D                     	;# 
   316     0E9E                     	;# 
   317     0E9F                     	;# 
   318     0EA0                     	;# 
   319     0EA1                     	;# 
   320     0EA2                     	;# 
   321     0EA3                     	;# 
   322     0EA4                     	;# 
   323     0EA5                     	;# 
   324     0EA6                     	;# 
   325     0EA7                     	;# 
   326     0EA8                     	;# 
   327     0EA9                     	;# 
   328     0EAA                     	;# 
   329     0EAB                     	;# 
   330     0EAC                     	;# 
   331     0EAD                     	;# 
   332     0EAE                     	;# 
   333     0EAF                     	;# 
   334     0EB0                     	;# 
   335     0EB1                     	;# 
   336     0EB2                     	;# 
   337     0F0F                     	;# 
   338     0F10                     	;# 
   339     0F11                     	;# 
   340     0F12                     	;# 
   341     0F13                     	;# 
   342     0F14                     	;# 
   343     0F15                     	;# 
   344     0F16                     	;# 
   345     0F17                     	;# 
   346     0F18                     	;# 
   347     0F19                     	;# 
   348     0F1A                     	;# 
   349     0F1B                     	;# 
   350     0F1C                     	;# 
   351     0F1D                     	;# 
   352     0F1E                     	;# 
   353     0F1F                     	;# 
   354     0F20                     	;# 
   355     0F21                     	;# 
   356     0F22                     	;# 
   357     0F23                     	;# 
   358     0F24                     	;# 
   359     0F25                     	;# 
   360     0F26                     	;# 
   361     0F27                     	;# 
   362     0F28                     	;# 
   363     0F29                     	;# 
   364     0F2A                     	;# 
   365     0F2B                     	;# 
   366     0F2C                     	;# 
   367     0F2D                     	;# 
   368     0F2E                     	;# 
   369     0F2F                     	;# 
   370     0F30                     	;# 
   371     0F31                     	;# 
   372     0F32                     	;# 
   373     0F33                     	;# 
   374     0F34                     	;# 
   375     0F35                     	;# 
   376     0F36                     	;# 
   377     0F37                     	;# 
   378     0FE4                     	;# 
   379     0FE5                     	;# 
   380     0FE6                     	;# 
   381     0FE7                     	;# 
   382     0FE8                     	;# 
   383     0FE9                     	;# 
   384     0FEA                     	;# 
   385     0FEB                     	;# 
   386     0FED                     	;# 
   387     0FEE                     	;# 
   388     0FEF                     	;# 
   389     0000                     	;# 
   390     0001                     	;# 
   391     0002                     	;# 
   392     0003                     	;# 
   393     0004                     	;# 
   394     0005                     	;# 
   395     0006                     	;# 
   396     0007                     	;# 
   397     0008                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000F                     	;# 
   405     0010                     	;# 
   406     0011                     	;# 
   407     0012                     	;# 
   408     0013                     	;# 
   409     0015                     	;# 
   410     0016                     	;# 
   411     0016                     	;# 
   412     0017                     	;# 
   413     0018                     	;# 
   414     0019                     	;# 
   415     001A                     	;# 
   416     001B                     	;# 
   417     001C                     	;# 
   418     008C                     	;# 
   419     008D                     	;# 
   420     008E                     	;# 
   421     008F                     	;# 
   422     0090                     	;# 
   423     0091                     	;# 
   424     0092                     	;# 
   425     0093                     	;# 
   426     0095                     	;# 
   427     0096                     	;# 
   428     0097                     	;# 
   429     0098                     	;# 
   430     0099                     	;# 
   431     009A                     	;# 
   432     009B                     	;# 
   433     009B                     	;# 
   434     009C                     	;# 
   435     009D                     	;# 
   436     009E                     	;# 
   437     009F                     	;# 
   438     010C                     	;# 
   439     010D                     	;# 
   440     010E                     	;# 
   441     010F                     	;# 
   442     0110                     	;# 
   443     0111                     	;# 
   444     0112                     	;# 
   445     0113                     	;# 
   446     0114                     	;# 
   447     0115                     	;# 
   448     0116                     	;# 
   449     0117                     	;# 
   450     0118                     	;# 
   451     0119                     	;# 
   452     011A                     	;# 
   453     011B                     	;# 
   454     011B                     	;# 
   455     011C                     	;# 
   456     018C                     	;# 
   457     018D                     	;# 
   458     018E                     	;# 
   459     018F                     	;# 
   460     0190                     	;# 
   461     0191                     	;# 
   462     0191                     	;# 
   463     0192                     	;# 
   464     0193                     	;# 
   465     0193                     	;# 
   466     0194                     	;# 
   467     0195                     	;# 
   468     0196                     	;# 
   469     0199                     	;# 
   470     0199                     	;# 
   471     0199                     	;# 
   472     019A                     	;# 
   473     019A                     	;# 
   474     019A                     	;# 
   475     019B                     	;# 
   476     019B                     	;# 
   477     019B                     	;# 
   478     019B                     	;# 
   479     019B                     	;# 
   480     019C                     	;# 
   481     019C                     	;# 
   482     019C                     	;# 
   483     019D                     	;# 
   484     019D                     	;# 
   485     019D                     	;# 
   486     019E                     	;# 
   487     019E                     	;# 
   488     019E                     	;# 
   489     019F                     	;# 
   490     019F                     	;# 
   491     019F                     	;# 
   492     019F                     	;# 
   493     019F                     	;# 
   494     020C                     	;# 
   495     020D                     	;# 
   496     020E                     	;# 
   497     020F                     	;# 
   498     0210                     	;# 
   499     0211                     	;# 
   500     0211                     	;# 
   501     0212                     	;# 
   502     0212                     	;# 
   503     0213                     	;# 
   504     0213                     	;# 
   505     0214                     	;# 
   506     0214                     	;# 
   507     0215                     	;# 
   508     0215                     	;# 
   509     0215                     	;# 
   510     0215                     	;# 
   511     0216                     	;# 
   512     0216                     	;# 
   513     0217                     	;# 
   514     0217                     	;# 
   515     028C                     	;# 
   516     028D                     	;# 
   517     028E                     	;# 
   518     028F                     	;# 
   519     0290                     	;# 
   520     0291                     	;# 
   521     0291                     	;# 
   522     0292                     	;# 
   523     0293                     	;# 
   524     0293                     	;# 
   525     0298                     	;# 
   526     0298                     	;# 
   527     0299                     	;# 
   528     029A                     	;# 
   529     029A                     	;# 
   530     029E                     	;# 
   531     030C                     	;# 
   532     030D                     	;# 
   533     030E                     	;# 
   534     030F                     	;# 
   535     0310                     	;# 
   536     038C                     	;# 
   537     038D                     	;# 
   538     038E                     	;# 
   539     038F                     	;# 
   540     0390                     	;# 
   541     0391                     	;# 
   542     0392                     	;# 
   543     0393                     	;# 
   544     0394                     	;# 
   545     0395                     	;# 
   546     0396                     	;# 
   547     0397                     	;# 
   548     0398                     	;# 
   549     0399                     	;# 
   550     039D                     	;# 
   551     039E                     	;# 
   552     039F                     	;# 
   553     0415                     	;# 
   554     0416                     	;# 
   555     0417                     	;# 
   556     041C                     	;# 
   557     041D                     	;# 
   558     041E                     	;# 
   559     0498                     	;# 
   560     0498                     	;# 
   561     0499                     	;# 
   562     049A                     	;# 
   563     049B                     	;# 
   564     049B                     	;# 
   565     049C                     	;# 
   566     049D                     	;# 
   567     049E                     	;# 
   568     049F                     	;# 
   569     0511                     	;# 
   570     0515                     	;# 
   571     0617                     	;# 
   572     0618                     	;# 
   573     0619                     	;# 
   574     0619                     	;# 
   575     061A                     	;# 
   576     061B                     	;# 
   577     061C                     	;# 
   578     061C                     	;# 
   579     0691                     	;# 
   580     0692                     	;# 
   581     0693                     	;# 
   582     0694                     	;# 
   583     0695                     	;# 
   584     0696                     	;# 
   585     0697                     	;# 
   586     0698                     	;# 
   587     0699                     	;# 
   588     069A                     	;# 
   589     069B                     	;# 
   590     069C                     	;# 
   591     069D                     	;# 
   592     069E                     	;# 
   593     069F                     	;# 
   594     0E0F                     	;# 
   595     0E10                     	;# 
   596     0E11                     	;# 
   597     0E12                     	;# 
   598     0E13                     	;# 
   599     0E14                     	;# 
   600     0E15                     	;# 
   601     0E17                     	;# 
   602     0E20                     	;# 
   603     0E21                     	;# 
   604     0E22                     	;# 
   605     0E24                     	;# 
   606     0E25                     	;# 
   607     0E28                     	;# 
   608     0E29                     	;# 
   609     0E2A                     	;# 
   610     0E2B                     	;# 
   611     0E90                     	;# 
   612     0E91                     	;# 
   613     0E92                     	;# 
   614     0E93                     	;# 
   615     0E94                     	;# 
   616     0E95                     	;# 
   617     0E96                     	;# 
   618     0E97                     	;# 
   619     0E98                     	;# 
   620     0E99                     	;# 
   621     0E9A                     	;# 
   622     0E9B                     	;# 
   623     0E9C                     	;# 
   624     0E9D                     	;# 
   625     0E9E                     	;# 
   626     0E9F                     	;# 
   627     0EA0                     	;# 
   628     0EA1                     	;# 
   629     0EA2                     	;# 
   630     0EA3                     	;# 
   631     0EA4                     	;# 
   632     0EA5                     	;# 
   633     0EA6                     	;# 
   634     0EA7                     	;# 
   635     0EA8                     	;# 
   636     0EA9                     	;# 
   637     0EAA                     	;# 
   638     0EAB                     	;# 
   639     0EAC                     	;# 
   640     0EAD                     	;# 
   641     0EAE                     	;# 
   642     0EAF                     	;# 
   643     0EB0                     	;# 
   644     0EB1                     	;# 
   645     0EB2                     	;# 
   646     0F0F                     	;# 
   647     0F10                     	;# 
   648     0F11                     	;# 
   649     0F12                     	;# 
   650     0F13                     	;# 
   651     0F14                     	;# 
   652     0F15                     	;# 
   653     0F16                     	;# 
   654     0F17                     	;# 
   655     0F18                     	;# 
   656     0F19                     	;# 
   657     0F1A                     	;# 
   658     0F1B                     	;# 
   659     0F1C                     	;# 
   660     0F1D                     	;# 
   661     0F1E                     	;# 
   662     0F1F                     	;# 
   663     0F20                     	;# 
   664     0F21                     	;# 
   665     0F22                     	;# 
   666     0F23                     	;# 
   667     0F24                     	;# 
   668     0F25                     	;# 
   669     0F26                     	;# 
   670     0F27                     	;# 
   671     0F28                     	;# 
   672     0F29                     	;# 
   673     0F2A                     	;# 
   674     0F2B                     	;# 
   675     0F2C                     	;# 
   676     0F2D                     	;# 
   677     0F2E                     	;# 
   678     0F2F                     	;# 
   679     0F30                     	;# 
   680     0F31                     	;# 
   681     0F32                     	;# 
   682     0F33                     	;# 
   683     0F34                     	;# 
   684     0F35                     	;# 
   685     0F36                     	;# 
   686     0F37                     	;# 
   687     0FE4                     	;# 
   688     0FE5                     	;# 
   689     0FE6                     	;# 
   690     0FE7                     	;# 
   691     0FE8                     	;# 
   692     0FE9                     	;# 
   693     0FEA                     	;# 
   694     0FEB                     	;# 
   695     0FED                     	;# 
   696     0FEE                     	;# 
   697     0FEF                     	;# 
   698     0000                     	;# 
   699     0001                     	;# 
   700     0002                     	;# 
   701     0003                     	;# 
   702     0004                     	;# 
   703     0005                     	;# 
   704     0006                     	;# 
   705     0007                     	;# 
   706     0008                     	;# 
   707     0009                     	;# 
   708     000A                     	;# 
   709     000B                     	;# 
   710     000C                     	;# 
   711     000D                     	;# 
   712     000E                     	;# 
   713     000F                     	;# 
   714     0010                     	;# 
   715     0011                     	;# 
   716     0012                     	;# 
   717     0013                     	;# 
   718     0015                     	;# 
   719     0016                     	;# 
   720     0016                     	;# 
   721     0017                     	;# 
   722     0018                     	;# 
   723     0019                     	;# 
   724     001A                     	;# 
   725     001B                     	;# 
   726     001C                     	;# 
   727     008C                     	;# 
   728     008D                     	;# 
   729     008E                     	;# 
   730     008F                     	;# 
   731     0090                     	;# 
   732     0091                     	;# 
   733     0092                     	;# 
   734     0093                     	;# 
   735     0095                     	;# 
   736     0096                     	;# 
   737     0097                     	;# 
   738     0098                     	;# 
   739     0099                     	;# 
   740     009A                     	;# 
   741     009B                     	;# 
   742     009B                     	;# 
   743     009C                     	;# 
   744     009D                     	;# 
   745     009E                     	;# 
   746     009F                     	;# 
   747     010C                     	;# 
   748     010D                     	;# 
   749     010E                     	;# 
   750     010F                     	;# 
   751     0110                     	;# 
   752     0111                     	;# 
   753     0112                     	;# 
   754     0113                     	;# 
   755     0114                     	;# 
   756     0115                     	;# 
   757     0116                     	;# 
   758     0117                     	;# 
   759     0118                     	;# 
   760     0119                     	;# 
   761     011A                     	;# 
   762     011B                     	;# 
   763     011B                     	;# 
   764     011C                     	;# 
   765     018C                     	;# 
   766     018D                     	;# 
   767     018E                     	;# 
   768     018F                     	;# 
   769     0190                     	;# 
   770     0191                     	;# 
   771     0191                     	;# 
   772     0192                     	;# 
   773     0193                     	;# 
   774     0193                     	;# 
   775     0194                     	;# 
   776     0195                     	;# 
   777     0196                     	;# 
   778     0199                     	;# 
   779     0199                     	;# 
   780     0199                     	;# 
   781     019A                     	;# 
   782     019A                     	;# 
   783     019A                     	;# 
   784     019B                     	;# 
   785     019B                     	;# 
   786     019B                     	;# 
   787     019B                     	;# 
   788     019B                     	;# 
   789     019C                     	;# 
   790     019C                     	;# 
   791     019C                     	;# 
   792     019D                     	;# 
   793     019D                     	;# 
   794     019D                     	;# 
   795     019E                     	;# 
   796     019E                     	;# 
   797     019E                     	;# 
   798     019F                     	;# 
   799     019F                     	;# 
   800     019F                     	;# 
   801     019F                     	;# 
   802     019F                     	;# 
   803     020C                     	;# 
   804     020D                     	;# 
   805     020E                     	;# 
   806     020F                     	;# 
   807     0210                     	;# 
   808     0211                     	;# 
   809     0211                     	;# 
   810     0212                     	;# 
   811     0212                     	;# 
   812     0213                     	;# 
   813     0213                     	;# 
   814     0214                     	;# 
   815     0214                     	;# 
   816     0215                     	;# 
   817     0215                     	;# 
   818     0215                     	;# 
   819     0215                     	;# 
   820     0216                     	;# 
   821     0216                     	;# 
   822     0217                     	;# 
   823     0217                     	;# 
   824     028C                     	;# 
   825     028D                     	;# 
   826     028E                     	;# 
   827     028F                     	;# 
   828     0290                     	;# 
   829     0291                     	;# 
   830     0291                     	;# 
   831     0292                     	;# 
   832     0293                     	;# 
   833     0293                     	;# 
   834     0298                     	;# 
   835     0298                     	;# 
   836     0299                     	;# 
   837     029A                     	;# 
   838     029A                     	;# 
   839     029E                     	;# 
   840     030C                     	;# 
   841     030D                     	;# 
   842     030E                     	;# 
   843     030F                     	;# 
   844     0310                     	;# 
   845     038C                     	;# 
   846     038D                     	;# 
   847     038E                     	;# 
   848     038F                     	;# 
   849     0390                     	;# 
   850     0391                     	;# 
   851     0392                     	;# 
   852     0393                     	;# 
   853     0394                     	;# 
   854     0395                     	;# 
   855     0396                     	;# 
   856     0397                     	;# 
   857     0398                     	;# 
   858     0399                     	;# 
   859     039D                     	;# 
   860     039E                     	;# 
   861     039F                     	;# 
   862     0415                     	;# 
   863     0416                     	;# 
   864     0417                     	;# 
   865     041C                     	;# 
   866     041D                     	;# 
   867     041E                     	;# 
   868     0498                     	;# 
   869     0498                     	;# 
   870     0499                     	;# 
   871     049A                     	;# 
   872     049B                     	;# 
   873     049B                     	;# 
   874     049C                     	;# 
   875     049D                     	;# 
   876     049E                     	;# 
   877     049F                     	;# 
   878     0511                     	;# 
   879     0515                     	;# 
   880     0617                     	;# 
   881     0618                     	;# 
   882     0619                     	;# 
   883     0619                     	;# 
   884     061A                     	;# 
   885     061B                     	;# 
   886     061C                     	;# 
   887     061C                     	;# 
   888     0691                     	;# 
   889     0692                     	;# 
   890     0693                     	;# 
   891     0694                     	;# 
   892     0695                     	;# 
   893     0696                     	;# 
   894     0697                     	;# 
   895     0698                     	;# 
   896     0699                     	;# 
   897     069A                     	;# 
   898     069B                     	;# 
   899     069C                     	;# 
   900     069D                     	;# 
   901     069E                     	;# 
   902     069F                     	;# 
   903     0E0F                     	;# 
   904     0E10                     	;# 
   905     0E11                     	;# 
   906     0E12                     	;# 
   907     0E13                     	;# 
   908     0E14                     	;# 
   909     0E15                     	;# 
   910     0E17                     	;# 
   911     0E20                     	;# 
   912     0E21                     	;# 
   913     0E22                     	;# 
   914     0E24                     	;# 
   915     0E25                     	;# 
   916     0E28                     	;# 
   917     0E29                     	;# 
   918     0E2A                     	;# 
   919     0E2B                     	;# 
   920     0E90                     	;# 
   921     0E91                     	;# 
   922     0E92                     	;# 
   923     0E93                     	;# 
   924     0E94                     	;# 
   925     0E95                     	;# 
   926     0E96                     	;# 
   927     0E97                     	;# 
   928     0E98                     	;# 
   929     0E99                     	;# 
   930     0E9A                     	;# 
   931     0E9B                     	;# 
   932     0E9C                     	;# 
   933     0E9D                     	;# 
   934     0E9E                     	;# 
   935     0E9F                     	;# 
   936     0EA0                     	;# 
   937     0EA1                     	;# 
   938     0EA2                     	;# 
   939     0EA3                     	;# 
   940     0EA4                     	;# 
   941     0EA5                     	;# 
   942     0EA6                     	;# 
   943     0EA7                     	;# 
   944     0EA8                     	;# 
   945     0EA9                     	;# 
   946     0EAA                     	;# 
   947     0EAB                     	;# 
   948     0EAC                     	;# 
   949     0EAD                     	;# 
   950     0EAE                     	;# 
   951     0EAF                     	;# 
   952     0EB0                     	;# 
   953     0EB1                     	;# 
   954     0EB2                     	;# 
   955     0F0F                     	;# 
   956     0F10                     	;# 
   957     0F11                     	;# 
   958     0F12                     	;# 
   959     0F13                     	;# 
   960     0F14                     	;# 
   961     0F15                     	;# 
   962     0F16                     	;# 
   963     0F17                     	;# 
   964     0F18                     	;# 
   965     0F19                     	;# 
   966     0F1A                     	;# 
   967     0F1B                     	;# 
   968     0F1C                     	;# 
   969     0F1D                     	;# 
   970     0F1E                     	;# 
   971     0F1F                     	;# 
   972     0F20                     	;# 
   973     0F21                     	;# 
   974     0F22                     	;# 
   975     0F23                     	;# 
   976     0F24                     	;# 
   977     0F25                     	;# 
   978     0F26                     	;# 
   979     0F27                     	;# 
   980     0F28                     	;# 
   981     0F29                     	;# 
   982     0F2A                     	;# 
   983     0F2B                     	;# 
   984     0F2C                     	;# 
   985     0F2D                     	;# 
   986     0F2E                     	;# 
   987     0F2F                     	;# 
   988     0F30                     	;# 
   989     0F31                     	;# 
   990     0F32                     	;# 
   991     0F33                     	;# 
   992     0F34                     	;# 
   993     0F35                     	;# 
   994     0F36                     	;# 
   995     0F37                     	;# 
   996     0FE4                     	;# 
   997     0FE5                     	;# 
   998     0FE6                     	;# 
   999     0FE7                     	;# 
  1000     0FE8                     	;# 
  1001     0FE9                     	;# 
  1002     0FEA                     	;# 
  1003     0FEB                     	;# 
  1004     0FED                     	;# 
  1005     0FEE                     	;# 
  1006     0FEF                     	;# 
  1007                           
  1008                           	psect	idataBANK0
  1009     049E                     __pidataBANK0:
  1010                           
  1011                           ;initializer for _offset
  1012     049E  3401               	retlw	1
  1013                           
  1014                           ;initializer for _String
  1015     049F  3458               	retlw	88
  1016     04A0  3458               	retlw	88
  1017     000D                     _PORTBbits	set	13
  1018     0011                     _PIR1bits	set	17
  1019     000B                     _INTCONbits	set	11
  1020     009B                     _ADRESL	set	155
  1021     009C                     _ADRESH	set	156
  1022     009E                     _ADCON1bits	set	158
  1023     009D                     _ADCON0bits	set	157
  1024     0091                     _PIE1bits	set	145
  1025     008E                     _TRISCbits	set	142
  1026     008C                     _TRISAbits	set	140
  1027     010E                     _LATCbits	set	270
  1028     010C                     _LATAbits	set	268
  1029     0199                     _RC1REG	set	409
  1030     019A                     _TX1REG	set	410
  1031     018C                     _ANSELAbits	set	396
  1032     019D                     _RC1STAbits	set	413
  1033     019B                     _SP1BRGLbits	set	411
  1034     019C                     _SP1BRGHbits	set	412
  1035     019F                     _BAUD1CONbits	set	415
  1036     019E                     _TX1STAbits	set	414
  1037     018E                     _ANSELCbits	set	398
  1038     0214                     _SSP1STATbits	set	532
  1039     0211                     _SSP1BUF	set	529
  1040     0215                     _SSP1CON1bits	set	533
  1041     0212                     _SSP1ADD	set	530
  1042     0215                     _SSP1CON1	set	533
  1043     0214                     _SSP1STAT	set	532
  1044     0E20                     _SSPCLKPPSbits	set	3616
  1045     0E21                     _SSPDATPPSbits	set	3617
  1046     0E24                     _RXPPSbits	set	3620
  1047     0EA5                     _RC5PPSbits	set	3749
  1048     0EA3                     _RC3PPSbits	set	3747
  1049     0EA6                     _RC6PPSbits	set	3750
  1050                           
  1051                           	psect	stringtext1
  1052     04A1                     __pstringtext1:
  1053     04A1                     STR_1:
  1054     04A1  3425               	retlw	37	;'%'
  1055     04A2  3464               	retlw	100	;'d'
  1056     04A3  3400               	retlw	0
  1057                           
  1058                           	psect	stringtext2
  1059     0000                     __pstringtext2:
  1060                           
  1061                           	psect	cinit
  1062     001A                     start_initialization:	
  1063                           ; #config settings
  1064                           
  1065     001A                     __initialization:
  1066                           
  1067                           ; Initialize objects allocated to BANK0
  1068     001A  3184  249E  3180   	fcall	__pidataBANK0	;fetch initializer
  1069     001D  00D4               	movwf	__pdataBANK0& (0+127)
  1070     001E  3184  249F  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1071     0021  00D5               	movwf	(__pdataBANK0+1)& (0+127)
  1072     0022  3184  24A0  3180   	fcall	__pidataBANK0+2	;fetch initializer
  1073     0025  00D6               	movwf	(__pdataBANK0+2)& (0+127)
  1074                           
  1075                           ; Clear objects allocated to BANK0
  1076     0026  304D               	movlw	low __pbssBANK0
  1077     0027  0084               	movwf	4
  1078     0028  3000               	movlw	high __pbssBANK0
  1079     0029  0085               	movwf	5
  1080     002A  3007               	movlw	7
  1081     002B  3184  2489  3180   	fcall	clear_ram0
  1082                           
  1083                           ; Clear objects allocated to BANK1
  1084     002E  30A0               	movlw	low __pbssBANK1
  1085     002F  0084               	movwf	4
  1086     0030  3000               	movlw	high __pbssBANK1
  1087     0031  0085               	movwf	5
  1088     0032  3020               	movlw	32
  1089     0033  3184  2489  3180   	fcall	clear_ram0
  1090     0036                     end_of_initialization:	
  1091                           ;End of C runtime variable initialization code
  1092                           
  1093     0036                     __end_of__initialization:
  1094     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1095     0037  0020               	movlb	0
  1096     0038  3182  2A86         	ljmp	_main	;jump to C main() function
  1097                           
  1098                           	psect	bssBANK0
  1099     004D                     __pbssBANK0:
  1100     004D                     _width:
  1101     004D                     	ds	2
  1102     004F                     _prec:
  1103     004F                     	ds	2
  1104     0051                     _DebugValue:
  1105     0051                     	ds	2
  1106     0053                     _flags:
  1107     0053                     	ds	1
  1108                           
  1109                           	psect	dataBANK0
  1110     0054                     __pdataBANK0:
  1111     0054                     _offset:
  1112     0054                     	ds	1
  1113     0055                     _String:
  1114     0055                     	ds	2
  1115                           
  1116                           	psect	bssBANK1
  1117     00A0                     __pbssBANK1:
  1118     00A0                     _dbuf:
  1119     00A0                     	ds	32
  1120                           
  1121                           	psect	clrtext
  1122     0489                     clear_ram0:	
  1123                           ;	Called with FSR0 containing the base address, and
  1124                           ;	WREG with the size to clear
  1125                           
  1126     0489  0064               	clrwdt	;clear the watchdog before getting into this loop
  1127     048A                     clrloop0:
  1128     048A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1129     048B  3101               	addfsr 0,1
  1130     048C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1131     048D  2C8A               	goto	clrloop0	;have we reached the end yet?
  1132     048E  3400               	retlw	0	;all done for this memory range, return
  1133                           
  1134                           	psect	cstackCOMMON
  1135     0070                     __pcstackCOMMON:
  1136     0070                     ?_LCD_WriteCommand:
  1137     0070                     ?_SPI_Exchange8bit:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140     0070                     ??_SPI_Exchange8bit:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143     0070                     ?_SPI_InitializePins:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146     0070                     ??_SPI_InitializePins:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149     0070                     ?_SPI_Initialize:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152     0070                     ??_SPI_Initialize:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155     0070                     ?_putch:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158     0070                     ??_putch:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161     0070                     ?_LCD_InitializePins:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164     0070                     ??_LCD_InitializePins:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167     0070                     ?_LCD_Initialize:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170     0070                     ?_LCD_WriteByte:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173     0070                     ?_LCD_WriteString:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176     0070                     ?_LCD_Clear:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179     0070                     ?_init:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182     0070                     ?_init_pot:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185     0070                     ??_init_pot:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188     0070                     ?_init_adc:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191     0070                     ??_init_adc:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194     0070                     ?_isr:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197     0070                     ??_isr:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200     0070                     ?_setOffset:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203     0070                     ?_chiffrer:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206     0070                     ??_chiffrer:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209     0070                     ?_dechiffrer:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212     0070                     ??_dechiffrer:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215     0070                     ?_charToRien:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218     0070                     ?_main:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221     0070                     ?_fputc:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224     0070                     ?___wmul:	
  1225                           ; 2 bytes @ 0x0
  1226                           
  1227     0070                     ?___awmod:	
  1228                           ; 2 bytes @ 0x0
  1229                           
  1230     0070                     SPI_Exchange8bit@data:	
  1231                           ; 2 bytes @ 0x0
  1232                           
  1233     0070                     putch@c:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236     0070                     ___wmul@multiplier:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239     0070                     ___awmod@divisor:	
  1240                           ; 2 bytes @ 0x0
  1241                           
  1242     0070                     fputc@c:	
  1243                           ; 2 bytes @ 0x0
  1244                           
  1245                           
  1246                           ; 2 bytes @ 0x0
  1247     0070                     	ds	1
  1248     0071                     ?_LCD_WriteIOExpander:
  1249     0071                     LCD_WriteIOExpander@data:	
  1250                           ; 1 bytes @ 0x1
  1251                           
  1252                           
  1253                           ; 1 bytes @ 0x1
  1254     0071                     	ds	1
  1255     0072                     ??_LCD_WriteIOExpander:
  1256     0072                     LCD_WriteIOExpander@reg:	
  1257                           ; 1 bytes @ 0x2
  1258                           
  1259     0072                     fputc@fp:	
  1260                           ; 1 bytes @ 0x2
  1261                           
  1262     0072                     ___wmul@multiplicand:	
  1263                           ; 1 bytes @ 0x2
  1264                           
  1265     0072                     ___awmod@dividend:	
  1266                           ; 2 bytes @ 0x2
  1267                           
  1268                           
  1269                           ; 2 bytes @ 0x2
  1270     0072                     	ds	1
  1271     0073                     ??_LCD_WriteCommand:
  1272     0073                     ??_fputc:	
  1273                           ; 1 bytes @ 0x3
  1274                           
  1275     0073                     ??_LCD_WriteByte:	
  1276                           ; 1 bytes @ 0x3
  1277                           
  1278     0073                     LCD_WriteCommand@cmd:	
  1279                           ; 1 bytes @ 0x3
  1280                           
  1281     0073                     LCD_WriteByte@data:	
  1282                           ; 1 bytes @ 0x3
  1283                           
  1284                           
  1285                           ; 1 bytes @ 0x3
  1286     0073                     	ds	1
  1287     0074                     ??_LCD_Initialize:
  1288     0074                     ??_LCD_WriteString:	
  1289                           ; 1 bytes @ 0x4
  1290                           
  1291     0074                     ?_LCD_GoTo:	
  1292                           ; 1 bytes @ 0x4
  1293                           
  1294     0074                     ??___wmul:	
  1295                           ; 1 bytes @ 0x4
  1296                           
  1297     0074                     ??___awmod:	
  1298                           ; 1 bytes @ 0x4
  1299                           
  1300     0074                     LCD_GoTo@column:	
  1301                           ; 1 bytes @ 0x4
  1302                           
  1303     0074                     ___wmul@product:	
  1304                           ; 1 bytes @ 0x4
  1305                           
  1306                           
  1307                           ; 2 bytes @ 0x4
  1308     0074                     	ds	1
  1309     0075                     ??_LCD_GoTo:
  1310     0075                     LCD_WriteString@i:	
  1311                           ; 1 bytes @ 0x5
  1312                           
  1313     0075                     ___awmod@counter:	
  1314                           ; 1 bytes @ 0x5
  1315                           
  1316     0075                     _LCD_GoTo$119:	
  1317                           ; 1 bytes @ 0x5
  1318                           
  1319                           
  1320                           ; 2 bytes @ 0x5
  1321     0075                     	ds	1
  1322     0076                     ??_init:
  1323     0076                     ?___awdiv:	
  1324                           ; 1 bytes @ 0x6
  1325                           
  1326     0076                     LCD_WriteString@data:	
  1327                           ; 2 bytes @ 0x6
  1328                           
  1329     0076                     ___awmod@sign:	
  1330                           ; 1 bytes @ 0x6
  1331                           
  1332     0076                     ___awdiv@divisor:	
  1333                           ; 1 bytes @ 0x6
  1334                           
  1335                           
  1336                           ; 2 bytes @ 0x6
  1337     0076                     	ds	1
  1338     0077                     ?_abs:
  1339     0077                     LCD_GoTo@pos:	
  1340                           ; 2 bytes @ 0x7
  1341                           
  1342     0077                     abs@a:	
  1343                           ; 1 bytes @ 0x7
  1344                           
  1345                           
  1346                           ; 2 bytes @ 0x7
  1347     0077                     	ds	1
  1348     0078                     LCD_GoTo@row:
  1349     0078                     ___awdiv@dividend:	
  1350                           ; 1 bytes @ 0x8
  1351                           
  1352                           
  1353                           ; 2 bytes @ 0x8
  1354     0078                     	ds	1
  1355     0079                     ??_abs:
  1356     0079                     ??_LCD_Clear:	
  1357                           ; 1 bytes @ 0x9
  1358                           
  1359                           
  1360                           ; 1 bytes @ 0x9
  1361     0079                     	ds	1
  1362     007A                     ??___awdiv:
  1363                           
  1364                           ; 1 bytes @ 0xA
  1365     007A                     	ds	1
  1366     007B                     ??_vfprintf:
  1367     007B                     ??_charToRien:	
  1368                           ; 1 bytes @ 0xB
  1369                           
  1370                           
  1371                           ; 1 bytes @ 0xB
  1372     007B                     	ds	1
  1373     007C                     ??_sprintf:
  1374     007C                     ??_setOffset:	
  1375                           ; 1 bytes @ 0xC
  1376                           
  1377     007C                     setOffset@potar:	
  1378                           ; 1 bytes @ 0xC
  1379                           
  1380                           
  1381                           ; 2 bytes @ 0xC
  1382     007C                     	ds	2
  1383                           
  1384                           	psect	cstackBANK0
  1385     0020                     __pcstackBANK0:
  1386     0020                     ___awdiv@counter:
  1387                           
  1388                           ; 1 bytes @ 0x0
  1389     0020                     	ds	1
  1390     0021                     ___awdiv@sign:
  1391                           
  1392                           ; 1 bytes @ 0x1
  1393     0021                     	ds	1
  1394     0022                     ___awdiv@quotient:
  1395                           
  1396                           ; 2 bytes @ 0x2
  1397     0022                     	ds	2
  1398     0024                     ?_vfpfcnvrt:
  1399     0024                     charToRien@unite:	
  1400                           ; 1 bytes @ 0x4
  1401                           
  1402     0024                     vfpfcnvrt@fmt:	
  1403                           ; 1 bytes @ 0x4
  1404                           
  1405                           
  1406                           ; 1 bytes @ 0x4
  1407     0024                     	ds	1
  1408     0025                     charToRien@dizaines:
  1409     0025                     vfpfcnvrt@ap:	
  1410                           ; 1 bytes @ 0x5
  1411                           
  1412                           
  1413                           ; 1 bytes @ 0x5
  1414     0025                     	ds	1
  1415     0026                     ??_vfpfcnvrt:
  1416     0026                     charToRien@nombre:	
  1417                           ; 1 bytes @ 0x6
  1418                           
  1419                           
  1420                           ; 1 bytes @ 0x6
  1421     0026                     	ds	4
  1422     002A                     vfpfcnvrt@done:
  1423                           
  1424                           ; 1 bytes @ 0xA
  1425     002A                     	ds	1
  1426     002B                     vfpfcnvrt@fp:
  1427                           
  1428                           ; 1 bytes @ 0xB
  1429     002B                     	ds	1
  1430     002C                     vfpfcnvrt@cp:
  1431                           
  1432                           ; 2 bytes @ 0xC
  1433     002C                     	ds	2
  1434     002E                     vfpfcnvrt@convarg:
  1435                           
  1436                           ; 4 bytes @ 0xE
  1437     002E                     	ds	4
  1438     0032                     vfpfcnvrt@c:
  1439                           
  1440                           ; 1 bytes @ 0x12
  1441     0032                     	ds	1
  1442     0033                     ?_vfprintf:
  1443     0033                     vfprintf@fmt:	
  1444                           ; 2 bytes @ 0x13
  1445                           
  1446                           
  1447                           ; 2 bytes @ 0x13
  1448     0033                     	ds	2
  1449     0035                     vfprintf@ap:
  1450                           
  1451                           ; 1 bytes @ 0x15
  1452     0035                     	ds	1
  1453     0036                     vfprintf@fp:
  1454                           
  1455                           ; 1 bytes @ 0x16
  1456     0036                     	ds	1
  1457     0037                     vfprintf@cfmt:
  1458                           
  1459                           ; 2 bytes @ 0x17
  1460     0037                     	ds	2
  1461     0039                     ?_sprintf:
  1462     0039                     sprintf@s:	
  1463                           ; 2 bytes @ 0x19
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0x19
  1467     0039                     	ds	2
  1468     003B                     sprintf@fmt:
  1469                           
  1470                           ; 2 bytes @ 0x1B
  1471     003B                     	ds	4
  1472     003F                     sprintf@ap:
  1473                           
  1474                           ; 1 bytes @ 0x1F
  1475     003F                     	ds	1
  1476     0040                     sprintf@f:
  1477                           
  1478                           ; 11 bytes @ 0x20
  1479     0040                     	ds	11
  1480     004B                     ??_main:
  1481                           
  1482                           ; 1 bytes @ 0x2B
  1483     004B                     	ds	2
  1484                           
  1485                           	psect	maintext
  1486     0286                     __pmaintext:	
  1487 ;;
  1488 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1489 ;;
  1490 ;; *************** function _main *****************
  1491 ;; Defined at:
  1492 ;;		line 111 in file "main.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : B1F/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1510 ;;Total ram usage:        2 bytes
  1511 ;; Hardware stack levels required when called: 7
  1512 ;; This function calls:
  1513 ;;		_LCD_Clear
  1514 ;;		_LCD_GoTo
  1515 ;;		_LCD_WriteString
  1516 ;;		_charToRien
  1517 ;;		_chiffrer
  1518 ;;		_dechiffrer
  1519 ;;		_init
  1520 ;;		_init_adc
  1521 ;;		_init_pot
  1522 ;;		_setOffset
  1523 ;; This function is called by:
  1524 ;;		Startup code after reset
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528     0286                     _main:	
  1529                           ;psect for function _main
  1530                           
  1531     0286                     l1553:	
  1532                           ;incstack = 0
  1533                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1534                           
  1535                           
  1536                           ;main.c: 113:     init();
  1537     0286  3183  232B  3182   	fcall	_init
  1538     0289                     l1555:
  1539                           
  1540                           ;main.c: 115:     init_pot();
  1541     0289  3184  249A  3182   	fcall	_init_pot
  1542     028C                     l1557:
  1543                           
  1544                           ;main.c: 116:     init_adc();
  1545     028C  3184  2466  3182   	fcall	_init_adc
  1546     028F                     l1559:
  1547                           
  1548                           ;main.c: 123:         LCD_Clear();
  1549     028F  3184  2471  3182   	fcall	_LCD_Clear
  1550     0292                     l1561:
  1551                           
  1552                           ;main.c: 124:         LCD_GoTo(0,0);
  1553     0292  01F4               	clrf	LCD_GoTo@column
  1554     0293  3000               	movlw	0
  1555     0294  3183  23B6  3182   	fcall	_LCD_GoTo
  1556     0297                     l1563:
  1557                           
  1558                           ;main.c: 125:         LCD_WriteString(String);
  1559     0297  3055               	movlw	(low (_String| 0))& (0+255)
  1560     0298  3183  23D4  3182   	fcall	_LCD_WriteString
  1561     029B                     l1565:
  1562                           
  1563                           ;main.c: 126:         LCD_Clear();
  1564     029B  3184  2471  3182   	fcall	_LCD_Clear
  1565     029E                     l1567:
  1566                           
  1567                           ;main.c: 129:         LCD_Clear();
  1568     029E  3184  2471  3182   	fcall	_LCD_Clear
  1569     02A1                     l1569:
  1570                           
  1571                           ;main.c: 130:         offset = setOffset();
  1572     02A1  3182  22CF  3182   	fcall	_setOffset
  1573     02A4  0020               	movlb	0	; select bank0
  1574     02A5  00D4               	movwf	_offset
  1575     02A6                     l1571:
  1576                           
  1577                           ;main.c: 131:         charToRien(offset);
  1578     02A6  0854               	movf	_offset,w
  1579     02A7  3183  2300  3182   	fcall	_charToRien
  1580     02AA                     l1573:
  1581                           
  1582                           ;main.c: 132:         LCD_GoTo(0,0);
  1583     02AA  01F4               	clrf	LCD_GoTo@column
  1584     02AB  3000               	movlw	0
  1585     02AC  3183  23B6  3182   	fcall	_LCD_GoTo
  1586     02AF                     l1575:
  1587                           
  1588                           ;main.c: 133:         LCD_WriteString(DebugValue);
  1589     02AF  0103               	clrw
  1590     02B0  3183  23D4  3182   	fcall	_LCD_WriteString
  1591     02B3                     l1577:
  1592                           
  1593                           ;main.c: 134:         _delay((unsigned long)((250)*(8000000/4000.0)));
  1594     02B3  3003               	movlw	3
  1595     02B4  0020               	movlb	0	; select bank0
  1596     02B5  00CC               	movwf	??_main+1
  1597     02B6  308A               	movlw	138
  1598     02B7  00CB               	movwf	??_main
  1599     02B8  3055               	movlw	85
  1600     02B9                     u1077:
  1601     02B9  0B89               	decfsz	9,f
  1602     02BA  2AB9               	goto	u1077
  1603     02BB  0BCB               	decfsz	??_main,f
  1604     02BC  2AB9               	goto	u1077
  1605     02BD  0BCC               	decfsz	??_main+1,f
  1606     02BE  2AB9               	goto	u1077
  1607     02BF  3200               	nop2
  1608     02C0                     l1579:
  1609                           
  1610                           ;main.c: 136:         if(PORTBbits.RB0 == 1) {
  1611     02C0  0020               	movlb	0	; select bank0
  1612     02C1  1C0D               	btfss	13,0	;volatile
  1613     02C2  2AC4               	goto	u1001
  1614     02C3  2AC5               	goto	u1000
  1615     02C4                     u1001:
  1616     02C4  2AC9               	goto	l1583
  1617     02C5                     u1000:
  1618     02C5                     l1581:
  1619                           
  1620                           ;main.c: 137:             chiffrer();
  1621     02C5  3184  2482  3182   	fcall	_chiffrer
  1622                           
  1623                           ;main.c: 138:         }else{
  1624     02C8  2A9E               	goto	l1567
  1625     02C9                     l1583:
  1626                           
  1627                           ;main.c: 139:             dechiffrer();
  1628     02C9  3184  248F  3182   	fcall	_dechiffrer
  1629     02CC  2A9E               	goto	l1567
  1630     02CD  3180  2818         	ljmp	start
  1631     02CF                     __end_of_main:
  1632                           
  1633                           	psect	text1
  1634     02CF                     __ptext1:	
  1635 ;; *************** function _setOffset *****************
  1636 ;; Defined at:
  1637 ;;		line 88 in file "main.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  potar           2   12[COMMON] int 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      unsigned char 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1652 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1655 ;;Total ram usage:        2 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 6
  1658 ;; This function calls:
  1659 ;;		___awdiv
  1660 ;;		___wmul
  1661 ;;		_sprintf
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667     02CF                     _setOffset:	
  1668                           ;psect for function _setOffset
  1669                           
  1670     02CF                     l1527:	
  1671                           ;incstack = 0
  1672                           ; Regs used in _setOffset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1673                           
  1674                           
  1675                           ;main.c: 89:     ADCON0bits.ADGO = 1;
  1676     02CF  0021               	movlb	1	; select bank1
  1677     02D0  149D               	bsf	29,1	;volatile
  1678     02D1                     l126:	
  1679                           ;main.c: 90:     while (ADCON0bits.ADGO){};
  1680                           
  1681     02D1  189D               	btfsc	29,1	;volatile
  1682     02D2  2AD4               	goto	u971
  1683     02D3  2AD5               	goto	u970
  1684     02D4                     u971:
  1685     02D4  2AD1               	goto	l126
  1686     02D5                     u970:
  1687     02D5                     l1529:
  1688                           
  1689                           ;main.c: 91:     int potar = (ADRESH << 8) + ADRESL;
  1690     02D5  081C               	movf	28,w	;volatile
  1691     02D6  00FD               	movwf	setOffset@potar+1
  1692     02D7  081B               	movf	27,w	;volatile
  1693     02D8  00FC               	movwf	setOffset@potar
  1694     02D9                     l1531:
  1695                           
  1696                           ;main.c: 92:     sprintf(DebugValue,"%d",potar);
  1697     02D9  3000               	movlw	0
  1698     02DA  0020               	movlb	0	; select bank0
  1699     02DB  00B9               	movwf	sprintf@s
  1700     02DC  00BA               	movwf	sprintf@s+1
  1701     02DD  30A1               	movlw	low (STR_1| (0+32768))
  1702     02DE  00BB               	movwf	sprintf@fmt
  1703     02DF  3084               	movlw	high (STR_1| (0+32768))
  1704     02E0  00BC               	movwf	sprintf@fmt+1
  1705     02E1  087D               	movf	setOffset@potar+1,w
  1706     02E2  00BE               	movwf	?_sprintf+5
  1707     02E3  087C               	movf	setOffset@potar,w
  1708     02E4  00BD               	movwf	?_sprintf+4
  1709     02E5  3183  2354  3182   	fcall	_sprintf
  1710     02E8                     l1533:
  1711                           
  1712                           ;main.c: 93:     return (35*potar)/1023;
  1713     02E8  30FF               	movlw	255
  1714     02E9  00F6               	movwf	___awdiv@divisor
  1715     02EA  3003               	movlw	3
  1716     02EB  00F7               	movwf	___awdiv@divisor+1
  1717     02EC  087D               	movf	setOffset@potar+1,w
  1718     02ED  00F1               	movwf	___wmul@multiplier+1
  1719     02EE  087C               	movf	setOffset@potar,w
  1720     02EF  00F0               	movwf	___wmul@multiplier
  1721     02F0  3023               	movlw	35
  1722     02F1  00F2               	movwf	___wmul@multiplicand
  1723     02F2  3000               	movlw	0
  1724     02F3  00F3               	movwf	___wmul@multiplicand+1
  1725     02F4  3183  2397  3182   	fcall	___wmul
  1726     02F7  0871               	movf	?___wmul+1,w
  1727     02F8  00F9               	movwf	___awdiv@dividend+1
  1728     02F9  0870               	movf	?___wmul,w
  1729     02FA  00F8               	movwf	___awdiv@dividend
  1730     02FB  3181  2126  3182   	fcall	___awdiv
  1731     02FE  0876               	movf	?___awdiv,w
  1732     02FF                     l129:
  1733     02FF  0008               	return
  1734     0300                     __end_of_setOffset:
  1735                           
  1736                           	psect	text2
  1737     0354                     __ptext2:	
  1738 ;; *************** function _sprintf *****************
  1739 ;; Defined at:
  1740 ;;		line 9 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/nf_sprintf.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  s               2   25[BANK0 ] PTR unsigned char 
  1743 ;;		 -> NULL(0), 
  1744 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  1745 ;;		 -> STR_1(3), 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  f              11   32[BANK0 ] struct _IO_FILE
  1748 ;;  ret             2    0        int 
  1749 ;;  ap              1   31[BANK0 ] PTR void [1]
  1750 ;;		 -> ?_sprintf(2), 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  2   25[BANK0 ] int 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1760 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1761 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1763 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1764 ;;Total ram usage:       18 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 5
  1767 ;; This function calls:
  1768 ;;		_vfprintf
  1769 ;; This function is called by:
  1770 ;;		_setOffset
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774     0354                     _sprintf:	
  1775                           ;psect for function _sprintf
  1776                           
  1777     0354                     l1443:	
  1778                           ;incstack = 0
  1779                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1780                           
  1781     0354  303D               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  1782     0355  0020               	movlb	0	; select bank0
  1783     0356  00BF               	movwf	sprintf@ap
  1784     0357  083A               	movf	sprintf@s+1,w
  1785     0358  00C1               	movwf	sprintf@f+1
  1786     0359  0839               	movf	sprintf@s,w
  1787     035A  00C0               	movwf	sprintf@f
  1788     035B                     l1445:
  1789     035B  01C2               	clrf	sprintf@f+2
  1790     035C  01C3               	clrf	sprintf@f+3
  1791     035D                     l1447:
  1792     035D  01C9               	clrf	sprintf@f+9
  1793     035E  01CA               	clrf	sprintf@f+10
  1794     035F                     l1449:
  1795     035F  083C               	movf	sprintf@fmt+1,w
  1796     0360  00B4               	movwf	vfprintf@fmt+1
  1797     0361  083B               	movf	sprintf@fmt,w
  1798     0362  00B3               	movwf	vfprintf@fmt
  1799     0363  303F               	movlw	(low (sprintf@ap| 0))& (0+255)
  1800     0364  00B5               	movwf	vfprintf@ap
  1801     0365  3040               	movlw	(low (sprintf@f| 0))& (0+255)
  1802     0366  3183  23F1  3183   	fcall	_vfprintf
  1803     0369                     l1451:
  1804     0369  3002               	movlw	2
  1805     036A  3E40               	addlw	(low (sprintf@f| 0))& (0+255)
  1806     036B  0086               	movwf	6
  1807     036C  0187               	clrf	7
  1808     036D  3F40               	moviw [0]fsr1
  1809     036E  0020               	movlb	0	; select bank0
  1810     036F  0739               	addwf	sprintf@s,w
  1811     0370  0084               	movwf	4
  1812     0371  3F41               	moviw [1]fsr1
  1813     0372  3D3A               	addwfc	sprintf@s+1,w
  1814     0373  0085               	movwf	5
  1815     0374  0180               	clrf	0
  1816     0375                     l739:
  1817     0375  0008               	return
  1818     0376                     __end_of_sprintf:
  1819                           
  1820                           	psect	text3
  1821     03F1                     __ptext3:	
  1822 ;; *************** function _vfprintf *****************
  1823 ;; Defined at:
  1824 ;;		line 1817 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  fp              1    wreg     PTR struct _IO_FILE
  1827 ;;		 -> sprintf@f(11), 
  1828 ;;  fmt             2   19[BANK0 ] PTR const unsigned char 
  1829 ;;		 -> STR_1(3), 
  1830 ;;  ap              1   21[BANK0 ] PTR PTR void 
  1831 ;;		 -> sprintf@ap(1), 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  fp              1   22[BANK0 ] PTR struct _IO_FILE
  1834 ;;		 -> sprintf@f(11), 
  1835 ;;  cfmt            2   23[BANK0 ] PTR unsigned char 
  1836 ;;		 -> STR_1(3), 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  2   19[BANK0 ] int 
  1839 ;; Registers used:
  1840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1846 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1847 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1849 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1850 ;;Total ram usage:        7 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; Hardware stack levels required when called: 4
  1853 ;; This function calls:
  1854 ;;		_vfpfcnvrt
  1855 ;; This function is called by:
  1856 ;;		_sprintf
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860     03F1                     _vfprintf:	
  1861                           ;psect for function _vfprintf
  1862                           
  1863                           
  1864                           ;incstack = 0
  1865                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1866                           ;vfprintf@fp stored from wreg
  1867     03F1  0020               	movlb	0	; select bank0
  1868     03F2  00B6               	movwf	vfprintf@fp
  1869     03F3                     l1393:
  1870                           
  1871                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.45/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  1872     03F3  0834               	movf	vfprintf@fmt+1,w
  1873     03F4  00B8               	movwf	vfprintf@cfmt+1
  1874     03F5  0833               	movf	vfprintf@fmt,w
  1875     03F6  00B7               	movwf	vfprintf@cfmt
  1876                           
  1877                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  1878     03F7  2C00               	goto	l1397
  1879     03F8                     l1395:
  1880                           
  1881                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(f
      +                          p, &cfmt, ap);
  1882     03F8  3037               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1883     03F9  00A4               	movwf	vfpfcnvrt@fmt
  1884     03FA  0835               	movf	vfprintf@ap,w
  1885     03FB  00A5               	movwf	vfpfcnvrt@ap
  1886     03FC  0836               	movf	vfprintf@fp,w
  1887     03FD  3180  203A  3183   	fcall	_vfpfcnvrt
  1888     0400                     l1397:
  1889                           
  1890                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  1891     0400  0020               	movlb	0	; select bank0
  1892     0401  0837               	movf	vfprintf@cfmt,w
  1893     0402  0084               	movwf	4
  1894     0403  0838               	movf	vfprintf@cfmt+1,w
  1895     0404  0085               	movwf	5
  1896     0405  0012               	moviw fsr0++
  1897     0406  1D03               	btfss	3,2
  1898     0407  2C09               	goto	u891
  1899     0408  2C0A               	goto	u890
  1900     0409                     u891:
  1901     0409  2BF8               	goto	l1395
  1902     040A                     u890:
  1903     040A                     l1399:
  1904                           
  1905                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  1906     040A  01B3               	clrf	?_vfprintf
  1907     040B  01B4               	clrf	?_vfprintf+1
  1908     040C                     l783:
  1909     040C  0008               	return
  1910     040D                     __end_of_vfprintf:
  1911                           
  1912                           	psect	text4
  1913     003A                     __ptext4:	
  1914 ;; *************** function _vfpfcnvrt *****************
  1915 ;; Defined at:
  1916 ;;		line 1177 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  fp              1    wreg     PTR struct _IO_FILE
  1919 ;;		 -> sprintf@f(11), 
  1920 ;;  fmt             1    4[BANK0 ] PTR PTR unsigned char 
  1921 ;;		 -> vfprintf@cfmt(2), 
  1922 ;;  ap              1    5[BANK0 ] PTR PTR void 
  1923 ;;		 -> sprintf@ap(1), 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  1926 ;;		 -> sprintf@f(11), 
  1927 ;;  convarg         4   14[BANK0 ] struct .
  1928 ;;  cp              2   12[BANK0 ] PTR unsigned char 
  1929 ;;		 -> STR_1(3), 
  1930 ;;  c               1   18[BANK0 ] unsigned char 
  1931 ;;  done            1   10[BANK0 ] _Bool 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1941 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1942 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1943 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1944 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1945 ;;Total ram usage:       15 bytes
  1946 ;; Hardware stack levels used: 1
  1947 ;; Hardware stack levels required when called: 3
  1948 ;; This function calls:
  1949 ;;		___awdiv
  1950 ;;		___awmod
  1951 ;;		_abs
  1952 ;;		_fputc
  1953 ;; This function is called by:
  1954 ;;		_vfprintf
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958     003A                     _vfpfcnvrt:	
  1959                           ;psect for function _vfpfcnvrt
  1960                           
  1961                           
  1962                           ;incstack = 0
  1963                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1964                           ;vfpfcnvrt@fp stored from wreg
  1965     003A  0020               	movlb	0	; select bank0
  1966     003B  00AB               	movwf	vfpfcnvrt@fp
  1967     003C                     l1339:
  1968                           
  1969                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.45/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 120
      +                          1:     if ((*fmt)[0] == '%') {
  1970     003C  0824               	movf	vfpfcnvrt@fmt,w
  1971     003D  0086               	movwf	6
  1972     003E  0187               	clrf	7
  1973     003F  3F40               	moviw [0]fsr1
  1974     0040  00A6               	movwf	??_vfpfcnvrt
  1975     0041  3F41               	moviw [1]fsr1
  1976     0042  00A7               	movwf	??_vfpfcnvrt+1
  1977     0043  0826               	movf	??_vfpfcnvrt,w
  1978     0044  0084               	movwf	4
  1979     0045  0827               	movf	??_vfpfcnvrt+1,w
  1980     0046  0085               	movwf	5
  1981     0047  0012               	moviw fsr0++
  1982     0048  3A25               	xorlw	37
  1983     0049  1D03               	btfss	3,2
  1984     004A  284C               	goto	u791
  1985     004B  284D               	goto	u790
  1986     004C                     u791:
  1987     004C  290D               	goto	l1385
  1988     004D                     u790:
  1989     004D                     l1341:
  1990                           
  1991                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  1992     004D  0824               	movf	vfpfcnvrt@fmt,w
  1993     004E  0086               	movwf	6
  1994     004F  0187               	clrf	7
  1995     0050  3001               	movlw	1
  1996     0051  0781               	addwf	1,f
  1997     0052  3141               	addfsr 1,1
  1998     0053  1803               	skipnc
  1999     0054  0A81               	incf	1,f
  2000     0055                     l1343:
  2001                           
  2002                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  2003     0055  01CD               	clrf	_width
  2004     0056  01CE               	clrf	_width+1
  2005     0057  1003               	clrc
  2006     0058  3000               	movlw	0
  2007     0059  1803               	btfsc	3,0
  2008     005A  3001               	movlw	1
  2009     005B  00D3               	movwf	_flags
  2010     005C                     l1345:
  2011                           
  2012                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  2013     005C  30FF               	movlw	255
  2014     005D  00CF               	movwf	_prec
  2015     005E  30FF               	movlw	255
  2016     005F  00D0               	movwf	_prec+1
  2017     0060                     l1347:
  2018                           
  2019                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  2020     0060  0824               	movf	vfpfcnvrt@fmt,w
  2021     0061  0086               	movwf	6
  2022     0062  0187               	clrf	7
  2023     0063  3F40               	moviw [0]fsr1
  2024     0064  00AC               	movwf	vfpfcnvrt@cp
  2025     0065  3F41               	moviw [1]fsr1
  2026     0066  00AD               	movwf	vfpfcnvrt@cp+1
  2027     0067                     l1349:
  2028                           
  2029                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == '
      +                          d' || *cp == 'i') {
  2030     0067  082C               	movf	vfpfcnvrt@cp,w
  2031     0068  0084               	movwf	4
  2032     0069  082D               	movf	vfpfcnvrt@cp+1,w
  2033     006A  0085               	movwf	5
  2034     006B  0012               	moviw fsr0++
  2035     006C  3A64               	xorlw	100
  2036     006D  1903               	btfsc	3,2
  2037     006E  2870               	goto	u801
  2038     006F  2871               	goto	u800
  2039     0070                     u801:
  2040     0070  287B               	goto	l1353
  2041     0071                     u800:
  2042     0071                     l1351:
  2043     0071  082C               	movf	vfpfcnvrt@cp,w
  2044     0072  0084               	movwf	4
  2045     0073  082D               	movf	vfpfcnvrt@cp+1,w
  2046     0074  0085               	movwf	5
  2047     0075  0012               	moviw fsr0++
  2048     0076  3A69               	xorlw	105
  2049     0077  1D03               	btfss	3,2
  2050     0078  287A               	goto	u811
  2051     0079  287B               	goto	u810
  2052     007A                     u811:
  2053     007A  2903               	goto	l1381
  2054     007B                     u810:
  2055     007B                     l1353:
  2056                           
  2057                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1404:    convarg.sin
      +                          t = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2058     007B  0825               	movf	vfpfcnvrt@ap,w
  2059     007C  0086               	movwf	6
  2060     007D  0187               	clrf	7
  2061     007E  0801               	movf	1,w
  2062     007F  0084               	movwf	4
  2063     0080  0185               	clrf	5
  2064     0081  3002               	movlw	2
  2065     0082  0781               	addwf	1,f
  2066     0083  3F00               	moviw [0]fsr0
  2067     0084  00AE               	movwf	vfpfcnvrt@convarg
  2068     0085  3F01               	moviw [1]fsr0
  2069     0086  00AF               	movwf	vfpfcnvrt@convarg+1
  2070     0087                     l1355:
  2071                           
  2072                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1
      +                          ;
  2073     0087  082C               	movf	vfpfcnvrt@cp,w
  2074     0088  3E01               	addlw	1
  2075     0089  00A6               	movwf	??_vfpfcnvrt
  2076     008A  3000               	movlw	0
  2077     008B  3D2D               	addwfc	vfpfcnvrt@cp+1,w
  2078     008C  00A7               	movwf	??_vfpfcnvrt+1
  2079     008D  0824               	movf	vfpfcnvrt@fmt,w
  2080     008E  0086               	movwf	6
  2081     008F  0187               	clrf	7
  2082     0090  0826               	movf	??_vfpfcnvrt,w
  2083     0091  3FC0               	movwi [0]fsr1
  2084     0092  0827               	movf	??_vfpfcnvrt+1,w
  2085     0093  3FC1               	movwi [1]fsr1
  2086     0094                     l1357:
  2087                           
  2088                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1408:    c = sizeof(
      +                          dbuf);
  2089     0094  3020               	movlw	32
  2090     0095  00B2               	movwf	vfpfcnvrt@c
  2091     0096                     l1359:
  2092                           
  2093                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1409:    done = conv
      +                          arg.sint < 0;
  2094     0096  1BAF               	btfsc	vfpfcnvrt@convarg+1,7
  2095     0097  2899               	goto	u821
  2096     0098  289B               	goto	u820
  2097     0099                     u821:
  2098     0099  3001               	movlw	1
  2099     009A  289C               	goto	u830
  2100     009B                     u820:
  2101     009B  3000               	movlw	0
  2102     009C                     u830:
  2103     009C  00AA               	movwf	vfpfcnvrt@done
  2104     009D                     l1361:
  2105                           
  2106                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1411:     dbuf[--c] 
      +                          = abs(convarg.sint % 10) + '0';
  2107     009D  3001               	movlw	1
  2108     009E  02B2               	subwf	vfpfcnvrt@c,f
  2109     009F  0832               	movf	vfpfcnvrt@c,w
  2110     00A0  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2111     00A1  0086               	movwf	6
  2112     00A2  0187               	clrf	7
  2113     00A3  300A               	movlw	10
  2114     00A4  00F0               	movwf	___awmod@divisor
  2115     00A5  3000               	movlw	0
  2116     00A6  00F1               	movwf	___awmod@divisor+1
  2117     00A7  082F               	movf	vfpfcnvrt@convarg+1,w
  2118     00A8  00F3               	movwf	___awmod@dividend+1
  2119     00A9  082E               	movf	vfpfcnvrt@convarg,w
  2120     00AA  00F2               	movwf	___awmod@dividend
  2121     00AB  3182  2233  3180   	fcall	___awmod
  2122     00AE  0871               	movf	?___awmod+1,w
  2123     00AF  00F8               	movwf	abs@a+1
  2124     00B0  0870               	movf	?___awmod,w
  2125     00B1  00F7               	movwf	abs@a
  2126     00B2  3184  2447  3180   	fcall	_abs
  2127     00B5  0877               	movf	?_abs,w
  2128     00B6  3E30               	addlw	48
  2129     00B7  0081               	movwf	1
  2130     00B8                     l1363:
  2131                           
  2132                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1412:     convarg.si
      +                          nt /= 10;
  2133     00B8  300A               	movlw	10
  2134     00B9  00F6               	movwf	___awdiv@divisor
  2135     00BA  3000               	movlw	0
  2136     00BB  00F7               	movwf	___awdiv@divisor+1
  2137     00BC  0020               	movlb	0	; select bank0
  2138     00BD  082F               	movf	vfpfcnvrt@convarg+1,w
  2139     00BE  00F9               	movwf	___awdiv@dividend+1
  2140     00BF  082E               	movf	vfpfcnvrt@convarg,w
  2141     00C0  00F8               	movwf	___awdiv@dividend
  2142     00C1  3181  2126  3180   	fcall	___awdiv
  2143     00C4  0877               	movf	?___awdiv+1,w
  2144     00C5  0020               	movlb	0	; select bank0
  2145     00C6  00AF               	movwf	vfpfcnvrt@convarg+1
  2146     00C7  0876               	movf	?___awdiv,w
  2147     00C8  00AE               	movwf	vfpfcnvrt@convarg
  2148     00C9                     l1365:
  2149                           
  2150                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1416:    } while (co
      +                          nvarg.sint != 0 && c != 0);
  2151     00C9  082E               	movf	vfpfcnvrt@convarg,w
  2152     00CA  042F               	iorwf	vfpfcnvrt@convarg+1,w
  2153     00CB  1903               	btfsc	3,2
  2154     00CC  28CE               	goto	u841
  2155     00CD  28CF               	goto	u840
  2156     00CE                     u841:
  2157     00CE  28D4               	goto	l1369
  2158     00CF                     u840:
  2159     00CF                     l1367:
  2160     00CF  0832               	movf	vfpfcnvrt@c,w
  2161     00D0  1D03               	btfss	3,2
  2162     00D1  28D3               	goto	u851
  2163     00D2  28D4               	goto	u850
  2164     00D3                     u851:
  2165     00D3  289D               	goto	l1361
  2166     00D4                     u850:
  2167     00D4                     l1369:
  2168                           
  2169                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1417:    if (c != 0 
      +                          && done) {
  2170     00D4  0832               	movf	vfpfcnvrt@c,w
  2171     00D5  1903               	btfsc	3,2
  2172     00D6  28D8               	goto	u861
  2173     00D7  28D9               	goto	u860
  2174     00D8                     u861:
  2175     00D8  28FC               	goto	l1379
  2176     00D9                     u860:
  2177     00D9                     l1371:
  2178     00D9  082A               	movf	vfpfcnvrt@done,w
  2179     00DA  1903               	btfsc	3,2
  2180     00DB  28DD               	goto	u871
  2181     00DC  28DE               	goto	u870
  2182     00DD                     u871:
  2183     00DD  28FC               	goto	l1379
  2184     00DE                     u870:
  2185     00DE                     l1373:
  2186                           
  2187                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1418:     dbuf[--c] 
      +                          = '-';
  2188     00DE  3001               	movlw	1
  2189     00DF  02B2               	subwf	vfpfcnvrt@c,f
  2190     00E0  0832               	movf	vfpfcnvrt@c,w
  2191     00E1  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2192     00E2  0086               	movwf	6
  2193     00E3  0187               	clrf	7
  2194     00E4  302D               	movlw	45
  2195     00E5  0081               	movwf	1
  2196     00E6  28FC               	goto	l1379
  2197     00E7                     l1375:
  2198                           
  2199                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1424:     fputc(dbuf
      +                          [c++], fp);
  2200     00E7  0832               	movf	vfpfcnvrt@c,w
  2201     00E8  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2202     00E9  0086               	movwf	6
  2203     00EA  0187               	clrf	7
  2204     00EB  0801               	movf	1,w
  2205     00EC  00A6               	movwf	??_vfpfcnvrt
  2206     00ED  01A7               	clrf	??_vfpfcnvrt+1
  2207     00EE  0826               	movf	??_vfpfcnvrt,w
  2208     00EF  00F0               	movwf	fputc@c
  2209     00F0  0827               	movf	??_vfpfcnvrt+1,w
  2210     00F1  00F1               	movwf	fputc@c+1
  2211     00F2  082B               	movf	vfpfcnvrt@fp,w
  2212     00F3  00F2               	movwf	fputc@fp
  2213     00F4  3181  21DE  3180   	fcall	_fputc
  2214     00F7                     l1377:
  2215     00F7  3001               	movlw	1
  2216     00F8  0020               	movlb	0	; select bank0
  2217     00F9  00A6               	movwf	??_vfpfcnvrt
  2218     00FA  0826               	movf	??_vfpfcnvrt,w
  2219     00FB  07B2               	addwf	vfpfcnvrt@c,f
  2220     00FC                     l1379:
  2221                           
  2222                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1423:    while (c !=
      +                           sizeof(dbuf)) {
  2223     00FC  3020               	movlw	32
  2224     00FD  0632               	xorwf	vfpfcnvrt@c,w
  2225     00FE  1D03               	btfss	3,2
  2226     00FF  2901               	goto	u881
  2227     0100  2902               	goto	u880
  2228     0101                     u881:
  2229     0101  28E7               	goto	l1375
  2230     0102                     u880:
  2231     0102  2925               	goto	l777
  2232     0103                     l1381:
  2233                           
  2234                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  2235     0103  0020               	movlb	0	; select bank0
  2236     0104  0824               	movf	vfpfcnvrt@fmt,w
  2237     0105  0086               	movwf	6
  2238     0106  0187               	clrf	7
  2239     0107  3001               	movlw	1
  2240     0108  0781               	addwf	1,f
  2241     0109  3141               	addfsr 1,1
  2242     010A  1803               	skipnc
  2243     010B  0A81               	incf	1,f
  2244     010C  2925               	goto	l777
  2245     010D                     l1385:
  2246                           
  2247                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  2248     010D  0824               	movf	vfpfcnvrt@fmt,w
  2249     010E  0086               	movwf	6
  2250     010F  0187               	clrf	7
  2251     0110  3F40               	moviw [0]fsr1
  2252     0111  00A6               	movwf	??_vfpfcnvrt
  2253     0112  3F41               	moviw [1]fsr1
  2254     0113  00A7               	movwf	??_vfpfcnvrt+1
  2255     0114  0826               	movf	??_vfpfcnvrt,w
  2256     0115  0084               	movwf	4
  2257     0116  0827               	movf	??_vfpfcnvrt+1,w
  2258     0117  0085               	movwf	5
  2259     0118  0800               	movf	0,w	;code access
  2260     0119  00A8               	movwf	??_vfpfcnvrt+2
  2261     011A  01A9               	clrf	??_vfpfcnvrt+3
  2262     011B  0828               	movf	??_vfpfcnvrt+2,w
  2263     011C  00F0               	movwf	fputc@c
  2264     011D  0829               	movf	??_vfpfcnvrt+3,w
  2265     011E  00F1               	movwf	fputc@c+1
  2266     011F  082B               	movf	vfpfcnvrt@fp,w
  2267     0120  00F2               	movwf	fputc@fp
  2268     0121  3181  21DE  3180   	fcall	_fputc
  2269     0124  2903               	goto	l1381
  2270     0125                     l777:
  2271     0125  0008               	return
  2272     0126                     __end_of_vfpfcnvrt:
  2273                           
  2274                           	psect	text5
  2275     01DE                     __ptext5:	
  2276 ;; *************** function _fputc *****************
  2277 ;; Defined at:
  2278 ;;		line 8 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputc.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  c               2    0[COMMON] int 
  2281 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  2282 ;;		 -> sprintf@f(11), 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  2    0[COMMON] int 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2294 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2296 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2297 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2298 ;;Total ram usage:        8 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 2
  2301 ;; This function calls:
  2302 ;;		_putch
  2303 ;; This function is called by:
  2304 ;;		_vfpfcnvrt
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308     01DE                     _fputc:	
  2309                           ;psect for function _fputc
  2310                           
  2311     01DE                     l1309:	
  2312                           ;incstack = 0
  2313                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2314                           
  2315     01DE  0872               	movf	fputc@fp,w
  2316     01DF  1903               	btfsc	3,2
  2317     01E0  29E2               	goto	u741
  2318     01E1  29E3               	goto	u740
  2319     01E2                     u741:
  2320     01E2  29E8               	goto	l1313
  2321     01E3                     u740:
  2322     01E3                     l1311:
  2323     01E3  0872               	movf	fputc@fp,w
  2324     01E4  1D03               	btfss	3,2
  2325     01E5  29E7               	goto	u751
  2326     01E6  29E8               	goto	u750
  2327     01E7                     u751:
  2328     01E7  29ED               	goto	l1315
  2329     01E8                     u750:
  2330     01E8                     l1313:
  2331     01E8  0870               	movf	fputc@c,w
  2332     01E9  3184  24A4  3181   	fcall	_putch
  2333     01EC  2A32               	goto	l802
  2334     01ED                     l1315:
  2335     01ED  0872               	movf	fputc@fp,w
  2336     01EE  3E09               	addlw	9
  2337     01EF  0086               	movwf	6
  2338     01F0  0187               	clrf	7
  2339     01F1  0016               	moviw fsr1++
  2340     01F2  0401               	iorwf	1,w
  2341     01F3  1903               	btfsc	3,2
  2342     01F4  29F6               	goto	u761
  2343     01F5  29F7               	goto	u760
  2344     01F6                     u761:
  2345     01F6  2A15               	goto	l1319
  2346     01F7                     u760:
  2347     01F7                     l1317:
  2348     01F7  0872               	movf	fputc@fp,w
  2349     01F8  3E09               	addlw	9
  2350     01F9  0086               	movwf	6
  2351     01FA  0187               	clrf	7
  2352     01FB  3F40               	moviw [0]fsr1
  2353     01FC  00F3               	movwf	??_fputc
  2354     01FD  3F41               	moviw [1]fsr1
  2355     01FE  00F4               	movwf	??_fputc+1
  2356     01FF  0872               	movf	fputc@fp,w
  2357     0200  3E02               	addlw	2
  2358     0201  0086               	movwf	6
  2359     0202  0187               	clrf	7
  2360     0203  3F40               	moviw [0]fsr1
  2361     0204  00F5               	movwf	??_fputc+2
  2362     0205  3F41               	moviw [1]fsr1
  2363     0206  00F6               	movwf	??_fputc+3
  2364     0207  0876               	movf	??_fputc+3,w
  2365     0208  3A80               	xorlw	128
  2366     0209  00F7               	movwf	??_fputc+4
  2367     020A  0874               	movf	??_fputc+1,w
  2368     020B  3A80               	xorlw	128
  2369     020C  0277               	subwf	??_fputc+4,w
  2370     020D  1D03               	skipz
  2371     020E  2A11               	goto	u775
  2372     020F  0873               	movf	??_fputc,w
  2373     0210  0275               	subwf	??_fputc+2,w
  2374     0211                     u775:
  2375     0211  1803               	skipnc
  2376     0212  2A14               	goto	u771
  2377     0213  2A15               	goto	u770
  2378     0214                     u771:
  2379     0214  2A32               	goto	l802
  2380     0215                     u770:
  2381     0215                     l1319:
  2382     0215  0872               	movf	fputc@fp,w
  2383     0216  3E02               	addlw	2
  2384     0217  0086               	movwf	6
  2385     0218  0187               	clrf	7
  2386     0219  0872               	movf	fputc@fp,w
  2387     021A  0084               	movwf	4
  2388     021B  0185               	clrf	5
  2389     021C  3F40               	moviw [0]fsr1
  2390     021D  0700               	addwf	0,w
  2391     021E  00F3               	movwf	??_fputc
  2392     021F  3101               	addfsr 0,1
  2393     0220  3F41               	moviw [1]fsr1
  2394     0221  3D00               	addwfc	0,w
  2395     0222  00F4               	movwf	??_fputc+1
  2396     0223  0873               	movf	??_fputc,w
  2397     0224  0086               	movwf	6
  2398     0225  0874               	movf	??_fputc+1,w
  2399     0226  0087               	movwf	7
  2400     0227  0870               	movf	fputc@c,w
  2401     0228  0081               	movwf	1
  2402     0229                     l1321:
  2403     0229  0872               	movf	fputc@fp,w
  2404     022A  3E02               	addlw	2
  2405     022B  0086               	movwf	6
  2406     022C  0187               	clrf	7
  2407     022D  3001               	movlw	1
  2408     022E  0781               	addwf	1,f
  2409     022F  3141               	addfsr 1,1
  2410     0230  1803               	skipnc
  2411     0231  0A81               	incf	1,f
  2412     0232                     l802:
  2413     0232  0008               	return
  2414     0233                     __end_of_fputc:
  2415                           
  2416                           	psect	text6
  2417     04A4                     __ptext6:	
  2418 ;; *************** function _putch *****************
  2419 ;; Defined at:
  2420 ;;		line 7 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/putch.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  c               1    wreg     unsigned char 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  c               1    0[COMMON] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2438 ;;Total ram usage:        0 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_fputc
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448     04A4                     _putch:	
  2449                           ;psect for function _putch
  2450                           
  2451     04A4                     l813:	
  2452                           ;incstack = 0
  2453                           ; Regs used in _putch: [wreg]
  2454                           
  2455     04A4  0008               	return
  2456     04A5                     __end_of_putch:
  2457                           
  2458                           	psect	text7
  2459     0447                     __ptext7:	
  2460 ;; *************** function _abs *****************
  2461 ;; Defined at:
  2462 ;;		line 1 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/abs.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  a               2    7[COMMON] int 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  2    7[COMMON] int 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2479 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2480 ;;Total ram usage:        4 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_vfpfcnvrt
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490     0447                     _abs:	
  2491                           ;psect for function _abs
  2492                           
  2493     0447                     l1325:	
  2494                           ;incstack = 0
  2495                           ; Regs used in _abs: [wreg+status,2+status,0]
  2496                           
  2497     0447  1BF8               	btfsc	abs@a+1,7
  2498     0448  2C4A               	goto	u781
  2499     0449  2C4B               	goto	u780
  2500     044A                     u781:
  2501     044A  2C4C               	goto	l1329
  2502     044B                     u780:
  2503     044B                     l1327:
  2504     044B  2C57               	goto	l790
  2505     044C                     l1329:
  2506     044C  0977               	comf	abs@a,w
  2507     044D  00F9               	movwf	??_abs
  2508     044E  0978               	comf	abs@a+1,w
  2509     044F  00FA               	movwf	??_abs+1
  2510     0450  0AF9               	incf	??_abs,f
  2511     0451  1903               	skipnz
  2512     0452  0AFA               	incf	??_abs+1,f
  2513     0453  0879               	movf	??_abs,w
  2514     0454  00F7               	movwf	?_abs
  2515     0455  087A               	movf	??_abs+1,w
  2516     0456  00F8               	movwf	?_abs+1
  2517     0457                     l790:
  2518     0457  0008               	return
  2519     0458                     __end_of_abs:
  2520                           
  2521                           	psect	text8
  2522     0397                     __ptext8:	
  2523 ;; *************** function ___wmul *****************
  2524 ;; Defined at:
  2525 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  multiplier      2    0[COMMON] unsigned int 
  2528 ;;  multiplicand    2    2[COMMON] unsigned int 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  product         2    4[COMMON] unsigned int 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  2    0[COMMON] unsigned int 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2544 ;;Total ram usage:        6 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 1
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_setOffset
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554     0397                     ___wmul:	
  2555                           ;psect for function ___wmul
  2556                           
  2557     0397                     l1455:	
  2558                           ;incstack = 0
  2559                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2560                           
  2561     0397  01F4               	clrf	___wmul@product
  2562     0398  01F5               	clrf	___wmul@product+1
  2563     0399                     l1457:
  2564     0399  1C70               	btfss	___wmul@multiplier,0
  2565     039A  2B9C               	goto	u921
  2566     039B  2B9D               	goto	u920
  2567     039C                     u921:
  2568     039C  2BA1               	goto	l276
  2569     039D                     u920:
  2570     039D                     l1459:
  2571     039D  0872               	movf	___wmul@multiplicand,w
  2572     039E  07F4               	addwf	___wmul@product,f
  2573     039F  0873               	movf	___wmul@multiplicand+1,w
  2574     03A0  3DF5               	addwfc	___wmul@product+1,f
  2575     03A1                     l276:
  2576     03A1  3001               	movlw	1
  2577     03A2                     u935:
  2578     03A2  35F2               	lslf	___wmul@multiplicand,f
  2579     03A3  0DF3               	rlf	___wmul@multiplicand+1,f
  2580     03A4  0B89               	decfsz	9,f
  2581     03A5  2BA2               	goto	u935
  2582     03A6                     l1461:
  2583     03A6  3001               	movlw	1
  2584     03A7                     u945:
  2585     03A7  36F1               	lsrf	___wmul@multiplier+1,f
  2586     03A8  0CF0               	rrf	___wmul@multiplier,f
  2587     03A9  0B89               	decfsz	9,f
  2588     03AA  2BA7               	goto	u945
  2589     03AB                     l1463:
  2590     03AB  0870               	movf	___wmul@multiplier,w
  2591     03AC  0471               	iorwf	___wmul@multiplier+1,w
  2592     03AD  1D03               	btfss	3,2
  2593     03AE  2BB0               	goto	u951
  2594     03AF  2BB1               	goto	u950
  2595     03B0                     u951:
  2596     03B0  2B99               	goto	l1457
  2597     03B1                     u950:
  2598     03B1                     l1465:
  2599     03B1  0875               	movf	___wmul@product+1,w
  2600     03B2  00F1               	movwf	?___wmul+1
  2601     03B3  0874               	movf	___wmul@product,w
  2602     03B4  00F0               	movwf	?___wmul
  2603     03B5                     l278:
  2604     03B5  0008               	return
  2605     03B6                     __end_of___wmul:
  2606                           
  2607                           	psect	text9
  2608     049A                     __ptext9:	
  2609 ;; *************** function _init_pot *****************
  2610 ;; Defined at:
  2611 ;;		line 54 in file "main.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		None
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2629 ;;Total ram usage:        0 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; Hardware stack levels required when called: 1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_main
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639     049A                     _init_pot:	
  2640                           ;psect for function _init_pot
  2641                           
  2642     049A                     l1517:	
  2643                           ;incstack = 0
  2644                           ; Regs used in _init_pot: []
  2645                           
  2646                           
  2647                           ;main.c: 55:     ANSELAbits.ANSA0 = 1;
  2648     049A  0023               	movlb	3	; select bank3
  2649     049B  140C               	bsf	12,0	;volatile
  2650                           
  2651                           ;main.c: 56:     ANSELAbits.ANSA0 = 0;
  2652     049C  100C               	bcf	12,0	;volatile
  2653     049D                     l114:
  2654     049D  0008               	return
  2655     049E                     __end_of_init_pot:
  2656                           
  2657                           	psect	text10
  2658     0466                     __ptext10:	
  2659 ;; *************** function _init_adc *****************
  2660 ;; Defined at:
  2661 ;;		line 59 in file "main.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2679 ;;Total ram usage:        0 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689     0466                     _init_adc:	
  2690                           ;psect for function _init_adc
  2691                           
  2692     0466                     l1519:	
  2693                           ;incstack = 0
  2694                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  2695                           
  2696                           
  2697                           ;main.c: 60:     ADCON0bits.ADON = 1;
  2698     0466  0021               	movlb	1	; select bank1
  2699     0467  141D               	bsf	29,0	;volatile
  2700     0468                     l1521:
  2701                           
  2702                           ;main.c: 61:     ADCON1bits.ADCS = 0b00;
  2703     0468  308F               	movlw	-113
  2704     0469  059E               	andwf	30,f	;volatile
  2705                           
  2706                           ;main.c: 62:     ADCON1bits.ADPREF = 0b00;
  2707     046A  30FC               	movlw	-4
  2708     046B  059E               	andwf	30,f	;volatile
  2709     046C                     l1523:
  2710                           
  2711                           ;main.c: 63:     ADCON1bits.ADNREF = 0;
  2712     046C  111E               	bcf	30,2	;volatile
  2713     046D                     l1525:
  2714                           
  2715                           ;main.c: 64:     ADCON1bits.ADFM = 1;
  2716     046D  179E               	bsf	30,7	;volatile
  2717                           
  2718                           ;main.c: 65:     ADCON0bits.CHS = 0;
  2719     046E  3083               	movlw	-125
  2720     046F  059D               	andwf	29,f	;volatile
  2721     0470                     l117:
  2722     0470  0008               	return
  2723     0471                     __end_of_init_adc:
  2724                           
  2725                           	psect	text11
  2726     032B                     __ptext11:	
  2727 ;; *************** function _init *****************
  2728 ;; Defined at:
  2729 ;;		line 20 in file "main.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, pclath, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 5
  2750 ;; This function calls:
  2751 ;;		_LCD_Initialize
  2752 ;;		_LCD_InitializePins
  2753 ;;		_SPI_Initialize
  2754 ;;		_SPI_InitializePins
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760     032B                     _init:	
  2761                           ;psect for function _init
  2762                           
  2763     032B                     l1479:	
  2764                           ;incstack = 0
  2765                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  2766                           
  2767                           
  2768                           ;main.c: 22:     RC6PPSbits.RC6PPS = 0x14;
  2769     032B  003D               	movlb	29	; select bank29
  2770     032C  0826               	movf	38,w	;volatile
  2771     032D  39E0               	andlw	-32
  2772     032E  3814               	iorlw	20
  2773     032F  00A6               	movwf	38	;volatile
  2774                           
  2775                           ;main.c: 23:     RXPPSbits.RXPPS = 0x17;
  2776     0330  003C               	movlb	28	; select bank28
  2777     0331  0824               	movf	36,w	;volatile
  2778     0332  39E0               	andlw	-32
  2779     0333  3817               	iorlw	23
  2780     0334  00A4               	movwf	36	;volatile
  2781     0335                     l1481:
  2782                           
  2783                           ;main.c: 26:     TRISCbits.TRISC6 = 0;
  2784     0335  0021               	movlb	1	; select bank1
  2785     0336  130E               	bcf	14,6	;volatile
  2786     0337                     l1483:
  2787                           
  2788                           ;main.c: 27:     TRISCbits.TRISC7 = 1;
  2789     0337  178E               	bsf	14,7	;volatile
  2790     0338                     l1485:
  2791                           
  2792                           ;main.c: 28:     ANSELCbits.ANSC7 = 0;
  2793     0338  0023               	movlb	3	; select bank3
  2794     0339  138E               	bcf	14,7	;volatile
  2795     033A                     l1487:
  2796                           
  2797                           ;main.c: 31:     TX1STAbits.SYNC = 0;
  2798     033A  121E               	bcf	30,4	;volatile
  2799     033B                     l1489:
  2800                           
  2801                           ;main.c: 32:     TX1STAbits.BRGH = 0;
  2802     033B  111E               	bcf	30,2	;volatile
  2803     033C                     l1491:
  2804                           
  2805                           ;main.c: 33:     BAUD1CONbits.BRG16 = 0;
  2806     033C  119F               	bcf	31,3	;volatile
  2807     033D                     l1493:
  2808                           
  2809                           ;main.c: 34:     SP1BRGHbits.SP1BRGH = 0;
  2810     033D  019C               	clrf	28	;volatile
  2811     033E                     l1495:
  2812                           
  2813                           ;main.c: 35:     SP1BRGLbits.SP1BRGL = 0x0C;
  2814     033E  300C               	movlw	12
  2815     033F  009B               	movwf	27	;volatile
  2816     0340                     l1497:
  2817                           
  2818                           ;main.c: 38:     RC1STAbits.SPEN = 1;
  2819     0340  179D               	bsf	29,7	;volatile
  2820     0341                     l1499:
  2821                           
  2822                           ;main.c: 39:     TX1STAbits.TXEN = 1;
  2823     0341  169E               	bsf	30,5	;volatile
  2824     0342                     l1501:
  2825                           
  2826                           ;main.c: 40:     RC1STAbits.CREN = 1;
  2827     0342  161D               	bsf	29,4	;volatile
  2828     0343                     l1503:
  2829                           
  2830                           ;main.c: 43:     INTCONbits.GIE = 1;
  2831     0343  178B               	bsf	11,7	;volatile
  2832     0344                     l1505:
  2833                           
  2834                           ;main.c: 44:     INTCONbits.PEIE = 1;
  2835     0344  170B               	bsf	11,6	;volatile
  2836     0345                     l1507:
  2837                           
  2838                           ;main.c: 45:     PIE1bits.RCIE = 1;
  2839     0345  0021               	movlb	1	; select bank1
  2840     0346  1691               	bsf	17,5	;volatile
  2841     0347                     l1509:
  2842                           
  2843                           ;main.c: 48:     SPI_InitializePins();
  2844     0347  3183  2376  3183   	fcall	_SPI_InitializePins
  2845     034A                     l1511:
  2846                           
  2847                           ;main.c: 49:     LCD_InitializePins();
  2848     034A  3184  2495  3183   	fcall	_LCD_InitializePins
  2849     034D                     l1513:
  2850                           
  2851                           ;main.c: 50:     SPI_Initialize();
  2852     034D  3184  247B  3183   	fcall	_SPI_Initialize
  2853     0350                     l1515:
  2854                           
  2855                           ;main.c: 51:     LCD_Initialize();
  2856     0350  3181  2186  3183   	fcall	_LCD_Initialize
  2857     0353                     l111:
  2858     0353  0008               	return
  2859     0354                     __end_of_init:
  2860                           
  2861                           	psect	text12
  2862     0376                     __ptext12:	
  2863 ;; *************** function _SPI_InitializePins *****************
  2864 ;; Defined at:
  2865 ;;		line 40 in file "../Ressources/spi.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 1
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_init
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893     0376                     _SPI_InitializePins:	
  2894                           ;psect for function _SPI_InitializePins
  2895                           
  2896     0376                     l1435:	
  2897                           ;incstack = 0
  2898                           ; Regs used in _SPI_InitializePins: [wreg+status,2+status,0]
  2899                           
  2900                           
  2901                           ;../Ressources/spi.c: 42:     LATCbits.LATC3 = 0;
  2902     0376  0022               	movlb	2	; select bank2
  2903     0377  118E               	bcf	14,3	;volatile
  2904                           
  2905                           ;../Ressources/spi.c: 43:     TRISCbits.TRISC3 = 0;
  2906     0378  0021               	movlb	1	; select bank1
  2907     0379  118E               	bcf	14,3	;volatile
  2908                           
  2909                           ;../Ressources/spi.c: 46:     LATCbits.LATC4 = 0;
  2910     037A  0022               	movlb	2	; select bank2
  2911     037B  120E               	bcf	14,4	;volatile
  2912                           
  2913                           ;../Ressources/spi.c: 47:     TRISCbits.TRISC4 = 1;
  2914     037C  0021               	movlb	1	; select bank1
  2915     037D  160E               	bsf	14,4	;volatile
  2916                           
  2917                           ;../Ressources/spi.c: 50:     LATCbits.LATC5 = 0;
  2918     037E  0022               	movlb	2	; select bank2
  2919     037F  128E               	bcf	14,5	;volatile
  2920                           
  2921                           ;../Ressources/spi.c: 51:     TRISCbits.TRISC5 = 0;
  2922     0380  0021               	movlb	1	; select bank1
  2923     0381  128E               	bcf	14,5	;volatile
  2924     0382                     l1437:
  2925                           
  2926                           ;../Ressources/spi.c: 53:     SSPDATPPSbits.SSPDATPPS = 0x14;
  2927     0382  003C               	movlb	28	; select bank28
  2928     0383  0821               	movf	33,w	;volatile
  2929     0384  39E0               	andlw	-32
  2930     0385  3814               	iorlw	20
  2931     0386  00A1               	movwf	33	;volatile
  2932                           
  2933                           ;../Ressources/spi.c: 54:     RC3PPSbits.RC3PPS = 0x10;
  2934     0387  003D               	movlb	29	; select bank29
  2935     0388  0823               	movf	35,w	;volatile
  2936     0389  39E0               	andlw	-32
  2937     038A  3810               	iorlw	16
  2938     038B  00A3               	movwf	35	;volatile
  2939                           
  2940                           ;../Ressources/spi.c: 55:     SSPCLKPPSbits.SSPCLKPPS = 0x13;
  2941     038C  003C               	movlb	28	; select bank28
  2942     038D  0820               	movf	32,w	;volatile
  2943     038E  39E0               	andlw	-32
  2944     038F  3813               	iorlw	19
  2945     0390  00A0               	movwf	32	;volatile
  2946                           
  2947                           ;../Ressources/spi.c: 56:     RC5PPSbits.RC5PPS = 0x11;
  2948     0391  003D               	movlb	29	; select bank29
  2949     0392  0825               	movf	37,w	;volatile
  2950     0393  39E0               	andlw	-32
  2951     0394  3811               	iorlw	17
  2952     0395  00A5               	movwf	37	;volatile
  2953     0396                     l175:
  2954     0396  0008               	return
  2955     0397                     __end_of_SPI_InitializePins:
  2956                           
  2957                           	psect	text13
  2958     047B                     __ptext13:	
  2959 ;; *************** function _SPI_Initialize *****************
  2960 ;; Defined at:
  2961 ;;		line 59 in file "../Ressources/spi.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_init
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989     047B                     _SPI_Initialize:	
  2990                           ;psect for function _SPI_Initialize
  2991                           
  2992     047B                     l1439:	
  2993                           ;incstack = 0
  2994                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  2995                           
  2996                           
  2997                           ;../Ressources/spi.c: 61:     SSP1STAT = 0x40;
  2998     047B  3040               	movlw	64
  2999     047C  0024               	movlb	4	; select bank4
  3000     047D  0094               	movwf	20	;volatile
  3001                           
  3002                           ;../Ressources/spi.c: 62:     SSP1CON1 = 0x22;
  3003     047E  3022               	movlw	34
  3004     047F  0095               	movwf	21	;volatile
  3005     0480                     l1441:
  3006                           
  3007                           ;../Ressources/spi.c: 63:     SSP1ADD = 0x00;
  3008     0480  0192               	clrf	18	;volatile
  3009     0481                     l178:
  3010     0481  0008               	return
  3011     0482                     __end_of_SPI_Initialize:
  3012                           
  3013                           	psect	text14
  3014     0495                     __ptext14:	
  3015 ;; *************** function _LCD_InitializePins *****************
  3016 ;; Defined at:
  3017 ;;		line 31 in file "../Ressources/lcd.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;		None
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		None
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3035 ;;Total ram usage:        0 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 1
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_init
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045     0495                     _LCD_InitializePins:	
  3046                           ;psect for function _LCD_InitializePins
  3047                           
  3048     0495                     l1403:	
  3049                           ;incstack = 0
  3050                           ; Regs used in _LCD_InitializePins: []
  3051                           
  3052                           
  3053                           ;../Ressources/lcd.c: 32:     LATAbits.LATA2 = 1;
  3054     0495  0022               	movlb	2	; select bank2
  3055     0496  150C               	bsf	12,2	;volatile
  3056                           
  3057                           ;../Ressources/lcd.c: 33:     TRISAbits.TRISA2 = 0;
  3058     0497  0021               	movlb	1	; select bank1
  3059     0498  110C               	bcf	12,2	;volatile
  3060     0499                     l15:
  3061     0499  0008               	return
  3062     049A                     __end_of_LCD_InitializePins:
  3063                           
  3064                           	psect	text15
  3065     0186                     __ptext15:	
  3066 ;; *************** function _LCD_Initialize *****************
  3067 ;; Defined at:
  3068 ;;		line 36 in file "../Ressources/lcd.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3086 ;;Total ram usage:        2 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 4
  3089 ;; This function calls:
  3090 ;;		_LCD_WriteCommand
  3091 ;;		_LCD_WriteIOExpander
  3092 ;; This function is called by:
  3093 ;;		_init
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097     0186                     _LCD_Initialize:	
  3098                           ;psect for function _LCD_Initialize
  3099                           
  3100     0186                     l1405:	
  3101                           ;incstack = 0
  3102                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3103                           
  3104                           
  3105                           ;../Ressources/lcd.c: 37:     LCD_WriteIOExpander(0x00, 0x00);
  3106     0186  01F1               	clrf	LCD_WriteIOExpander@data
  3107     0187  3000               	movlw	0
  3108     0188  3184  2435  3181   	fcall	_LCD_WriteIOExpander
  3109                           
  3110                           ;../Ressources/lcd.c: 38:     LCD_WriteIOExpander(0x01, 0x00);
  3111     018B  01F1               	clrf	LCD_WriteIOExpander@data
  3112     018C  3001               	movlw	1
  3113     018D  3184  2435  3181   	fcall	_LCD_WriteIOExpander
  3114                           
  3115                           ;../Ressources/lcd.c: 39:     LCD_WriteIOExpander(0x12, 0x20);
  3116     0190  3020               	movlw	32
  3117     0191  00F1               	movwf	LCD_WriteIOExpander@data
  3118     0192  3012               	movlw	18
  3119     0193  3184  2435  3181   	fcall	_LCD_WriteIOExpander
  3120     0196                     l1407:
  3121                           
  3122                           ;../Ressources/lcd.c: 40:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3123     0196  301A               	movlw	26
  3124     0197  00F4               	movwf	??_LCD_Initialize
  3125     0198  30F8               	movlw	248
  3126     0199                     u1087:
  3127     0199  0B89               	decfsz	9,f
  3128     019A  2999               	goto	u1087
  3129     019B  0BF4               	decfsz	??_LCD_Initialize,f
  3130     019C  2999               	goto	u1087
  3131     019D  3200               	nop2
  3132     019E                     l1409:
  3133                           
  3134                           ;../Ressources/lcd.c: 41:     LCD_WriteCommand(0x3C);
  3135     019E  303C               	movlw	60
  3136     019F  3184  2421  3181   	fcall	_LCD_WriteCommand
  3137                           
  3138                           ;../Ressources/lcd.c: 42:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3139     01A2  301A               	movlw	26
  3140     01A3  00F4               	movwf	??_LCD_Initialize
  3141     01A4  30F8               	movlw	248
  3142     01A5                     u1097:
  3143     01A5  0B89               	decfsz	9,f
  3144     01A6  29A5               	goto	u1097
  3145     01A7  0BF4               	decfsz	??_LCD_Initialize,f
  3146     01A8  29A5               	goto	u1097
  3147     01A9  3200               	nop2
  3148     01AA                     l1411:
  3149                           
  3150                           ;../Ressources/lcd.c: 43:     LCD_WriteCommand(0x0C);
  3151     01AA  300C               	movlw	12
  3152     01AB  3184  2421  3181   	fcall	_LCD_WriteCommand
  3153     01AE                     l1413:
  3154                           
  3155                           ;../Ressources/lcd.c: 44:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3156     01AE  301A               	movlw	26
  3157     01AF  00F4               	movwf	??_LCD_Initialize
  3158     01B0  30F8               	movlw	248
  3159     01B1                     u1107:
  3160     01B1  0B89               	decfsz	9,f
  3161     01B2  29B1               	goto	u1107
  3162     01B3  0BF4               	decfsz	??_LCD_Initialize,f
  3163     01B4  29B1               	goto	u1107
  3164     01B5  3200               	nop2
  3165                           
  3166                           ;../Ressources/lcd.c: 45:     LCD_WriteCommand(0x01);
  3167     01B6  3001               	movlw	1
  3168     01B7  3184  2421  3181   	fcall	_LCD_WriteCommand
  3169     01BA                     l1415:
  3170                           
  3171                           ;../Ressources/lcd.c: 46:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3172     01BA  301A               	movlw	26
  3173     01BB  00F4               	movwf	??_LCD_Initialize
  3174     01BC  30F8               	movlw	248
  3175     01BD                     u1117:
  3176     01BD  0B89               	decfsz	9,f
  3177     01BE  29BD               	goto	u1117
  3178     01BF  0BF4               	decfsz	??_LCD_Initialize,f
  3179     01C0  29BD               	goto	u1117
  3180     01C1  3200               	nop2
  3181     01C2                     l1417:
  3182                           
  3183                           ;../Ressources/lcd.c: 47:     LCD_WriteCommand(0x0C);
  3184     01C2  300C               	movlw	12
  3185     01C3  3184  2421  3181   	fcall	_LCD_WriteCommand
  3186                           
  3187                           ;../Ressources/lcd.c: 48:     _delay((unsigned long)((130)*(8000000/4000.0)));
  3188     01C6  3002               	movlw	2
  3189     01C7  00F5               	movwf	??_LCD_Initialize+1
  3190     01C8  3052               	movlw	82
  3191     01C9  00F4               	movwf	??_LCD_Initialize
  3192     01CA  30A6               	movlw	166
  3193     01CB                     u1127:
  3194     01CB  0B89               	decfsz	9,f
  3195     01CC  29CB               	goto	u1127
  3196     01CD  0BF4               	decfsz	??_LCD_Initialize,f
  3197     01CE  29CB               	goto	u1127
  3198     01CF  0BF5               	decfsz	??_LCD_Initialize+1,f
  3199     01D0  29CB               	goto	u1127
  3200     01D1  3200               	nop2
  3201     01D2                     l1419:
  3202                           
  3203                           ;../Ressources/lcd.c: 49:     LCD_WriteCommand(0x80);
  3204     01D2  3080               	movlw	128
  3205     01D3  3184  2421  3181   	fcall	_LCD_WriteCommand
  3206     01D6                     l1421:
  3207                           
  3208                           ;../Ressources/lcd.c: 50:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3209     01D6  3003               	movlw	3
  3210     01D7  00F4               	movwf	??_LCD_Initialize
  3211     01D8  3098               	movlw	152
  3212     01D9                     u1137:
  3213     01D9  0B89               	decfsz	9,f
  3214     01DA  29D9               	goto	u1137
  3215     01DB  0BF4               	decfsz	??_LCD_Initialize,f
  3216     01DC  29D9               	goto	u1137
  3217     01DD                     l18:
  3218     01DD  0008               	return
  3219     01DE                     __end_of_LCD_Initialize:
  3220                           
  3221                           	psect	text16
  3222     048F                     __ptext16:	
  3223 ;; *************** function _dechiffrer *****************
  3224 ;; Defined at:
  3225 ;;		line 100 in file "main.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 1
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_main
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253     048F                     _dechiffrer:	
  3254                           ;psect for function _dechiffrer
  3255                           
  3256     048F                     l1539:	
  3257                           ;incstack = 0
  3258                           ; Regs used in _dechiffrer: [wreg+status,2+status,0]
  3259                           
  3260                           
  3261                           ;main.c: 101:     TX1REG = (char)((int)RC1REG - offset);
  3262     048F  0020               	movlb	0	; select bank0
  3263     0490  0854               	movf	_offset,w
  3264     0491  0023               	movlb	3	; select bank3
  3265     0492  0219               	subwf	25,w	;volatile
  3266     0493  009A               	movwf	26	;volatile
  3267     0494                     l135:
  3268     0494  0008               	return
  3269     0495                     __end_of_dechiffrer:
  3270                           
  3271                           	psect	text17
  3272     0482                     __ptext17:	
  3273 ;; *************** function _chiffrer *****************
  3274 ;; Defined at:
  3275 ;;		line 96 in file "main.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 1
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303     0482                     _chiffrer:	
  3304                           ;psect for function _chiffrer
  3305                           
  3306     0482                     l1537:	
  3307                           ;incstack = 0
  3308                           ; Regs used in _chiffrer: [wreg+status,2+status,0]
  3309                           
  3310                           
  3311                           ;main.c: 97:     TX1REG = (char)((int)RC1REG + offset);
  3312     0482  0023               	movlb	3	; select bank3
  3313     0483  0819               	movf	25,w	;volatile
  3314     0484  0020               	movlb	0	; select bank0
  3315     0485  0754               	addwf	_offset,w
  3316     0486  0023               	movlb	3	; select bank3
  3317     0487  009A               	movwf	26	;volatile
  3318     0488                     l132:
  3319     0488  0008               	return
  3320     0489                     __end_of_chiffrer:
  3321                           
  3322                           	psect	text18
  3323     0300                     __ptext18:	
  3324 ;; *************** function _charToRien *****************
  3325 ;; Defined at:
  3326 ;;		line 104 in file "main.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  nombre          1    wreg     unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  nombre          1    6[BANK0 ] unsigned char 
  3331 ;;  dizaines        1    5[BANK0 ] unsigned char 
  3332 ;;  unite           1    4[BANK0 ] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0, pclath, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3343 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3345 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3346 ;;Total ram usage:        5 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 2
  3349 ;; This function calls:
  3350 ;;		___awdiv
  3351 ;;		___awmod
  3352 ;; This function is called by:
  3353 ;;		_main
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357     0300                     _charToRien:	
  3358                           ;psect for function _charToRien
  3359                           
  3360                           
  3361                           ;incstack = 0
  3362                           ; Regs used in _charToRien: [wreg+status,2+status,0+pclath+cstack]
  3363                           ;charToRien@nombre stored from wreg
  3364     0300  0020               	movlb	0	; select bank0
  3365     0301  00A6               	movwf	charToRien@nombre
  3366     0302                     l1541:
  3367                           
  3368                           ;main.c: 105:     char unite = (nombre%10)+48;
  3369     0302  300A               	movlw	10
  3370     0303  00F0               	movwf	___awmod@divisor
  3371     0304  3000               	movlw	0
  3372     0305  00F1               	movwf	___awmod@divisor+1
  3373     0306  0826               	movf	charToRien@nombre,w
  3374     0307  00FB               	movwf	??_charToRien
  3375     0308  01FC               	clrf	??_charToRien+1
  3376     0309  087B               	movf	??_charToRien,w
  3377     030A  00F2               	movwf	___awmod@dividend
  3378     030B  087C               	movf	??_charToRien+1,w
  3379     030C  00F3               	movwf	___awmod@dividend+1
  3380     030D  3182  2233  3183   	fcall	___awmod
  3381     0310  0870               	movf	?___awmod,w
  3382     0311  3E30               	addlw	48
  3383     0312  0020               	movlb	0	; select bank0
  3384     0313  00A4               	movwf	charToRien@unite
  3385                           
  3386                           ;main.c: 106:     char dizaines = (nombre/10)+48;
  3387     0314  300A               	movlw	10
  3388     0315  00F6               	movwf	___awdiv@divisor
  3389     0316  3000               	movlw	0
  3390     0317  00F7               	movwf	___awdiv@divisor+1
  3391     0318  0826               	movf	charToRien@nombre,w
  3392     0319  00FB               	movwf	??_charToRien
  3393     031A  01FC               	clrf	??_charToRien+1
  3394     031B  087B               	movf	??_charToRien,w
  3395     031C  00F8               	movwf	___awdiv@dividend
  3396     031D  087C               	movf	??_charToRien+1,w
  3397     031E  00F9               	movwf	___awdiv@dividend+1
  3398     031F  3181  2126  3183   	fcall	___awdiv
  3399     0322  0876               	movf	?___awdiv,w
  3400     0323  3E30               	addlw	48
  3401     0324  0020               	movlb	0	; select bank0
  3402     0325  00A5               	movwf	charToRien@dizaines
  3403     0326                     l1543:
  3404                           
  3405                           ;main.c: 107:     String[0] = dizaines;
  3406     0326  0825               	movf	charToRien@dizaines,w
  3407     0327  00D5               	movwf	_String
  3408     0328                     l1545:
  3409                           
  3410                           ;main.c: 108:     String[1] = unite;
  3411     0328  0824               	movf	charToRien@unite,w
  3412     0329  00D6               	movwf	_String+1
  3413     032A                     l138:
  3414     032A  0008               	return
  3415     032B                     __end_of_charToRien:
  3416                           
  3417                           	psect	text19
  3418     0233                     __ptext19:	
  3419 ;; *************** function ___awmod *****************
  3420 ;; Defined at:
  3421 ;;		line 5 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/awmod.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  divisor         2    0[COMMON] int 
  3424 ;;  dividend        2    2[COMMON] int 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  sign            1    6[COMMON] unsigned char 
  3427 ;;  counter         1    5[COMMON] unsigned char 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  2    0[COMMON] int 
  3430 ;; Registers used:
  3431 ;;		wreg, status,2, status,0
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3437 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3440 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3441 ;;Total ram usage:        7 bytes
  3442 ;; Hardware stack levels used: 1
  3443 ;; Hardware stack levels required when called: 1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_charToRien
  3448 ;;		_vfpfcnvrt
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452     0233                     ___awmod:	
  3453                           ;psect for function ___awmod
  3454                           
  3455     0233                     l1271:	
  3456                           ;incstack = 0
  3457                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3458                           
  3459     0233  01F6               	clrf	___awmod@sign
  3460     0234                     l1273:
  3461     0234  1FF3               	btfss	___awmod@dividend+1,7
  3462     0235  2A37               	goto	u651
  3463     0236  2A38               	goto	u650
  3464     0237                     u651:
  3465     0237  2A3F               	goto	l1279
  3466     0238                     u650:
  3467     0238                     l1275:
  3468     0238  09F2               	comf	___awmod@dividend,f
  3469     0239  09F3               	comf	___awmod@dividend+1,f
  3470     023A  0AF2               	incf	___awmod@dividend,f
  3471     023B  1903               	skipnz
  3472     023C  0AF3               	incf	___awmod@dividend+1,f
  3473     023D                     l1277:
  3474     023D  01F6               	clrf	___awmod@sign
  3475     023E  0AF6               	incf	___awmod@sign,f
  3476     023F                     l1279:
  3477     023F  1FF1               	btfss	___awmod@divisor+1,7
  3478     0240  2A42               	goto	u661
  3479     0241  2A43               	goto	u660
  3480     0242                     u661:
  3481     0242  2A48               	goto	l1283
  3482     0243                     u660:
  3483     0243                     l1281:
  3484     0243  09F0               	comf	___awmod@divisor,f
  3485     0244  09F1               	comf	___awmod@divisor+1,f
  3486     0245  0AF0               	incf	___awmod@divisor,f
  3487     0246  1903               	skipnz
  3488     0247  0AF1               	incf	___awmod@divisor+1,f
  3489     0248                     l1283:
  3490     0248  0870               	movf	___awmod@divisor,w
  3491     0249  0471               	iorwf	___awmod@divisor+1,w
  3492     024A  1903               	btfsc	3,2
  3493     024B  2A4D               	goto	u671
  3494     024C  2A4E               	goto	u670
  3495     024D                     u671:
  3496     024D  2A77               	goto	l1301
  3497     024E                     u670:
  3498     024E                     l1285:
  3499     024E  01F5               	clrf	___awmod@counter
  3500     024F  0AF5               	incf	___awmod@counter,f
  3501     0250  2A5A               	goto	l1291
  3502     0251                     l1287:
  3503     0251  3001               	movlw	1
  3504     0252                     u685:
  3505     0252  35F0               	lslf	___awmod@divisor,f
  3506     0253  0DF1               	rlf	___awmod@divisor+1,f
  3507     0254  0B89               	decfsz	9,f
  3508     0255  2A52               	goto	u685
  3509     0256                     l1289:
  3510     0256  3001               	movlw	1
  3511     0257  00F4               	movwf	??___awmod
  3512     0258  0874               	movf	??___awmod,w
  3513     0259  07F5               	addwf	___awmod@counter,f
  3514     025A                     l1291:
  3515     025A  1FF1               	btfss	___awmod@divisor+1,7
  3516     025B  2A5D               	goto	u691
  3517     025C  2A5E               	goto	u690
  3518     025D                     u691:
  3519     025D  2A51               	goto	l1287
  3520     025E                     u690:
  3521     025E                     l1293:
  3522     025E  0871               	movf	___awmod@divisor+1,w
  3523     025F  0273               	subwf	___awmod@dividend+1,w
  3524     0260  1D03               	skipz
  3525     0261  2A64               	goto	u705
  3526     0262  0870               	movf	___awmod@divisor,w
  3527     0263  0272               	subwf	___awmod@dividend,w
  3528     0264                     u705:
  3529     0264  1C03               	skipc
  3530     0265  2A67               	goto	u701
  3531     0266  2A68               	goto	u700
  3532     0267                     u701:
  3533     0267  2A6C               	goto	l1297
  3534     0268                     u700:
  3535     0268                     l1295:
  3536     0268  0870               	movf	___awmod@divisor,w
  3537     0269  02F2               	subwf	___awmod@dividend,f
  3538     026A  0871               	movf	___awmod@divisor+1,w
  3539     026B  3BF3               	subwfb	___awmod@dividend+1,f
  3540     026C                     l1297:
  3541     026C  3001               	movlw	1
  3542     026D                     u715:
  3543     026D  36F1               	lsrf	___awmod@divisor+1,f
  3544     026E  0CF0               	rrf	___awmod@divisor,f
  3545     026F  0B89               	decfsz	9,f
  3546     0270  2A6D               	goto	u715
  3547     0271                     l1299:
  3548     0271  3001               	movlw	1
  3549     0272  02F5               	subwf	___awmod@counter,f
  3550     0273  1D03               	btfss	3,2
  3551     0274  2A76               	goto	u721
  3552     0275  2A77               	goto	u720
  3553     0276                     u721:
  3554     0276  2A5E               	goto	l1293
  3555     0277                     u720:
  3556     0277                     l1301:
  3557     0277  0876               	movf	___awmod@sign,w
  3558     0278  1903               	btfsc	3,2
  3559     0279  2A7B               	goto	u731
  3560     027A  2A7C               	goto	u730
  3561     027B                     u731:
  3562     027B  2A81               	goto	l1305
  3563     027C                     u730:
  3564     027C                     l1303:
  3565     027C  09F2               	comf	___awmod@dividend,f
  3566     027D  09F3               	comf	___awmod@dividend+1,f
  3567     027E  0AF2               	incf	___awmod@dividend,f
  3568     027F  1903               	skipnz
  3569     0280  0AF3               	incf	___awmod@dividend+1,f
  3570     0281                     l1305:
  3571     0281  0873               	movf	___awmod@dividend+1,w
  3572     0282  00F1               	movwf	?___awmod+1
  3573     0283  0872               	movf	___awmod@dividend,w
  3574     0284  00F0               	movwf	?___awmod
  3575     0285                     l442:
  3576     0285  0008               	return
  3577     0286                     __end_of___awmod:
  3578                           
  3579                           	psect	text20
  3580     0126                     __ptext20:	
  3581 ;; *************** function ___awdiv *****************
  3582 ;; Defined at:
  3583 ;;		line 5 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/awdiv.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  divisor         2    6[COMMON] int 
  3586 ;;  dividend        2    8[COMMON] int 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  quotient        2    2[BANK0 ] int 
  3589 ;;  sign            1    1[BANK0 ] unsigned char 
  3590 ;;  counter         1    0[BANK0 ] unsigned char 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  2    6[COMMON] int 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3601 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3603 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3604 ;;Total ram usage:        9 bytes
  3605 ;; Hardware stack levels used: 1
  3606 ;; Hardware stack levels required when called: 1
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_setOffset
  3611 ;;		_charToRien
  3612 ;;		_vfpfcnvrt
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616     0126                     ___awdiv:	
  3617                           ;psect for function ___awdiv
  3618                           
  3619     0126                     l1227:	
  3620                           ;incstack = 0
  3621                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3622                           
  3623     0126  0020               	movlb	0	; select bank0
  3624     0127  01A1               	clrf	___awdiv@sign
  3625     0128                     l1229:
  3626     0128  1FF7               	btfss	___awdiv@divisor+1,7
  3627     0129  292B               	goto	u551
  3628     012A  292C               	goto	u550
  3629     012B                     u551:
  3630     012B  2933               	goto	l1235
  3631     012C                     u550:
  3632     012C                     l1231:
  3633     012C  09F6               	comf	___awdiv@divisor,f
  3634     012D  09F7               	comf	___awdiv@divisor+1,f
  3635     012E  0AF6               	incf	___awdiv@divisor,f
  3636     012F  1903               	skipnz
  3637     0130  0AF7               	incf	___awdiv@divisor+1,f
  3638     0131                     l1233:
  3639     0131  01A1               	clrf	___awdiv@sign
  3640     0132  0AA1               	incf	___awdiv@sign,f
  3641     0133                     l1235:
  3642     0133  1FF9               	btfss	___awdiv@dividend+1,7
  3643     0134  2936               	goto	u561
  3644     0135  2937               	goto	u560
  3645     0136                     u561:
  3646     0136  2940               	goto	l1241
  3647     0137                     u560:
  3648     0137                     l1237:
  3649     0137  09F8               	comf	___awdiv@dividend,f
  3650     0138  09F9               	comf	___awdiv@dividend+1,f
  3651     0139  0AF8               	incf	___awdiv@dividend,f
  3652     013A  1903               	skipnz
  3653     013B  0AF9               	incf	___awdiv@dividend+1,f
  3654     013C                     l1239:
  3655     013C  3001               	movlw	1
  3656     013D  00FA               	movwf	??___awdiv
  3657     013E  087A               	movf	??___awdiv,w
  3658     013F  06A1               	xorwf	___awdiv@sign,f
  3659     0140                     l1241:
  3660     0140  01A2               	clrf	___awdiv@quotient
  3661     0141  01A3               	clrf	___awdiv@quotient+1
  3662     0142                     l1243:
  3663     0142  0876               	movf	___awdiv@divisor,w
  3664     0143  0477               	iorwf	___awdiv@divisor+1,w
  3665     0144  1903               	btfsc	3,2
  3666     0145  2947               	goto	u571
  3667     0146  2948               	goto	u570
  3668     0147                     u571:
  3669     0147  2977               	goto	l1263
  3670     0148                     u570:
  3671     0148                     l1245:
  3672     0148  01A0               	clrf	___awdiv@counter
  3673     0149  0AA0               	incf	___awdiv@counter,f
  3674     014A  2954               	goto	l1251
  3675     014B                     l1247:
  3676     014B  3001               	movlw	1
  3677     014C                     u585:
  3678     014C  35F6               	lslf	___awdiv@divisor,f
  3679     014D  0DF7               	rlf	___awdiv@divisor+1,f
  3680     014E  0B89               	decfsz	9,f
  3681     014F  294C               	goto	u585
  3682     0150                     l1249:
  3683     0150  3001               	movlw	1
  3684     0151  00FA               	movwf	??___awdiv
  3685     0152  087A               	movf	??___awdiv,w
  3686     0153  07A0               	addwf	___awdiv@counter,f
  3687     0154                     l1251:
  3688     0154  1FF7               	btfss	___awdiv@divisor+1,7
  3689     0155  2957               	goto	u591
  3690     0156  2958               	goto	u590
  3691     0157                     u591:
  3692     0157  294B               	goto	l1247
  3693     0158                     u590:
  3694     0158                     l1253:
  3695     0158  3001               	movlw	1
  3696     0159                     u605:
  3697     0159  35A2               	lslf	___awdiv@quotient,f
  3698     015A  0DA3               	rlf	___awdiv@quotient+1,f
  3699     015B  0B89               	decfsz	9,f
  3700     015C  2959               	goto	u605
  3701     015D  0877               	movf	___awdiv@divisor+1,w
  3702     015E  0279               	subwf	___awdiv@dividend+1,w
  3703     015F  1D03               	skipz
  3704     0160  2963               	goto	u615
  3705     0161  0876               	movf	___awdiv@divisor,w
  3706     0162  0278               	subwf	___awdiv@dividend,w
  3707     0163                     u615:
  3708     0163  1C03               	skipc
  3709     0164  2966               	goto	u611
  3710     0165  2967               	goto	u610
  3711     0166                     u611:
  3712     0166  296C               	goto	l1259
  3713     0167                     u610:
  3714     0167                     l1255:
  3715     0167  0876               	movf	___awdiv@divisor,w
  3716     0168  02F8               	subwf	___awdiv@dividend,f
  3717     0169  0877               	movf	___awdiv@divisor+1,w
  3718     016A  3BF9               	subwfb	___awdiv@dividend+1,f
  3719     016B                     l1257:
  3720     016B  1422               	bsf	___awdiv@quotient,0
  3721     016C                     l1259:
  3722     016C  3001               	movlw	1
  3723     016D                     u625:
  3724     016D  36F7               	lsrf	___awdiv@divisor+1,f
  3725     016E  0CF6               	rrf	___awdiv@divisor,f
  3726     016F  0B89               	decfsz	9,f
  3727     0170  296D               	goto	u625
  3728     0171                     l1261:
  3729     0171  3001               	movlw	1
  3730     0172  02A0               	subwf	___awdiv@counter,f
  3731     0173  1D03               	btfss	3,2
  3732     0174  2976               	goto	u631
  3733     0175  2977               	goto	u630
  3734     0176                     u631:
  3735     0176  2958               	goto	l1253
  3736     0177                     u630:
  3737     0177                     l1263:
  3738     0177  0821               	movf	___awdiv@sign,w
  3739     0178  1903               	btfsc	3,2
  3740     0179  297B               	goto	u641
  3741     017A  297C               	goto	u640
  3742     017B                     u641:
  3743     017B  2981               	goto	l1267
  3744     017C                     u640:
  3745     017C                     l1265:
  3746     017C  09A2               	comf	___awdiv@quotient,f
  3747     017D  09A3               	comf	___awdiv@quotient+1,f
  3748     017E  0AA2               	incf	___awdiv@quotient,f
  3749     017F  1903               	skipnz
  3750     0180  0AA3               	incf	___awdiv@quotient+1,f
  3751     0181                     l1267:
  3752     0181  0823               	movf	___awdiv@quotient+1,w
  3753     0182  00F7               	movwf	?___awdiv+1
  3754     0183  0822               	movf	___awdiv@quotient,w
  3755     0184  00F6               	movwf	?___awdiv
  3756     0185                     l429:
  3757     0185  0008               	return
  3758     0186                     __end_of___awdiv:
  3759                           
  3760                           	psect	text21
  3761     03D4                     __ptext21:	
  3762 ;; *************** function _LCD_WriteString *****************
  3763 ;; Defined at:
  3764 ;;		line 73 in file "../Ressources/lcd.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  data            1    wreg     PTR const unsigned char 
  3767 ;;		 -> NULL(0), String(2), 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  data            1    6[COMMON] PTR const unsigned char 
  3770 ;;		 -> NULL(0), String(2), 
  3771 ;;  i               1    5[COMMON] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3784 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3785 ;;Total ram usage:        3 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 4
  3788 ;; This function calls:
  3789 ;;		_LCD_WriteByte
  3790 ;; This function is called by:
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795     03D4                     _LCD_WriteString:	
  3796                           ;psect for function _LCD_WriteString
  3797                           
  3798                           
  3799                           ;incstack = 0
  3800                           ; Regs used in _LCD_WriteString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3801                           ;LCD_WriteString@data stored from wreg
  3802     03D4  00F6               	movwf	LCD_WriteString@data
  3803     03D5                     l1469:
  3804                           
  3805                           ;../Ressources/lcd.c: 74:     char i = 0;
  3806     03D5  01F5               	clrf	LCD_WriteString@i
  3807                           
  3808                           ;../Ressources/lcd.c: 75:     while (data[i]) {
  3809     03D6  2BE5               	goto	l1475
  3810     03D7                     l1471:
  3811                           
  3812                           ;../Ressources/lcd.c: 76:         LCD_WriteByte(data[i++]);
  3813     03D7  0875               	movf	LCD_WriteString@i,w
  3814     03D8  0776               	addwf	LCD_WriteString@data,w
  3815     03D9  00F4               	movwf	??_LCD_WriteString
  3816     03DA  0874               	movf	??_LCD_WriteString,w
  3817     03DB  0086               	movwf	6
  3818     03DC  0187               	clrf	7
  3819     03DD  0801               	movf	1,w
  3820     03DE  3184  240D  3183   	fcall	_LCD_WriteByte
  3821     03E1                     l1473:
  3822     03E1  3001               	movlw	1
  3823     03E2  00F4               	movwf	??_LCD_WriteString
  3824     03E3  0874               	movf	??_LCD_WriteString,w
  3825     03E4  07F5               	addwf	LCD_WriteString@i,f
  3826     03E5                     l1475:
  3827                           
  3828                           ;../Ressources/lcd.c: 75:     while (data[i]) {
  3829     03E5  0875               	movf	LCD_WriteString@i,w
  3830     03E6  0776               	addwf	LCD_WriteString@data,w
  3831     03E7  00F4               	movwf	??_LCD_WriteString
  3832     03E8  0874               	movf	??_LCD_WriteString,w
  3833     03E9  0086               	movwf	6
  3834     03EA  0187               	clrf	7
  3835     03EB  0801               	movf	1,w
  3836     03EC  1D03               	btfss	3,2
  3837     03ED  2BEF               	goto	u961
  3838     03EE  2BF0               	goto	u960
  3839     03EF                     u961:
  3840     03EF  2BD7               	goto	l1471
  3841     03F0                     u960:
  3842     03F0                     l33:
  3843     03F0  0008               	return
  3844     03F1                     __end_of_LCD_WriteString:
  3845                           
  3846                           	psect	text22
  3847     040D                     __ptext22:	
  3848 ;; *************** function _LCD_WriteByte *****************
  3849 ;; Defined at:
  3850 ;;		line 67 in file "../Ressources/lcd.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  data            1    wreg     unsigned char 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  data            1    3[COMMON] unsigned char 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      void 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0, pclath, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3868 ;;Total ram usage:        1 bytes
  3869 ;; Hardware stack levels used: 1
  3870 ;; Hardware stack levels required when called: 3
  3871 ;; This function calls:
  3872 ;;		_LCD_WriteIOExpander
  3873 ;; This function is called by:
  3874 ;;		_LCD_WriteString
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878     040D                     _LCD_WriteByte:	
  3879                           ;psect for function _LCD_WriteByte
  3880                           
  3881                           
  3882                           ;incstack = 0
  3883                           ; Regs used in _LCD_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  3884                           ;LCD_WriteByte@data stored from wreg
  3885     040D  00F3               	movwf	LCD_WriteByte@data
  3886     040E                     l1423:
  3887                           
  3888                           ;../Ressources/lcd.c: 68:     LCD_WriteIOExpander(0x12, 0xE0);
  3889     040E  30E0               	movlw	224
  3890     040F  00F1               	movwf	LCD_WriteIOExpander@data
  3891     0410  3012               	movlw	18
  3892     0411  3184  2435  3184   	fcall	_LCD_WriteIOExpander
  3893                           
  3894                           ;../Ressources/lcd.c: 69:     LCD_WriteIOExpander(0x13, data);
  3895     0414  0873               	movf	LCD_WriteByte@data,w
  3896     0415  00F1               	movwf	LCD_WriteIOExpander@data
  3897     0416  3013               	movlw	19
  3898     0417  3184  2435  3184   	fcall	_LCD_WriteIOExpander
  3899                           
  3900                           ;../Ressources/lcd.c: 70:     LCD_WriteIOExpander(0x12, 0xA0);
  3901     041A  30A0               	movlw	160
  3902     041B  00F1               	movwf	LCD_WriteIOExpander@data
  3903     041C  3012               	movlw	18
  3904     041D  3184  2435  3184   	fcall	_LCD_WriteIOExpander
  3905     0420                     l27:
  3906     0420  0008               	return
  3907     0421                     __end_of_LCD_WriteByte:
  3908                           
  3909                           	psect	text23
  3910     0471                     __ptext23:	
  3911 ;; *************** function _LCD_Clear *****************
  3912 ;; Defined at:
  3913 ;;		line 87 in file "../Ressources/lcd.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0, pclath, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3931 ;;Total ram usage:        0 bytes
  3932 ;; Hardware stack levels used: 1
  3933 ;; Hardware stack levels required when called: 5
  3934 ;; This function calls:
  3935 ;;		_LCD_GoTo
  3936 ;;		_LCD_WriteCommand
  3937 ;; This function is called by:
  3938 ;;		_main
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942     0471                     _LCD_Clear:	
  3943                           ;psect for function _LCD_Clear
  3944                           
  3945     0471                     l1477:	
  3946                           ;incstack = 0
  3947                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3948                           
  3949                           
  3950                           ;../Ressources/lcd.c: 88:     LCD_WriteCommand(0x01);
  3951     0471  3001               	movlw	1
  3952     0472  3184  2421  3184   	fcall	_LCD_WriteCommand
  3953                           
  3954                           ;../Ressources/lcd.c: 89:     LCD_GoTo(0, 0);
  3955     0475  01F4               	clrf	LCD_GoTo@column
  3956     0476  3000               	movlw	0
  3957     0477  3183  23B6  3184   	fcall	_LCD_GoTo
  3958     047A                     l44:
  3959     047A  0008               	return
  3960     047B                     __end_of_LCD_Clear:
  3961                           
  3962                           	psect	text24
  3963     03B6                     __ptext24:	
  3964 ;; *************** function _LCD_GoTo *****************
  3965 ;; Defined at:
  3966 ;;		line 80 in file "../Ressources/lcd.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  row             1    wreg     unsigned char 
  3969 ;;  column          1    4[COMMON] unsigned char 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  row             1    8[COMMON] unsigned char 
  3972 ;;  pos             1    7[COMMON] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0, pclath, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3982 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3983 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3985 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3986 ;;Total ram usage:        5 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; Hardware stack levels required when called: 4
  3989 ;; This function calls:
  3990 ;;		_LCD_WriteCommand
  3991 ;; This function is called by:
  3992 ;;		_LCD_Clear
  3993 ;;		_main
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997     03B6                     _LCD_GoTo:	
  3998                           ;psect for function _LCD_GoTo
  3999                           
  4000                           
  4001                           ;incstack = 0
  4002                           ; Regs used in _LCD_GoTo: [wreg+status,2+status,0+pclath+cstack]
  4003                           ;LCD_GoTo@row stored from wreg
  4004     03B6  00F8               	movwf	LCD_GoTo@row
  4005     03B7                     l1425:
  4006                           
  4007                           ;../Ressources/lcd.c: 81:     if (row < 2) {
  4008     03B7  3002               	movlw	2
  4009     03B8  0278               	subwf	LCD_GoTo@row,w
  4010     03B9  1803               	skipnc
  4011     03BA  2BBC               	goto	u901
  4012     03BB  2BBD               	goto	u900
  4013     03BC                     u901:
  4014     03BC  2BD3               	goto	l41
  4015     03BD                     u900:
  4016     03BD                     l1427:
  4017                           
  4018                           ;../Ressources/lcd.c: 82:         char pos = (row == 0) ? (0x80 | column) : (0xC0 | colu
      +                          mn);
  4019     03BD  0878               	movf	LCD_GoTo@row,w
  4020     03BE  1903               	btfsc	3,2
  4021     03BF  2BC1               	goto	u911
  4022     03C0  2BC2               	goto	u910
  4023     03C1                     u911:
  4024     03C1  2BC8               	goto	l1431
  4025     03C2                     u910:
  4026     03C2                     l1429:
  4027     03C2  30C0               	movlw	192
  4028     03C3  0474               	iorwf	LCD_GoTo@column,w
  4029     03C4  00F5               	movwf	_LCD_GoTo$119
  4030     03C5  3000               	movlw	0
  4031     03C6  00F6               	movwf	_LCD_GoTo$119+1
  4032     03C7  2BCD               	goto	l40
  4033     03C8                     l1431:
  4034     03C8  3080               	movlw	128
  4035     03C9  0474               	iorwf	LCD_GoTo@column,w
  4036     03CA  00F5               	movwf	_LCD_GoTo$119
  4037     03CB  3000               	movlw	0
  4038     03CC  00F6               	movwf	_LCD_GoTo$119+1
  4039     03CD                     l40:
  4040     03CD  0875               	movf	_LCD_GoTo$119,w
  4041     03CE  00F7               	movwf	LCD_GoTo@pos
  4042     03CF                     l1433:
  4043                           
  4044                           ;../Ressources/lcd.c: 83:         LCD_WriteCommand(pos);
  4045     03CF  0877               	movf	LCD_GoTo@pos,w
  4046     03D0  3184  2421  3183   	fcall	_LCD_WriteCommand
  4047     03D3                     l41:
  4048     03D3  0008               	return
  4049     03D4                     __end_of_LCD_GoTo:
  4050                           
  4051                           	psect	text25
  4052     0421                     __ptext25:	
  4053 ;; *************** function _LCD_WriteCommand *****************
  4054 ;; Defined at:
  4055 ;;		line 61 in file "../Ressources/lcd.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  cmd             1    wreg     unsigned char 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  cmd             1    3[COMMON] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0, pclath, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4072 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4073 ;;Total ram usage:        1 bytes
  4074 ;; Hardware stack levels used: 1
  4075 ;; Hardware stack levels required when called: 3
  4076 ;; This function calls:
  4077 ;;		_LCD_WriteIOExpander
  4078 ;; This function is called by:
  4079 ;;		_LCD_Initialize
  4080 ;;		_LCD_GoTo
  4081 ;;		_LCD_Clear
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085     0421                     _LCD_WriteCommand:	
  4086                           ;psect for function _LCD_WriteCommand
  4087                           
  4088                           
  4089                           ;incstack = 0
  4090                           ; Regs used in _LCD_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
  4091                           ;LCD_WriteCommand@cmd stored from wreg
  4092     0421  00F3               	movwf	LCD_WriteCommand@cmd
  4093     0422                     l1391:
  4094                           
  4095                           ;../Ressources/lcd.c: 62:     LCD_WriteIOExpander(0x12, 0x60);
  4096     0422  3060               	movlw	96
  4097     0423  00F1               	movwf	LCD_WriteIOExpander@data
  4098     0424  3012               	movlw	18
  4099     0425  3184  2435  3184   	fcall	_LCD_WriteIOExpander
  4100                           
  4101                           ;../Ressources/lcd.c: 63:     LCD_WriteIOExpander(0x13, cmd);
  4102     0428  0873               	movf	LCD_WriteCommand@cmd,w
  4103     0429  00F1               	movwf	LCD_WriteIOExpander@data
  4104     042A  3013               	movlw	19
  4105     042B  3184  2435  3184   	fcall	_LCD_WriteIOExpander
  4106                           
  4107                           ;../Ressources/lcd.c: 64:     LCD_WriteIOExpander(0x12, 0x20);
  4108     042E  3020               	movlw	32
  4109     042F  00F1               	movwf	LCD_WriteIOExpander@data
  4110     0430  3012               	movlw	18
  4111     0431  3184  2435  3184   	fcall	_LCD_WriteIOExpander
  4112     0434                     l24:
  4113     0434  0008               	return
  4114     0435                     __end_of_LCD_WriteCommand:
  4115                           
  4116                           	psect	text26
  4117     0435                     __ptext26:	
  4118 ;; *************** function _LCD_WriteIOExpander *****************
  4119 ;; Defined at:
  4120 ;;		line 53 in file "../Ressources/lcd.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  reg             1    wreg     unsigned char 
  4123 ;;  data            1    1[COMMON] unsigned char 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  reg             1    2[COMMON] unsigned char 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2, status,0, pclath, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4135 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4138 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4139 ;;Total ram usage:        2 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; Hardware stack levels required when called: 2
  4142 ;; This function calls:
  4143 ;;		_SPI_Exchange8bit
  4144 ;; This function is called by:
  4145 ;;		_LCD_Initialize
  4146 ;;		_LCD_WriteCommand
  4147 ;;		_LCD_WriteByte
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151     0435                     _LCD_WriteIOExpander:	
  4152                           ;psect for function _LCD_WriteIOExpander
  4153                           
  4154                           
  4155                           ;incstack = 0
  4156                           ; Regs used in _LCD_WriteIOExpander: [wreg+status,2+status,0+pclath+cstack]
  4157                           ;LCD_WriteIOExpander@reg stored from wreg
  4158     0435  00F2               	movwf	LCD_WriteIOExpander@reg
  4159     0436                     l1333:
  4160                           
  4161                           ;../Ressources/lcd.c: 54:     LATAbits.LATA2 = 0;
  4162     0436  0022               	movlb	2	; select bank2
  4163     0437  110C               	bcf	12,2	;volatile
  4164     0438                     l1335:
  4165                           
  4166                           ;../Ressources/lcd.c: 55:     SPI_Exchange8bit(0x40);
  4167     0438  3040               	movlw	64
  4168     0439  3184  2458  3184   	fcall	_SPI_Exchange8bit
  4169                           
  4170                           ;../Ressources/lcd.c: 56:     SPI_Exchange8bit(reg);
  4171     043C  0872               	movf	LCD_WriteIOExpander@reg,w
  4172     043D  3184  2458  3184   	fcall	_SPI_Exchange8bit
  4173                           
  4174                           ;../Ressources/lcd.c: 57:     SPI_Exchange8bit(data);
  4175     0440  0871               	movf	LCD_WriteIOExpander@data,w
  4176     0441  3184  2458  3184   	fcall	_SPI_Exchange8bit
  4177     0444                     l1337:
  4178                           
  4179                           ;../Ressources/lcd.c: 58:     LATAbits.LATA2 = 1;
  4180     0444  0022               	movlb	2	; select bank2
  4181     0445  150C               	bsf	12,2	;volatile
  4182     0446                     l21:
  4183     0446  0008               	return
  4184     0447                     __end_of_LCD_WriteIOExpander:
  4185                           
  4186                           	psect	text27
  4187     0458                     __ptext27:	
  4188 ;; *************** function _SPI_Exchange8bit *****************
  4189 ;; Defined at:
  4190 ;;		line 66 in file "../Ressources/spi.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  data            1    wreg     unsigned char 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  data            1    0[COMMON] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      unsigned char 
  4197 ;; Registers used:
  4198 ;;		wreg
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4208 ;;Total ram usage:        1 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 1
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_LCD_WriteIOExpander
  4215 ;;		_SPI_Exchange8bitBuffer
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219     0458                     _SPI_Exchange8bit:	
  4220                           ;psect for function _SPI_Exchange8bit
  4221                           
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in _SPI_Exchange8bit: [wreg]
  4225                           ;SPI_Exchange8bit@data stored from wreg
  4226     0458  00F0               	movwf	SPI_Exchange8bit@data
  4227     0459                     l1219:
  4228                           
  4229                           ;../Ressources/spi.c: 66: char SPI_Exchange8bit(char data);../Ressources/spi.c: 67: {;..
      +                          /Ressources/spi.c: 69:     SSP1CON1bits.WCOL = 0;
  4230     0459  0024               	movlb	4	; select bank4
  4231     045A  1395               	bcf	21,7	;volatile
  4232     045B                     l1221:
  4233                           
  4234                           ;../Ressources/spi.c: 71:     SSP1BUF = data;
  4235     045B  0870               	movf	SPI_Exchange8bit@data,w
  4236     045C  0091               	movwf	17	;volatile
  4237                           
  4238                           ;../Ressources/spi.c: 73:     while(SSP1STATbits.BF == 0x0)
  4239     045D  2C5F               	goto	l181
  4240     045E                     l182:
  4241     045E  0064               	clrwdt	;# 
  4242     045F                     l181:	
  4243                           ;../Ressources/spi.c: 76:     }
  4244                           
  4245                           
  4246                           ;../Ressources/spi.c: 73:     while(SSP1STATbits.BF == 0x0)
  4247     045F  0024               	movlb	4	; select bank4
  4248     0460  1C14               	btfss	20,0	;volatile
  4249     0461  2C63               	goto	u541
  4250     0462  2C64               	goto	u540
  4251     0463                     u541:
  4252     0463  2C5E               	goto	l182
  4253     0464                     u540:
  4254     0464                     l1223:
  4255                           
  4256                           ;../Ressources/spi.c: 78:     return (SSP1BUF);
  4257     0464  0811               	movf	17,w	;volatile
  4258     0465                     l184:
  4259     0465  0008               	return
  4260     0466                     __end_of_SPI_Exchange8bit:
  4261                           
  4262                           	psect	intentry
  4263     0004                     __pintentry:	
  4264 ;; *************** function _isr *****************
  4265 ;; Defined at:
  4266 ;;		line 68 in file "main.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		Interrupt level 1
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293     0004                     _isr:
  4294                           
  4295                           ;incstack = 0
  4296     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4297                           
  4298                           ; Regs used in _isr: [wreg+status,2+status,0]
  4299     0005  3180               	pagesel	$
  4300     0006                     i1l1547:
  4301                           
  4302                           ;main.c: 69:     if (PIE1bits.RCIE && PIR1bits.RCIF) {
  4303     0006  0021               	movlb	1	; select bank1
  4304     0007  1E91               	btfss	17,5	;volatile
  4305     0008  280A               	goto	u98_21
  4306     0009  280B               	goto	u98_20
  4307     000A                     u98_21:
  4308     000A  2816               	goto	i1l123
  4309     000B                     u98_20:
  4310     000B                     i1l1549:
  4311     000B  0020               	movlb	0	; select bank0
  4312     000C  1E91               	btfss	17,5	;volatile
  4313     000D  280F               	goto	u99_21
  4314     000E  2810               	goto	u99_20
  4315     000F                     u99_21:
  4316     000F  2816               	goto	i1l123
  4317     0010                     u99_20:
  4318     0010                     i1l1551:
  4319                           
  4320                           ;main.c: 70:         TX1REG = (char)((int)RC1REG + offset);
  4321     0010  0023               	movlb	3	; select bank3
  4322     0011  0819               	movf	25,w	;volatile
  4323     0012  0020               	movlb	0	; select bank0
  4324     0013  0754               	addwf	_offset,w
  4325     0014  0023               	movlb	3	; select bank3
  4326     0015  009A               	movwf	26	;volatile
  4327     0016                     i1l123:
  4328     0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4329     0017  0009               	retfie
  4330     0018                     __end_of_isr:
  4331     007E                     btemp	set	126	;btemp
  4332     007E                     int$flags	set	126
  4333     007E                     wtemp0	set	126
  4334                           
  4335                           	psect	config
  4336                           
  4337                           ;Config register CONFIG1 @ 0x8007
  4338                           ;	Oscillator Selection Bits
  4339                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  4340                           ;	Watchdog Timer Enable
  4341                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  4342                           ;	Power-up Timer Enable
  4343                           ;	PWRTE = OFF, PWRT disabled
  4344                           ;	MCLR Pin Function Select
  4345                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4346                           ;	Flash Program Memory Code Protection
  4347                           ;	CP = OFF, Program memory code protection is disabled
  4348                           ;	Brown-out Reset Enable
  4349                           ;	BOREN = ON, Brown-out Reset enabled
  4350                           ;	Clock Out Enable
  4351                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4352                           ;	Internal/External Switchover Mode
  4353                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  4354                           ;	Fail-Safe Clock Monitor Enable
  4355                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4356     8007                     	org	32775
  4357     8007  3FEA               	dw	16362
  4358                           
  4359                           ;Config register CONFIG2 @ 0x8008
  4360                           ;	Flash Memory Self-Write Protection
  4361                           ;	WRT = OFF, Write protection off
  4362                           ;	Peripheral Pin Select one-way control
  4363                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  4364                           ;	Zero-cross detect disable
  4365                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4366                           ;	Phase Lock Loop enable
  4367                           ;	PLLEN = OFF, 4x PLL is disnabled
  4368                           ;	Stack Overflow/Underflow Reset Enable
  4369                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4370                           ;	Brown-out Reset Voltage Selection
  4371                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4372                           ;	Low-Power Brown Out Reset
  4373                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4374                           ;	In-Circuit Debugger Mode
  4375                           ;	DEBUG = 0x1, unprogrammed default
  4376                           ;	Low-Voltage Programming Enable
  4377                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4378     8008                     	org	32776
  4379     8008  1EFB               	dw	7931

Data Sizes:
    Strings     3
    Constant    0
    Data        3
    BSS         39
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      55
    BANK1            80      0      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    DebugValue	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_WriteString@data	PTR const unsigned char  size(1) Largest target is 2
		 -> String(BANK0[2]), NULL(NULL[0]), 

    S1041$buffer	PTR unsigned char  size(2) Largest target is 0

    S1041$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_setOffset
    _sprintf->_vfprintf
    _vfpfcnvrt->___awdiv
    _vfpfcnvrt->_abs
    _abs->___awmod
    _init->_LCD_Initialize
    _LCD_Initialize->_LCD_WriteCommand
    _charToRien->___awdiv
    ___awdiv->___wmul
    _LCD_WriteString->_LCD_WriteByte
    _LCD_WriteByte->_LCD_WriteIOExpander
    _LCD_Clear->_LCD_GoTo
    _LCD_GoTo->_LCD_WriteCommand
    _LCD_WriteCommand->_LCD_WriteIOExpander
    _LCD_WriteIOExpander->_SPI_Exchange8bit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setOffset->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___awdiv
    _charToRien->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11640
                                             43 BANK0      2     2      0
                          _LCD_Clear
                           _LCD_GoTo
                    _LCD_WriteString
                         _charToRien
                           _chiffrer
                         _dechiffrer
                               _init
                           _init_adc
                           _init_pot
                          _setOffset
 ---------------------------------------------------------------------------------
 (1) _setOffset                                            2     2      0    4702
                                             12 COMMON     2     2      0
                            ___awdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    14      6    3657
                                             25 BANK0     18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3    3306
                                             11 COMMON     1     1      0
                                             19 BANK0      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    13      2    2999
                                              4 BANK0     15    13      2
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_pot                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    1522
                     _LCD_Initialize
                 _LCD_InitializePins
                     _SPI_Initialize
                 _SPI_InitializePins
 ---------------------------------------------------------------------------------
 (2) _SPI_InitializePins                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_InitializePins                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       2     2      0    1522
                                              4 COMMON     2     2      0
                   _LCD_WriteCommand
                _LCD_WriteIOExpander
 ---------------------------------------------------------------------------------
 (1) _dechiffrer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _chiffrer                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _charToRien                                           5     5      0    1446
                                             11 COMMON     2     2      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     756
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      3     3      0     928
                                              4 COMMON     3     3      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteByte                                        1     1      0     772
                                              3 COMMON     1     1      0
                _LCD_WriteIOExpander
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    1907
                           _LCD_GoTo
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_GoTo                                             5     4      1    1135
                                              4 COMMON     5     4      1
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteCommand                                     1     1      0     772
                                              3 COMMON     1     1      0
                _LCD_WriteIOExpander
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteIOExpander                                  2     1      1     750
                                              1 COMMON     2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bit                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_GoTo
       _LCD_WriteCommand
         _LCD_WriteIOExpander
           _SPI_Exchange8bit
     _LCD_WriteCommand
   _LCD_GoTo
   _LCD_WriteString
     _LCD_WriteByte
       _LCD_WriteIOExpander
   _charToRien
     ___awdiv
       ___wmul (ARG)
     ___awmod
   _chiffrer
   _dechiffrer
   _init
     _LCD_Initialize
       _LCD_WriteCommand
       _LCD_WriteIOExpander
     _LCD_InitializePins
     _SPI_Initialize
     _SPI_InitializePins
   _init_adc
   _init_pot
   _setOffset
     ___awdiv
     ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      37       5       68.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      65      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      65      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb  6 17:29:51 2024

             _SPI_Initialize 047B               _LCD_Initialize 0186                           l21 0446  
                         l15 0499                           l24 0434                           l40 03CD  
                         l41 03D3                           l33 03F0                           l18 01DD  
                         l27 0420                           l44 047A                 ___awdiv@sign 0021  
        ___wmul@multiplicand 0072                          l111 0353                          l114 049D  
                        l132 0488                          l117 0470                          l126 02D1  
                        l135 0494                          l129 02FF                          l138 032A  
                        l181 045F                          l182 045E                          l175 0396  
                        l184 0465                          l442 0285                          l178 0481  
                        l276 03A1                          l429 0185                          l278 03B5  
                        l802 0232                          l813 04A4                          l739 0375  
                        l790 0457                          l783 040C                          l777 0125  
                        u610 0167                          u611 0166                          u540 0464  
                        u700 0268                          u541 0463                          u605 0159  
                        u701 0267                          u630 0177                          u550 012C  
                        u631 0176                          u615 0163                          u551 012B  
                        u640 017C                          u560 0137                          u720 0277  
                        u800 0071                          u641 017B                          u625 016D  
                        u561 0136                          u721 0276                          u705 0264  
                        u801 0070                          u570 0148                          u730 027C  
                        u650 0238                          u810 007B                          u571 0147  
                        u731 027B                          u715 026D                          u651 0237  
                        u811 007A                          u900 03BD                          u660 0243  
                        u740 01E3                          u820 009B                          u901 03BC  
                        u661 0242                          u741 01E2                          u821 0099  
                        u910 03C2                          u590 0158                          u670 024E  
                        u750 01E8                          u830 009C                          u911 03C1  
                        u591 0157                          u671 024D                          u751 01E7  
                        u920 039D                          u760 01F7                          u840 00CF  
                        u585 014C                          u921 039C                          u761 01F6  
                        u841 00CE                          u690 025E                          u770 0215  
                        u850 00D4                          u691 025D                          u771 0214  
                        u851 00D3                          u780 044B                          u860 00D9  
                        u685 0252                          u781 044A                          u861 00D8  
                        u950 03B1                          u870 00DE                          u790 004D  
                        u951 03B0                          u935 03A2                          u775 0211  
                        u871 00DD                          u791 004C                          u960 03F0  
                        u880 0102                          u961 03EF                          u945 03A7  
                        u881 0101                          u890 040A                          u970 02D5  
                        u891 0409                          u971 02D4                          _abs 0447  
                        _isr 0004                 ___awmod@sign 0076                          wreg 0009  
          ??_LCD_WriteString 0074            ?_LCD_WriteCommand 0070                 _BAUD1CONbits 019F  
         ??_LCD_WriteCommand 0073                         ?_abs 0077                         l1221 045B  
                       l1301 0277                         l1223 0464                         l1231 012C  
                       l1303 027C                         l1311 01E3                         l1241 0140  
                       l1233 0131                         l1305 0281                         l1321 0229  
                       l1313 01E8                         l1219 0459                         l1251 0154  
                       l1243 0142                         l1235 0133                         l1227 0126  
                       l1411 01AA                         l1403 0495                         l1315 01ED  
                       l1333 0436                         l1261 0171                         l1253 0158  
                       l1245 0148                         l1237 0137                         l1229 0128  
                       l1421 01D6                         l1413 01AE                         l1405 0186  
                       l1501 0342                         l1325 0447                         l1317 01F7  
                       l1309 01DE                         l1341 004D                         l1335 0438  
                       l1431 03C8                         l1423 040E                         l1255 0167  
                       l1247 014B                         l1263 0177                         l1239 013C  
                       l1271 0233                         l1415 01BA                         l1407 0196  
                       l1511 034A                         l1503 0343                         l1327 044B  
                       l1319 0215                         l1351 0071                         l1343 0055  
                       l1337 0444                         l1433 03CF                         l1425 03B7  
                       l1265 017C                         l1257 016B                         l1249 0150  
                       l1281 0243                         l1273 0234                         l1417 01C2  
                       l1409 019E                         l1441 0480                         l1513 034D  
                       l1505 0344                         l1521 0468                         l1329 044C  
                       l1361 009D                         l1353 007B                         l1345 005C  
                       l1427 03BD                         l1267 0181                         l1259 016C  
                       l1291 025A                         l1283 0248                         l1275 0238  
                       l1419 01D2                         l1435 0376                         l1515 0350  
                       l1507 0345                         l1523 046C                         l1371 00D9  
                       l1363 00B8                         l1355 0087                         l1347 0060  
                       l1339 003C                         l1451 0369                         l1443 0354  
                       l1531 02D9                         l1429 03C2                         l1293 025E  
                       l1285 024E                         l1277 023D                         l1541 0302  
                       l1437 0382                         l1509 0347                         l1525 046D  
                       l1517 049A                         l1461 03A6                         l1373 00DE  
                       l1365 00C9                         l1357 0094                         l1381 0103  
                       l1349 0067                         l1445 035B                         l1533 02E8  
                       l1391 0422                         l1471 03D7                         l1295 0268  
                       l1287 0251                         l1279 023F                         l1543 0326  
                       l1439 047B                         l1519 0466                         l1463 03AB  
                       l1455 0397                         l1375 00E7                         l1367 00CF  
                       l1359 0096                         l1447 035D                         l1527 02CF  
                       l1473 03E1                         l1297 026C                         l1289 0256  
                       l1545 0328                         l1537 0482                         l1481 0335  
                       l1465 03B1                         l1457 0399                         l1377 00F7  
                       l1369 00D4                         l1385 010D                         l1393 03F3  
                       l1449 035F                         l1529 02D5                         l1561 0292  
                       l1553 0286                         l1475 03E5                         l1299 0271  
                       l1539 048F                         l1491 033C                         l1483 0337  
                       l1459 039D                         l1379 00FC                         l1395 03F8  
                       l1571 02A6                         l1563 0297                         l1555 0289  
                       l1477 0471                         l1469 03D5                         l1493 033D  
                       l1485 0338                         l1397 0400                         l1581 02C5  
                       l1573 02AA                         l1565 029B                         l1557 028C  
                       l1495 033E                         l1487 033A                         l1479 032B  
                       l1399 040A                         l1583 02C9                         l1575 02AF  
                       l1567 029E                         l1559 028F                         l1497 0340  
                       l1489 033B                         l1577 02B3                         l1569 02A1  
                       l1499 0341                         l1579 02C0                         ?_isr 0070  
                       STR_1 04A1                         u1000 02C5                         u1001 02C4  
                       u1107 01B1                         u1117 01BD                         u1127 01CB  
                       u1137 01D9                         u1077 02B9                         u1087 0199  
                       u1097 01A5                   _DebugValue 0051                  LCD_GoTo@pos 0077  
                LCD_GoTo@row 0078                         abs@a 0077                         _dbuf 00A0  
                       _main 0286                         _init 032B                         _prec 004F  
                       fsr0h 0005                         fsr1h 0007                         indf0 0000  
                       fsr0l 0004                         indf1 0001                         fsr1l 0006  
                       btemp 007E                         start 0018       __end_of_SPI_Initialize 0482  
     __end_of_LCD_Initialize 01DE           _SPI_InitializePins 0376                _LCD_WriteByte 040D  
                      ??_abs 0079                        ??_isr 0070             __end_of_LCD_GoTo 03D4  
        ?_SPI_InitializePins 0070          _LCD_WriteIOExpander 0435          LCD_WriteString@data 0076  
                      ?_main 0070                        ?_init 0070              __end_of___awdiv 0186  
            __end_of___awmod 0286              ___awdiv@divisor 0076                        i1l123 0016  
            ___awdiv@counter 0020                 vfpfcnvrt@fmt 0024                        u98_20 000B  
                      u98_21 000A                        u99_20 0010                        u99_21 000F  
                      _flags 0053                        _fputc 01DE           _LCD_InitializePins 0495  
                      _width 004D                        _putch 04A4         ??_SPI_InitializePins 0070  
       ?_LCD_WriteIOExpander 0071                        status 0003                        wtemp0 007E  
            __end_of_sprintf 0376          ?_LCD_InitializePins 0070               ?_LCD_WriteByte 0070  
            ?_SPI_Initialize 0070              ?_LCD_Initialize 0070              __initialization 001A  
               __end_of_main 02CF                 __end_of_init 0354                       ??_main 004B  
                     ??_init 0076         ??_LCD_InitializePins 0070            __end_of_LCD_Clear 047B  
   __end_of_SPI_Exchange8bit 0466                       ?_fputc 0070                       _ADRESH 009C  
                     _ADRESL 009B             ___awdiv@dividend 0078                       ?_putch 0070  
                     _RC1REG 0199                       i1l1551 0010                       i1l1547 0006  
                     i1l1549 000B        ??_LCD_WriteIOExpander 0072                vfpfcnvrt@done 002A  
                     _TX1REG 019A             __end_of_chiffrer 0489                 vfprintf@cfmt 0037  
                     _String 0055                       ___wmul 0397                    ??___awdiv 007A  
                  ??___awmod 0074             __end_of_init_adc 0471                       _offset 0054  
           __end_of_init_pot 049E             ___awdiv@quotient 0022              ___awmod@divisor 0070  
            ___awmod@counter 0075                       fputc@c 0070                       putch@c 0070  
           __end_of_vfprintf 040D                    ??_sprintf 007C      __end_of__initialization 0036  
                  ?_LCD_GoTo 0074              ??_LCD_WriteByte 0073             LCD_WriteString@i 0075  
             __pcstackCOMMON 0070                 __pidataBANK0 049E              _LCD_WriteString 03D4  
              __end_of_fputc 0233                __end_of_putch 04A5      LCD_WriteIOExpander@data 0071  
                    ??_fputc 0073                      ??_putch 0070                   _charToRien 0300  
                 _dechiffrer 048F                   __pbssBANK0 004D                   __pbssBANK1 00A0  
                 ??_LCD_GoTo 0075                   __pmaintext 0286                      ?___wmul 0070  
                 __pintentry 0004                    ?_chiffrer 0070                      _SSP1ADD 0212  
                    _SSP1BUF 0211             ??_SPI_Initialize 0070             ??_LCD_Initialize 0074  
                  ?_init_adc 0070                    ?_init_pot 0070               LCD_GoTo@column 0074  
    __end_of_LCD_WriteString 03F1                      ___awdiv 0126                      ___awmod 0233  
                  ?_vfprintf 0033                      __ptext1 02CF                      __ptext2 0354  
                    __ptext3 03F1                      __ptext4 003A                      __ptext5 01DE  
                    __ptext6 04A4                      __ptext7 0447                      __ptext8 0397  
                    __ptext9 049A             ___awmod@dividend 0072                   ??_chiffrer 0070  
         charToRien@dizaines 0025                    _LCD_Clear 0471            ?_SPI_Exchange8bit 0070  
                    _sprintf 0354                      clrloop0 048A                  ?_charToRien 0070  
       end_of_initialization 0036            __end_of_setOffset 0300                  ?_dechiffrer 0070  
         ??_SPI_Exchange8bit 0070         SPI_Exchange8bit@data 0070            LCD_WriteByte@data 0073  
                    fputc@fp 0072                   ??_init_adc 0070                   ??_init_pot 0070  
          __end_of_vfpfcnvrt 0126                 _LCD_GoTo$119 0075             vfpfcnvrt@convarg 002E  
                 ??_vfprintf 007B                    _PORTBbits 000D                    _TRISAbits 008C  
                  _TRISCbits 008E  __end_of_LCD_WriteIOExpander 0447                   ?_LCD_Clear 0070  
                  _RXPPSbits 0E24             ?_LCD_WriteString 0070             _LCD_WriteCommand 0421  
                vfpfcnvrt@ap 0025                  vfpfcnvrt@cp 002C                  vfpfcnvrt@fp 002B  
             __end_of___wmul 03B6          start_initialization 001A                  __end_of_abs 0458  
                __end_of_isr 0018        __end_of_LCD_WriteByte 0421                  vfprintf@fmt 0033  
                   ??___wmul 0074                  __pdataBANK0 0054                    ___latbits 0003  
              __pcstackBANK0 0020                  ??_LCD_Clear 0079       LCD_WriteIOExpander@reg 0072  
                   ?___awdiv 0076                     ?___awmod 0070                     ?_sprintf 0039  
               ??_charToRien 007B                 ??_dechiffrer 0070                     _LCD_GoTo 03B6  
             ___wmul@product 0074                     _LATAbits 010C                     _LATCbits 010E  
                  _setOffset 02CF                    clear_ram0 0489                     _PIE1bits 0091  
                   _PIR1bits 0011                     _SSP1CON1 0215                     _SSP1STAT 0214  
                  _vfpfcnvrt 003A           __end_of_charToRien 032B                   _ADCON0bits 009D  
                 _ADCON1bits 009E           __end_of_dechiffrer 0495            ___wmul@multiplier 0070  
        LCD_WriteCommand@cmd 0073     __end_of_LCD_WriteCommand 0435                   vfpfcnvrt@c 0032  
 __end_of_SPI_InitializePins 0397                   ?_setOffset 0070                   vfprintf@ap 0035  
                 vfprintf@fp 0036                   ?_vfpfcnvrt 0024   __end_of_LCD_InitializePins 049A  
                _SP1BRGHbits 019C                  _SP1BRGLbits 019B                   _ANSELAbits 018C  
                 _ANSELCbits 018E                   sprintf@fmt 003B                     _chiffrer 0482  
                   __ptext10 0466                     __ptext11 032B                     __ptext20 0126  
                   __ptext12 0376                     __ptext21 03D4                     __ptext13 047B  
                   __ptext22 040D                     __ptext14 0495                     __ptext23 0471  
                   __ptext15 0186                     __ptext24 03B6                     __ptext16 048F  
                   __ptext25 0421                     __ptext17 0482                     __ptext26 0435  
                   __ptext18 0300                     __ptext27 0458                     __ptext19 0233  
               _SSP1CON1bits 0215                     _init_adc 0466                _SSPDATPPSbits 0E21  
                   _init_pot 049A               setOffset@potar 007C             charToRien@nombre 0026  
                 _RC1STAbits 019D                   _RC3PPSbits 0EA3                _SSPCLKPPSbits 0E20  
                   int$flags 007E                   _RC5PPSbits 0EA5                   _RC6PPSbits 0EA6  
                   _vfprintf 03F1                 _SSP1STATbits 0214                   _INTCONbits 000B  
                   intlevel1 0000                    sprintf@ap 003F                  ??_setOffset 007C  
            charToRien@unite 0024             _SPI_Exchange8bit 0458                  ??_vfpfcnvrt 0026  
              __pstringtext1 04A1                __pstringtext2 0000                     sprintf@f 0040  
                   sprintf@s 0039                   _TX1STAbits 019E  
