

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 20 11:01:28 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16LF1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    64                           	dabs	1,0x7E,2
    65     0000                     
    66                           ; Generated 06/07/2023 GMT
    67                           ; 
    68                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16LF1719 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100     0000                     	;# 
   101     0001                     	;# 
   102     0002                     	;# 
   103     0003                     	;# 
   104     0004                     	;# 
   105     0005                     	;# 
   106     0006                     	;# 
   107     0007                     	;# 
   108     0008                     	;# 
   109     0009                     	;# 
   110     000A                     	;# 
   111     000B                     	;# 
   112     000C                     	;# 
   113     000D                     	;# 
   114     000E                     	;# 
   115     000F                     	;# 
   116     0010                     	;# 
   117     0011                     	;# 
   118     0012                     	;# 
   119     0013                     	;# 
   120     0015                     	;# 
   121     0016                     	;# 
   122     0016                     	;# 
   123     0017                     	;# 
   124     0018                     	;# 
   125     0019                     	;# 
   126     001A                     	;# 
   127     001B                     	;# 
   128     001C                     	;# 
   129     008C                     	;# 
   130     008D                     	;# 
   131     008E                     	;# 
   132     008F                     	;# 
   133     0090                     	;# 
   134     0091                     	;# 
   135     0092                     	;# 
   136     0093                     	;# 
   137     0095                     	;# 
   138     0096                     	;# 
   139     0097                     	;# 
   140     0098                     	;# 
   141     0099                     	;# 
   142     009A                     	;# 
   143     009B                     	;# 
   144     009B                     	;# 
   145     009C                     	;# 
   146     009D                     	;# 
   147     009E                     	;# 
   148     009F                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     010E                     	;# 
   152     010F                     	;# 
   153     0110                     	;# 
   154     0111                     	;# 
   155     0112                     	;# 
   156     0113                     	;# 
   157     0114                     	;# 
   158     0115                     	;# 
   159     0116                     	;# 
   160     0117                     	;# 
   161     0118                     	;# 
   162     0119                     	;# 
   163     011A                     	;# 
   164     011B                     	;# 
   165     011B                     	;# 
   166     011C                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     018E                     	;# 
   170     018F                     	;# 
   171     0190                     	;# 
   172     0191                     	;# 
   173     0191                     	;# 
   174     0192                     	;# 
   175     0193                     	;# 
   176     0193                     	;# 
   177     0194                     	;# 
   178     0195                     	;# 
   179     0196                     	;# 
   180     0199                     	;# 
   181     0199                     	;# 
   182     0199                     	;# 
   183     019A                     	;# 
   184     019A                     	;# 
   185     019A                     	;# 
   186     019B                     	;# 
   187     019B                     	;# 
   188     019B                     	;# 
   189     019B                     	;# 
   190     019B                     	;# 
   191     019C                     	;# 
   192     019C                     	;# 
   193     019C                     	;# 
   194     019D                     	;# 
   195     019D                     	;# 
   196     019D                     	;# 
   197     019E                     	;# 
   198     019E                     	;# 
   199     019E                     	;# 
   200     019F                     	;# 
   201     019F                     	;# 
   202     019F                     	;# 
   203     019F                     	;# 
   204     019F                     	;# 
   205     020C                     	;# 
   206     020D                     	;# 
   207     020E                     	;# 
   208     020F                     	;# 
   209     0210                     	;# 
   210     0211                     	;# 
   211     0211                     	;# 
   212     0212                     	;# 
   213     0212                     	;# 
   214     0213                     	;# 
   215     0213                     	;# 
   216     0214                     	;# 
   217     0214                     	;# 
   218     0215                     	;# 
   219     0215                     	;# 
   220     0215                     	;# 
   221     0215                     	;# 
   222     0216                     	;# 
   223     0216                     	;# 
   224     0217                     	;# 
   225     0217                     	;# 
   226     028C                     	;# 
   227     028D                     	;# 
   228     028E                     	;# 
   229     028F                     	;# 
   230     0290                     	;# 
   231     0291                     	;# 
   232     0291                     	;# 
   233     0292                     	;# 
   234     0293                     	;# 
   235     0293                     	;# 
   236     0298                     	;# 
   237     0298                     	;# 
   238     0299                     	;# 
   239     029A                     	;# 
   240     029A                     	;# 
   241     029E                     	;# 
   242     030C                     	;# 
   243     030D                     	;# 
   244     030E                     	;# 
   245     030F                     	;# 
   246     0310                     	;# 
   247     038C                     	;# 
   248     038D                     	;# 
   249     038E                     	;# 
   250     038F                     	;# 
   251     0390                     	;# 
   252     0391                     	;# 
   253     0392                     	;# 
   254     0393                     	;# 
   255     0394                     	;# 
   256     0395                     	;# 
   257     0396                     	;# 
   258     0397                     	;# 
   259     0398                     	;# 
   260     0399                     	;# 
   261     039D                     	;# 
   262     039E                     	;# 
   263     039F                     	;# 
   264     0415                     	;# 
   265     0416                     	;# 
   266     0417                     	;# 
   267     041C                     	;# 
   268     041D                     	;# 
   269     041E                     	;# 
   270     0498                     	;# 
   271     0498                     	;# 
   272     0499                     	;# 
   273     049A                     	;# 
   274     049B                     	;# 
   275     049B                     	;# 
   276     049C                     	;# 
   277     049D                     	;# 
   278     049E                     	;# 
   279     049F                     	;# 
   280     0511                     	;# 
   281     0515                     	;# 
   282     0617                     	;# 
   283     0618                     	;# 
   284     0619                     	;# 
   285     0619                     	;# 
   286     061A                     	;# 
   287     061B                     	;# 
   288     061C                     	;# 
   289     061C                     	;# 
   290     0691                     	;# 
   291     0692                     	;# 
   292     0693                     	;# 
   293     0694                     	;# 
   294     0695                     	;# 
   295     0696                     	;# 
   296     0697                     	;# 
   297     0698                     	;# 
   298     0699                     	;# 
   299     069A                     	;# 
   300     069B                     	;# 
   301     069C                     	;# 
   302     069D                     	;# 
   303     069E                     	;# 
   304     069F                     	;# 
   305     0E0F                     	;# 
   306     0E10                     	;# 
   307     0E11                     	;# 
   308     0E12                     	;# 
   309     0E13                     	;# 
   310     0E14                     	;# 
   311     0E15                     	;# 
   312     0E17                     	;# 
   313     0E20                     	;# 
   314     0E21                     	;# 
   315     0E22                     	;# 
   316     0E24                     	;# 
   317     0E25                     	;# 
   318     0E28                     	;# 
   319     0E29                     	;# 
   320     0E2A                     	;# 
   321     0E2B                     	;# 
   322     0E90                     	;# 
   323     0E91                     	;# 
   324     0E92                     	;# 
   325     0E93                     	;# 
   326     0E94                     	;# 
   327     0E95                     	;# 
   328     0E96                     	;# 
   329     0E97                     	;# 
   330     0E98                     	;# 
   331     0E99                     	;# 
   332     0E9A                     	;# 
   333     0E9B                     	;# 
   334     0E9C                     	;# 
   335     0E9D                     	;# 
   336     0E9E                     	;# 
   337     0E9F                     	;# 
   338     0EA0                     	;# 
   339     0EA1                     	;# 
   340     0EA2                     	;# 
   341     0EA3                     	;# 
   342     0EA4                     	;# 
   343     0EA5                     	;# 
   344     0EA6                     	;# 
   345     0EA7                     	;# 
   346     0EA8                     	;# 
   347     0EA9                     	;# 
   348     0EAA                     	;# 
   349     0EAB                     	;# 
   350     0EAC                     	;# 
   351     0EAD                     	;# 
   352     0EAE                     	;# 
   353     0EAF                     	;# 
   354     0EB0                     	;# 
   355     0EB1                     	;# 
   356     0EB2                     	;# 
   357     0F0F                     	;# 
   358     0F10                     	;# 
   359     0F11                     	;# 
   360     0F12                     	;# 
   361     0F13                     	;# 
   362     0F14                     	;# 
   363     0F15                     	;# 
   364     0F16                     	;# 
   365     0F17                     	;# 
   366     0F18                     	;# 
   367     0F19                     	;# 
   368     0F1A                     	;# 
   369     0F1B                     	;# 
   370     0F1C                     	;# 
   371     0F1D                     	;# 
   372     0F1E                     	;# 
   373     0F1F                     	;# 
   374     0F20                     	;# 
   375     0F21                     	;# 
   376     0F22                     	;# 
   377     0F23                     	;# 
   378     0F24                     	;# 
   379     0F25                     	;# 
   380     0F26                     	;# 
   381     0F27                     	;# 
   382     0F28                     	;# 
   383     0F29                     	;# 
   384     0F2A                     	;# 
   385     0F2B                     	;# 
   386     0F2C                     	;# 
   387     0F2D                     	;# 
   388     0F2E                     	;# 
   389     0F2F                     	;# 
   390     0F30                     	;# 
   391     0F31                     	;# 
   392     0F32                     	;# 
   393     0F33                     	;# 
   394     0F34                     	;# 
   395     0F35                     	;# 
   396     0F36                     	;# 
   397     0F37                     	;# 
   398     0FE4                     	;# 
   399     0FE5                     	;# 
   400     0FE6                     	;# 
   401     0FE7                     	;# 
   402     0FE8                     	;# 
   403     0FE9                     	;# 
   404     0FEA                     	;# 
   405     0FEB                     	;# 
   406     0FED                     	;# 
   407     0FEE                     	;# 
   408     0FEF                     	;# 
   409     0000                     	;# 
   410     0001                     	;# 
   411     0002                     	;# 
   412     0003                     	;# 
   413     0004                     	;# 
   414     0005                     	;# 
   415     0006                     	;# 
   416     0007                     	;# 
   417     0008                     	;# 
   418     0009                     	;# 
   419     000A                     	;# 
   420     000B                     	;# 
   421     000C                     	;# 
   422     000D                     	;# 
   423     000E                     	;# 
   424     000F                     	;# 
   425     0010                     	;# 
   426     0011                     	;# 
   427     0012                     	;# 
   428     0013                     	;# 
   429     0015                     	;# 
   430     0016                     	;# 
   431     0016                     	;# 
   432     0017                     	;# 
   433     0018                     	;# 
   434     0019                     	;# 
   435     001A                     	;# 
   436     001B                     	;# 
   437     001C                     	;# 
   438     008C                     	;# 
   439     008D                     	;# 
   440     008E                     	;# 
   441     008F                     	;# 
   442     0090                     	;# 
   443     0091                     	;# 
   444     0092                     	;# 
   445     0093                     	;# 
   446     0095                     	;# 
   447     0096                     	;# 
   448     0097                     	;# 
   449     0098                     	;# 
   450     0099                     	;# 
   451     009A                     	;# 
   452     009B                     	;# 
   453     009B                     	;# 
   454     009C                     	;# 
   455     009D                     	;# 
   456     009E                     	;# 
   457     009F                     	;# 
   458     010C                     	;# 
   459     010D                     	;# 
   460     010E                     	;# 
   461     010F                     	;# 
   462     0110                     	;# 
   463     0111                     	;# 
   464     0112                     	;# 
   465     0113                     	;# 
   466     0114                     	;# 
   467     0115                     	;# 
   468     0116                     	;# 
   469     0117                     	;# 
   470     0118                     	;# 
   471     0119                     	;# 
   472     011A                     	;# 
   473     011B                     	;# 
   474     011B                     	;# 
   475     011C                     	;# 
   476     018C                     	;# 
   477     018D                     	;# 
   478     018E                     	;# 
   479     018F                     	;# 
   480     0190                     	;# 
   481     0191                     	;# 
   482     0191                     	;# 
   483     0192                     	;# 
   484     0193                     	;# 
   485     0193                     	;# 
   486     0194                     	;# 
   487     0195                     	;# 
   488     0196                     	;# 
   489     0199                     	;# 
   490     0199                     	;# 
   491     0199                     	;# 
   492     019A                     	;# 
   493     019A                     	;# 
   494     019A                     	;# 
   495     019B                     	;# 
   496     019B                     	;# 
   497     019B                     	;# 
   498     019B                     	;# 
   499     019B                     	;# 
   500     019C                     	;# 
   501     019C                     	;# 
   502     019C                     	;# 
   503     019D                     	;# 
   504     019D                     	;# 
   505     019D                     	;# 
   506     019E                     	;# 
   507     019E                     	;# 
   508     019E                     	;# 
   509     019F                     	;# 
   510     019F                     	;# 
   511     019F                     	;# 
   512     019F                     	;# 
   513     019F                     	;# 
   514     020C                     	;# 
   515     020D                     	;# 
   516     020E                     	;# 
   517     020F                     	;# 
   518     0210                     	;# 
   519     0211                     	;# 
   520     0211                     	;# 
   521     0212                     	;# 
   522     0212                     	;# 
   523     0213                     	;# 
   524     0213                     	;# 
   525     0214                     	;# 
   526     0214                     	;# 
   527     0215                     	;# 
   528     0215                     	;# 
   529     0215                     	;# 
   530     0215                     	;# 
   531     0216                     	;# 
   532     0216                     	;# 
   533     0217                     	;# 
   534     0217                     	;# 
   535     028C                     	;# 
   536     028D                     	;# 
   537     028E                     	;# 
   538     028F                     	;# 
   539     0290                     	;# 
   540     0291                     	;# 
   541     0291                     	;# 
   542     0292                     	;# 
   543     0293                     	;# 
   544     0293                     	;# 
   545     0298                     	;# 
   546     0298                     	;# 
   547     0299                     	;# 
   548     029A                     	;# 
   549     029A                     	;# 
   550     029E                     	;# 
   551     030C                     	;# 
   552     030D                     	;# 
   553     030E                     	;# 
   554     030F                     	;# 
   555     0310                     	;# 
   556     038C                     	;# 
   557     038D                     	;# 
   558     038E                     	;# 
   559     038F                     	;# 
   560     0390                     	;# 
   561     0391                     	;# 
   562     0392                     	;# 
   563     0393                     	;# 
   564     0394                     	;# 
   565     0395                     	;# 
   566     0396                     	;# 
   567     0397                     	;# 
   568     0398                     	;# 
   569     0399                     	;# 
   570     039D                     	;# 
   571     039E                     	;# 
   572     039F                     	;# 
   573     0415                     	;# 
   574     0416                     	;# 
   575     0417                     	;# 
   576     041C                     	;# 
   577     041D                     	;# 
   578     041E                     	;# 
   579     0498                     	;# 
   580     0498                     	;# 
   581     0499                     	;# 
   582     049A                     	;# 
   583     049B                     	;# 
   584     049B                     	;# 
   585     049C                     	;# 
   586     049D                     	;# 
   587     049E                     	;# 
   588     049F                     	;# 
   589     0511                     	;# 
   590     0515                     	;# 
   591     0617                     	;# 
   592     0618                     	;# 
   593     0619                     	;# 
   594     0619                     	;# 
   595     061A                     	;# 
   596     061B                     	;# 
   597     061C                     	;# 
   598     061C                     	;# 
   599     0691                     	;# 
   600     0692                     	;# 
   601     0693                     	;# 
   602     0694                     	;# 
   603     0695                     	;# 
   604     0696                     	;# 
   605     0697                     	;# 
   606     0698                     	;# 
   607     0699                     	;# 
   608     069A                     	;# 
   609     069B                     	;# 
   610     069C                     	;# 
   611     069D                     	;# 
   612     069E                     	;# 
   613     069F                     	;# 
   614     0E0F                     	;# 
   615     0E10                     	;# 
   616     0E11                     	;# 
   617     0E12                     	;# 
   618     0E13                     	;# 
   619     0E14                     	;# 
   620     0E15                     	;# 
   621     0E17                     	;# 
   622     0E20                     	;# 
   623     0E21                     	;# 
   624     0E22                     	;# 
   625     0E24                     	;# 
   626     0E25                     	;# 
   627     0E28                     	;# 
   628     0E29                     	;# 
   629     0E2A                     	;# 
   630     0E2B                     	;# 
   631     0E90                     	;# 
   632     0E91                     	;# 
   633     0E92                     	;# 
   634     0E93                     	;# 
   635     0E94                     	;# 
   636     0E95                     	;# 
   637     0E96                     	;# 
   638     0E97                     	;# 
   639     0E98                     	;# 
   640     0E99                     	;# 
   641     0E9A                     	;# 
   642     0E9B                     	;# 
   643     0E9C                     	;# 
   644     0E9D                     	;# 
   645     0E9E                     	;# 
   646     0E9F                     	;# 
   647     0EA0                     	;# 
   648     0EA1                     	;# 
   649     0EA2                     	;# 
   650     0EA3                     	;# 
   651     0EA4                     	;# 
   652     0EA5                     	;# 
   653     0EA6                     	;# 
   654     0EA7                     	;# 
   655     0EA8                     	;# 
   656     0EA9                     	;# 
   657     0EAA                     	;# 
   658     0EAB                     	;# 
   659     0EAC                     	;# 
   660     0EAD                     	;# 
   661     0EAE                     	;# 
   662     0EAF                     	;# 
   663     0EB0                     	;# 
   664     0EB1                     	;# 
   665     0EB2                     	;# 
   666     0F0F                     	;# 
   667     0F10                     	;# 
   668     0F11                     	;# 
   669     0F12                     	;# 
   670     0F13                     	;# 
   671     0F14                     	;# 
   672     0F15                     	;# 
   673     0F16                     	;# 
   674     0F17                     	;# 
   675     0F18                     	;# 
   676     0F19                     	;# 
   677     0F1A                     	;# 
   678     0F1B                     	;# 
   679     0F1C                     	;# 
   680     0F1D                     	;# 
   681     0F1E                     	;# 
   682     0F1F                     	;# 
   683     0F20                     	;# 
   684     0F21                     	;# 
   685     0F22                     	;# 
   686     0F23                     	;# 
   687     0F24                     	;# 
   688     0F25                     	;# 
   689     0F26                     	;# 
   690     0F27                     	;# 
   691     0F28                     	;# 
   692     0F29                     	;# 
   693     0F2A                     	;# 
   694     0F2B                     	;# 
   695     0F2C                     	;# 
   696     0F2D                     	;# 
   697     0F2E                     	;# 
   698     0F2F                     	;# 
   699     0F30                     	;# 
   700     0F31                     	;# 
   701     0F32                     	;# 
   702     0F33                     	;# 
   703     0F34                     	;# 
   704     0F35                     	;# 
   705     0F36                     	;# 
   706     0F37                     	;# 
   707     0FE4                     	;# 
   708     0FE5                     	;# 
   709     0FE6                     	;# 
   710     0FE7                     	;# 
   711     0FE8                     	;# 
   712     0FE9                     	;# 
   713     0FEA                     	;# 
   714     0FEB                     	;# 
   715     0FED                     	;# 
   716     0FEE                     	;# 
   717     0FEF                     	;# 
   718     0000                     	;# 
   719     0001                     	;# 
   720     0002                     	;# 
   721     0003                     	;# 
   722     0004                     	;# 
   723     0005                     	;# 
   724     0006                     	;# 
   725     0007                     	;# 
   726     0008                     	;# 
   727     0009                     	;# 
   728     000A                     	;# 
   729     000B                     	;# 
   730     000C                     	;# 
   731     000D                     	;# 
   732     000E                     	;# 
   733     000F                     	;# 
   734     0010                     	;# 
   735     0011                     	;# 
   736     0012                     	;# 
   737     0013                     	;# 
   738     0015                     	;# 
   739     0016                     	;# 
   740     0016                     	;# 
   741     0017                     	;# 
   742     0018                     	;# 
   743     0019                     	;# 
   744     001A                     	;# 
   745     001B                     	;# 
   746     001C                     	;# 
   747     008C                     	;# 
   748     008D                     	;# 
   749     008E                     	;# 
   750     008F                     	;# 
   751     0090                     	;# 
   752     0091                     	;# 
   753     0092                     	;# 
   754     0093                     	;# 
   755     0095                     	;# 
   756     0096                     	;# 
   757     0097                     	;# 
   758     0098                     	;# 
   759     0099                     	;# 
   760     009A                     	;# 
   761     009B                     	;# 
   762     009B                     	;# 
   763     009C                     	;# 
   764     009D                     	;# 
   765     009E                     	;# 
   766     009F                     	;# 
   767     010C                     	;# 
   768     010D                     	;# 
   769     010E                     	;# 
   770     010F                     	;# 
   771     0110                     	;# 
   772     0111                     	;# 
   773     0112                     	;# 
   774     0113                     	;# 
   775     0114                     	;# 
   776     0115                     	;# 
   777     0116                     	;# 
   778     0117                     	;# 
   779     0118                     	;# 
   780     0119                     	;# 
   781     011A                     	;# 
   782     011B                     	;# 
   783     011B                     	;# 
   784     011C                     	;# 
   785     018C                     	;# 
   786     018D                     	;# 
   787     018E                     	;# 
   788     018F                     	;# 
   789     0190                     	;# 
   790     0191                     	;# 
   791     0191                     	;# 
   792     0192                     	;# 
   793     0193                     	;# 
   794     0193                     	;# 
   795     0194                     	;# 
   796     0195                     	;# 
   797     0196                     	;# 
   798     0199                     	;# 
   799     0199                     	;# 
   800     0199                     	;# 
   801     019A                     	;# 
   802     019A                     	;# 
   803     019A                     	;# 
   804     019B                     	;# 
   805     019B                     	;# 
   806     019B                     	;# 
   807     019B                     	;# 
   808     019B                     	;# 
   809     019C                     	;# 
   810     019C                     	;# 
   811     019C                     	;# 
   812     019D                     	;# 
   813     019D                     	;# 
   814     019D                     	;# 
   815     019E                     	;# 
   816     019E                     	;# 
   817     019E                     	;# 
   818     019F                     	;# 
   819     019F                     	;# 
   820     019F                     	;# 
   821     019F                     	;# 
   822     019F                     	;# 
   823     020C                     	;# 
   824     020D                     	;# 
   825     020E                     	;# 
   826     020F                     	;# 
   827     0210                     	;# 
   828     0211                     	;# 
   829     0211                     	;# 
   830     0212                     	;# 
   831     0212                     	;# 
   832     0213                     	;# 
   833     0213                     	;# 
   834     0214                     	;# 
   835     0214                     	;# 
   836     0215                     	;# 
   837     0215                     	;# 
   838     0215                     	;# 
   839     0215                     	;# 
   840     0216                     	;# 
   841     0216                     	;# 
   842     0217                     	;# 
   843     0217                     	;# 
   844     028C                     	;# 
   845     028D                     	;# 
   846     028E                     	;# 
   847     028F                     	;# 
   848     0290                     	;# 
   849     0291                     	;# 
   850     0291                     	;# 
   851     0292                     	;# 
   852     0293                     	;# 
   853     0293                     	;# 
   854     0298                     	;# 
   855     0298                     	;# 
   856     0299                     	;# 
   857     029A                     	;# 
   858     029A                     	;# 
   859     029E                     	;# 
   860     030C                     	;# 
   861     030D                     	;# 
   862     030E                     	;# 
   863     030F                     	;# 
   864     0310                     	;# 
   865     038C                     	;# 
   866     038D                     	;# 
   867     038E                     	;# 
   868     038F                     	;# 
   869     0390                     	;# 
   870     0391                     	;# 
   871     0392                     	;# 
   872     0393                     	;# 
   873     0394                     	;# 
   874     0395                     	;# 
   875     0396                     	;# 
   876     0397                     	;# 
   877     0398                     	;# 
   878     0399                     	;# 
   879     039D                     	;# 
   880     039E                     	;# 
   881     039F                     	;# 
   882     0415                     	;# 
   883     0416                     	;# 
   884     0417                     	;# 
   885     041C                     	;# 
   886     041D                     	;# 
   887     041E                     	;# 
   888     0498                     	;# 
   889     0498                     	;# 
   890     0499                     	;# 
   891     049A                     	;# 
   892     049B                     	;# 
   893     049B                     	;# 
   894     049C                     	;# 
   895     049D                     	;# 
   896     049E                     	;# 
   897     049F                     	;# 
   898     0511                     	;# 
   899     0515                     	;# 
   900     0617                     	;# 
   901     0618                     	;# 
   902     0619                     	;# 
   903     0619                     	;# 
   904     061A                     	;# 
   905     061B                     	;# 
   906     061C                     	;# 
   907     061C                     	;# 
   908     0691                     	;# 
   909     0692                     	;# 
   910     0693                     	;# 
   911     0694                     	;# 
   912     0695                     	;# 
   913     0696                     	;# 
   914     0697                     	;# 
   915     0698                     	;# 
   916     0699                     	;# 
   917     069A                     	;# 
   918     069B                     	;# 
   919     069C                     	;# 
   920     069D                     	;# 
   921     069E                     	;# 
   922     069F                     	;# 
   923     0E0F                     	;# 
   924     0E10                     	;# 
   925     0E11                     	;# 
   926     0E12                     	;# 
   927     0E13                     	;# 
   928     0E14                     	;# 
   929     0E15                     	;# 
   930     0E17                     	;# 
   931     0E20                     	;# 
   932     0E21                     	;# 
   933     0E22                     	;# 
   934     0E24                     	;# 
   935     0E25                     	;# 
   936     0E28                     	;# 
   937     0E29                     	;# 
   938     0E2A                     	;# 
   939     0E2B                     	;# 
   940     0E90                     	;# 
   941     0E91                     	;# 
   942     0E92                     	;# 
   943     0E93                     	;# 
   944     0E94                     	;# 
   945     0E95                     	;# 
   946     0E96                     	;# 
   947     0E97                     	;# 
   948     0E98                     	;# 
   949     0E99                     	;# 
   950     0E9A                     	;# 
   951     0E9B                     	;# 
   952     0E9C                     	;# 
   953     0E9D                     	;# 
   954     0E9E                     	;# 
   955     0E9F                     	;# 
   956     0EA0                     	;# 
   957     0EA1                     	;# 
   958     0EA2                     	;# 
   959     0EA3                     	;# 
   960     0EA4                     	;# 
   961     0EA5                     	;# 
   962     0EA6                     	;# 
   963     0EA7                     	;# 
   964     0EA8                     	;# 
   965     0EA9                     	;# 
   966     0EAA                     	;# 
   967     0EAB                     	;# 
   968     0EAC                     	;# 
   969     0EAD                     	;# 
   970     0EAE                     	;# 
   971     0EAF                     	;# 
   972     0EB0                     	;# 
   973     0EB1                     	;# 
   974     0EB2                     	;# 
   975     0F0F                     	;# 
   976     0F10                     	;# 
   977     0F11                     	;# 
   978     0F12                     	;# 
   979     0F13                     	;# 
   980     0F14                     	;# 
   981     0F15                     	;# 
   982     0F16                     	;# 
   983     0F17                     	;# 
   984     0F18                     	;# 
   985     0F19                     	;# 
   986     0F1A                     	;# 
   987     0F1B                     	;# 
   988     0F1C                     	;# 
   989     0F1D                     	;# 
   990     0F1E                     	;# 
   991     0F1F                     	;# 
   992     0F20                     	;# 
   993     0F21                     	;# 
   994     0F22                     	;# 
   995     0F23                     	;# 
   996     0F24                     	;# 
   997     0F25                     	;# 
   998     0F26                     	;# 
   999     0F27                     	;# 
  1000     0F28                     	;# 
  1001     0F29                     	;# 
  1002     0F2A                     	;# 
  1003     0F2B                     	;# 
  1004     0F2C                     	;# 
  1005     0F2D                     	;# 
  1006     0F2E                     	;# 
  1007     0F2F                     	;# 
  1008     0F30                     	;# 
  1009     0F31                     	;# 
  1010     0F32                     	;# 
  1011     0F33                     	;# 
  1012     0F34                     	;# 
  1013     0F35                     	;# 
  1014     0F36                     	;# 
  1015     0F37                     	;# 
  1016     0FE4                     	;# 
  1017     0FE5                     	;# 
  1018     0FE6                     	;# 
  1019     0FE7                     	;# 
  1020     0FE8                     	;# 
  1021     0FE9                     	;# 
  1022     0FEA                     	;# 
  1023     0FEB                     	;# 
  1024     0FED                     	;# 
  1025     0FEE                     	;# 
  1026     0FEF                     	;# 
  1027                           
  1028                           	psect	idataBANK1
  1029     0D9F                     __pidataBANK1:
  1030                           
  1031                           ;initializer for _offset
  1032     0D9F  3401               	retlw	1
  1033                           
  1034                           ;initializer for _String
  1035     0DA0  3458               	retlw	88
  1036     0DA1  3458               	retlw	88
  1037     0DA2  3400               	retlw	0
  1038     0011                     _PIR1bits	set	17
  1039     000B                     _INTCONbits	set	11
  1040     0059                     _INTF	set	89
  1041     009B                     _ADRESL	set	155
  1042     009C                     _ADRESH	set	156
  1043     009E                     _ADCON1bits	set	158
  1044     009D                     _ADCON0bits	set	157
  1045     0091                     _PIE1bits	set	145
  1046     008D                     _TRISBbits	set	141
  1047     008E                     _TRISCbits	set	142
  1048     008C                     _TRISAbits	set	140
  1049     04AE                     _INTEDG	set	1198
  1050     010E                     _LATCbits	set	270
  1051     010C                     _LATAbits	set	268
  1052     019A                     _TX1REG	set	410
  1053     0199                     _RC1REG	set	409
  1054     018C                     _ANSELAbits	set	396
  1055     019D                     _RC1STAbits	set	413
  1056     019B                     _SP1BRGLbits	set	411
  1057     019C                     _SP1BRGHbits	set	412
  1058     019F                     _BAUD1CONbits	set	415
  1059     019E                     _TX1STAbits	set	414
  1060     018D                     _ANSELBbits	set	397
  1061     018E                     _ANSELCbits	set	398
  1062     0214                     _SSP1STATbits	set	532
  1063     0211                     _SSP1BUF	set	529
  1064     0215                     _SSP1CON1bits	set	533
  1065     0212                     _SSP1ADD	set	530
  1066     0215                     _SSP1CON1	set	533
  1067     0214                     _SSP1STAT	set	532
  1068     0E20                     _SSPCLKPPSbits	set	3616
  1069     0E21                     _SSPDATPPSbits	set	3617
  1070     0E24                     _RXPPSbits	set	3620
  1071     0EA5                     _RC5PPSbits	set	3749
  1072     0EA3                     _RC3PPSbits	set	3747
  1073     0EA6                     _RC6PPSbits	set	3750
  1074                           
  1075                           	psect	stringtext1
  1076     1000                     __pstringtext1:
  1077     1000                     STR_2:
  1078     1000  3444               	retlw	68	;'D'
  1079     1001  3465               	retlw	101	;'e'
  1080     1002  3463               	retlw	99	;'c'
  1081     1003  3468               	retlw	104	;'h'
  1082     1004  3469               	retlw	105	;'i'
  1083     1005  3466               	retlw	102	;'f'
  1084     1006  3466               	retlw	102	;'f'
  1085     1007  3472               	retlw	114	;'r'
  1086     1008  3465               	retlw	101	;'e'
  1087     1009  3420               	retlw	32	;' '
  1088     100A  343A               	retlw	58	;':'
  1089     100B  3420               	retlw	32	;' '
  1090     100C  3425               	retlw	37	;'%'
  1091     100D  3464               	retlw	100	;'d'
  1092     100E  3400               	retlw	0
  1093                           
  1094                           	psect	stringtext2
  1095     100F                     __pstringtext2:
  1096     100F                     STR_1:
  1097     100F  3443               	retlw	67	;'C'
  1098     1010  3468               	retlw	104	;'h'
  1099     1011  3469               	retlw	105	;'i'
  1100     1012  3466               	retlw	102	;'f'
  1101     1013  3466               	retlw	102	;'f'
  1102     1014  3472               	retlw	114	;'r'
  1103     1015  3465               	retlw	101	;'e'
  1104     1016  3420               	retlw	32	;' '
  1105     1017  343A               	retlw	58	;':'
  1106     1018  3420               	retlw	32	;' '
  1107     1019  3425               	retlw	37	;'%'
  1108     101A  3464               	retlw	100	;'d'
  1109     101B  3400               	retlw	0
  1110                           
  1111                           	psect	stringtext3
  1112     0000                     __pstringtext3:
  1113     1019                     
  1114                           	psect	cinit
  1115     0070                     start_initialization:	
  1116                           ; #config settings
  1117                           
  1118     0070                     __initialization:
  1119                           
  1120                           ; Initialize objects allocated to BANK1
  1121     0070  0021               	movlb	1	; select bank1
  1122     0071  318D  259F  3180   	fcall	__pidataBANK1	;fetch initializer
  1123     0074  00E2               	movwf	__pdataBANK1& (0+127)
  1124     0075  318D  25A0  3180   	fcall	__pidataBANK1+1	;fetch initializer
  1125     0078  00E3               	movwf	(__pdataBANK1+1)& (0+127)
  1126     0079  318D  25A1  3180   	fcall	__pidataBANK1+2	;fetch initializer
  1127     007C  00E4               	movwf	(__pdataBANK1+2)& (0+127)
  1128     007D  318D  25A2  3180   	fcall	__pidataBANK1+3	;fetch initializer
  1129     0080  00E5               	movwf	(__pdataBANK1+3)& (0+127)
  1130                           
  1131                           ; Clear objects allocated to BANK0
  1132     0081  304E               	movlw	low __pbssBANK0
  1133     0082  0084               	movwf	4
  1134     0083  3000               	movlw	high __pbssBANK0
  1135     0084  0085               	movwf	5
  1136     0085  3020               	movlw	32
  1137     0086  318D  25AE  3180   	fcall	clear_ram0
  1138                           
  1139                           ; Clear objects allocated to BANK1
  1140     0089  30D9               	movlw	low __pbssBANK1
  1141     008A  0084               	movwf	4
  1142     008B  3000               	movlw	high __pbssBANK1
  1143     008C  0085               	movwf	5
  1144     008D  3009               	movlw	9
  1145     008E  318D  25AE  3180   	fcall	clear_ram0
  1146     0091                     end_of_initialization:	
  1147                           ;End of C runtime variable initialization code
  1148                           
  1149     0091                     __end_of__initialization:
  1150     0091  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1151     0092  0020               	movlb	0
  1152     0093  3186  2E93         	ljmp	_main	;jump to C main() function
  1153                           
  1154                           	psect	bssBANK0
  1155     004E                     __pbssBANK0:
  1156     004E                     _dbuf:
  1157     004E                     	ds	32
  1158                           
  1159                           	psect	bssBANK1
  1160     00D9                     __pbssBANK1:
  1161     00D9                     _nout:
  1162     00D9                     	ds	2
  1163     00DB                     _width:
  1164     00DB                     	ds	2
  1165     00DD                     _prec:
  1166     00DD                     	ds	2
  1167     00DF                     _Chiffrement:
  1168     00DF                     	ds	2
  1169     00E1                     _flags:
  1170     00E1                     	ds	1
  1171                           
  1172                           	psect	dataBANK1
  1173     00E2                     __pdataBANK1:
  1174     00E2                     _offset:
  1175     00E2                     	ds	1
  1176     00E3                     _String:
  1177     00E3                     	ds	3
  1178                           
  1179                           	psect	clrtext
  1180     0DAE                     clear_ram0:	
  1181                           ;	Called with FSR0 containing the base address, and
  1182                           ;	WREG with the size to clear
  1183                           
  1184     0DAE  0064               	clrwdt	;clear the watchdog before getting into this loop
  1185     0DAF                     clrloop0:
  1186     0DAF  0180               	clrf	0	;clear RAM location pointed to by FSR
  1187     0DB0  3101               	addfsr 0,1
  1188     0DB1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1189     0DB2  2DAF               	goto	clrloop0	;have we reached the end yet?
  1190     0DB3  3400               	retlw	0	;all done for this memory range, return
  1191                           
  1192                           	psect	cstackBANK1
  1193     00A0                     __pcstackBANK1:
  1194     00A0                     ??_SPI_Exchange8bit:
  1195     00A0                     ??_SPI_InitializePins:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198     00A0                     ??_SPI_Initialize:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201     00A0                     ??_putch:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204     00A0                     ??_LCD_InitializePins:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207     00A0                     ??_configurerInterruptBouton:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210     00A0                     ??_init_pot:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213     00A0                     ??_init_adc:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216     00A0                     ?_fputc:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219     00A0                     ?___wmul:	
  1220                           ; 2 bytes @ 0x0
  1221                           
  1222     00A0                     ?___awdiv:	
  1223                           ; 2 bytes @ 0x0
  1224                           
  1225     00A0                     ?___awmod:	
  1226                           ; 2 bytes @ 0x0
  1227                           
  1228     00A0                     SPI_Exchange8bit@data:	
  1229                           ; 2 bytes @ 0x0
  1230                           
  1231     00A0                     ___wmul@multiplier:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234     00A0                     ___awdiv@divisor:	
  1235                           ; 2 bytes @ 0x0
  1236                           
  1237     00A0                     ___awmod@divisor:	
  1238                           ; 2 bytes @ 0x0
  1239                           
  1240     00A0                     fputc@c:	
  1241                           ; 2 bytes @ 0x0
  1242                           
  1243                           
  1244                           ; 2 bytes @ 0x0
  1245     00A0                     	ds	1
  1246     00A1                     ?_LCD_WriteIOExpander:
  1247     00A1                     LCD_WriteIOExpander@data:	
  1248                           ; 1 bytes @ 0x1
  1249                           
  1250                           
  1251                           ; 1 bytes @ 0x1
  1252     00A1                     	ds	1
  1253     00A2                     ??_LCD_WriteIOExpander:
  1254     00A2                     LCD_WriteIOExpander@reg:	
  1255                           ; 1 bytes @ 0x2
  1256                           
  1257     00A2                     fputc@fp:	
  1258                           ; 1 bytes @ 0x2
  1259                           
  1260     00A2                     ___wmul@multiplicand:	
  1261                           ; 1 bytes @ 0x2
  1262                           
  1263     00A2                     ___awdiv@dividend:	
  1264                           ; 2 bytes @ 0x2
  1265                           
  1266     00A2                     ___awmod@dividend:	
  1267                           ; 2 bytes @ 0x2
  1268                           
  1269                           
  1270                           ; 2 bytes @ 0x2
  1271     00A2                     	ds	1
  1272     00A3                     ??_LCD_WriteCommand:
  1273     00A3                     ??_fputc:	
  1274                           ; 1 bytes @ 0x3
  1275                           
  1276     00A3                     ??_LCD_WriteByte:	
  1277                           ; 1 bytes @ 0x3
  1278                           
  1279     00A3                     LCD_WriteCommand@cmd:	
  1280                           ; 1 bytes @ 0x3
  1281                           
  1282     00A3                     LCD_WriteByte@data:	
  1283                           ; 1 bytes @ 0x3
  1284                           
  1285                           
  1286                           ; 1 bytes @ 0x3
  1287     00A3                     	ds	1
  1288     00A4                     ??_LCD_Initialize:
  1289     00A4                     ??_LCD_WriteString:	
  1290                           ; 1 bytes @ 0x4
  1291                           
  1292     00A4                     ?_LCD_GoTo:	
  1293                           ; 1 bytes @ 0x4
  1294                           
  1295     00A4                     ??___wmul:	
  1296                           ; 1 bytes @ 0x4
  1297                           
  1298     00A4                     ??___awdiv:	
  1299                           ; 1 bytes @ 0x4
  1300                           
  1301     00A4                     ??___awmod:	
  1302                           ; 1 bytes @ 0x4
  1303                           
  1304     00A4                     LCD_GoTo@column:	
  1305                           ; 1 bytes @ 0x4
  1306                           
  1307     00A4                     ___wmul@product:	
  1308                           ; 1 bytes @ 0x4
  1309                           
  1310                           
  1311                           ; 2 bytes @ 0x4
  1312     00A4                     	ds	1
  1313     00A5                     ??_LCD_GoTo:
  1314     00A5                     LCD_WriteString@i:	
  1315                           ; 1 bytes @ 0x5
  1316                           
  1317     00A5                     ___awdiv@counter:	
  1318                           ; 1 bytes @ 0x5
  1319                           
  1320     00A5                     ___awmod@counter:	
  1321                           ; 1 bytes @ 0x5
  1322                           
  1323     00A5                     _LCD_GoTo$119:	
  1324                           ; 1 bytes @ 0x5
  1325                           
  1326                           
  1327                           ; 2 bytes @ 0x5
  1328     00A5                     	ds	1
  1329     00A6                     ??_init:
  1330     00A6                     ?___lwdiv:	
  1331                           ; 1 bytes @ 0x6
  1332                           
  1333     00A6                     LCD_WriteString@data:	
  1334                           ; 2 bytes @ 0x6
  1335                           
  1336     00A6                     ___awdiv@sign:	
  1337                           ; 1 bytes @ 0x6
  1338                           
  1339     00A6                     ___awmod@sign:	
  1340                           ; 1 bytes @ 0x6
  1341                           
  1342     00A6                     ___lwdiv@divisor:	
  1343                           ; 1 bytes @ 0x6
  1344                           
  1345                           
  1346                           ; 2 bytes @ 0x6
  1347     00A6                     	ds	1
  1348     00A7                     ?_abs:
  1349     00A7                     LCD_GoTo@pos:	
  1350                           ; 2 bytes @ 0x7
  1351                           
  1352     00A7                     ___awdiv@quotient:	
  1353                           ; 1 bytes @ 0x7
  1354                           
  1355     00A7                     abs@a:	
  1356                           ; 2 bytes @ 0x7
  1357                           
  1358                           
  1359                           ; 2 bytes @ 0x7
  1360     00A7                     	ds	1
  1361     00A8                     LCD_GoTo@row:
  1362     00A8                     ___lwdiv@dividend:	
  1363                           ; 1 bytes @ 0x8
  1364                           
  1365                           
  1366                           ; 2 bytes @ 0x8
  1367     00A8                     	ds	1
  1368     00A9                     ??_abs:
  1369     00A9                     ??_LCD_Clear:	
  1370                           ; 1 bytes @ 0x9
  1371                           
  1372     00A9                     ??_charToRien:	
  1373                           ; 1 bytes @ 0x9
  1374                           
  1375                           
  1376                           ; 1 bytes @ 0x9
  1377     00A9                     	ds	1
  1378     00AA                     ??___lwdiv:
  1379                           
  1380                           ; 1 bytes @ 0xA
  1381     00AA                     	ds	1
  1382     00AB                     ?_vfpfcnvrt:
  1383     00AB                     charToRien@unite:	
  1384                           ; 2 bytes @ 0xB
  1385                           
  1386     00AB                     vfpfcnvrt@fmt:	
  1387                           ; 1 bytes @ 0xB
  1388                           
  1389     00AB                     ___lwdiv@quotient:	
  1390                           ; 1 bytes @ 0xB
  1391                           
  1392                           
  1393                           ; 2 bytes @ 0xB
  1394     00AB                     	ds	1
  1395     00AC                     charToRien@dizaines:
  1396     00AC                     vfpfcnvrt@ap:	
  1397                           ; 1 bytes @ 0xC
  1398                           
  1399                           
  1400                           ; 1 bytes @ 0xC
  1401     00AC                     	ds	1
  1402     00AD                     ??_vfpfcnvrt:
  1403     00AD                     charToRien@nombre:	
  1404                           ; 1 bytes @ 0xD
  1405                           
  1406     00AD                     ___lwdiv@counter:	
  1407                           ; 1 bytes @ 0xD
  1408                           
  1409                           
  1410                           ; 1 bytes @ 0xD
  1411     00AD                     	ds	4
  1412     00B1                     vfpfcnvrt@done:
  1413                           
  1414                           ; 1 bytes @ 0x11
  1415     00B1                     	ds	1
  1416     00B2                     vfpfcnvrt@cnt:
  1417                           
  1418                           ; 2 bytes @ 0x12
  1419     00B2                     	ds	2
  1420     00B4                     vfpfcnvrt@fp:
  1421                           
  1422                           ; 1 bytes @ 0x14
  1423     00B4                     	ds	1
  1424     00B5                     vfpfcnvrt@convarg:
  1425                           
  1426                           ; 4 bytes @ 0x15
  1427     00B5                     	ds	4
  1428     00B9                     vfpfcnvrt@cp:
  1429                           
  1430                           ; 2 bytes @ 0x19
  1431     00B9                     	ds	2
  1432     00BB                     vfpfcnvrt@c:
  1433                           
  1434                           ; 1 bytes @ 0x1B
  1435     00BB                     	ds	1
  1436     00BC                     ?_vfprintf:
  1437     00BC                     vfprintf@fmt:	
  1438                           ; 2 bytes @ 0x1C
  1439                           
  1440                           
  1441                           ; 2 bytes @ 0x1C
  1442     00BC                     	ds	2
  1443     00BE                     vfprintf@ap:
  1444                           
  1445                           ; 1 bytes @ 0x1E
  1446     00BE                     	ds	1
  1447     00BF                     ??_vfprintf:
  1448                           
  1449                           ; 1 bytes @ 0x1F
  1450     00BF                     	ds	1
  1451     00C0                     vfprintf@fp:
  1452                           
  1453                           ; 1 bytes @ 0x20
  1454     00C0                     	ds	1
  1455     00C1                     vfprintf@cfmt:
  1456                           
  1457                           ; 2 bytes @ 0x21
  1458     00C1                     	ds	2
  1459     00C3                     ?_sprintf:
  1460     00C3                     sprintf@s:	
  1461                           ; 2 bytes @ 0x23
  1462                           
  1463                           
  1464                           ; 2 bytes @ 0x23
  1465     00C3                     	ds	2
  1466     00C5                     sprintf@fmt:
  1467                           
  1468                           ; 2 bytes @ 0x25
  1469     00C5                     	ds	4
  1470     00C9                     ??_sprintf:
  1471     00C9                     sprintf@ap:	
  1472                           ; 1 bytes @ 0x29
  1473                           
  1474                           
  1475                           ; 1 bytes @ 0x29
  1476     00C9                     	ds	1
  1477     00CA                     sprintf@f:
  1478                           
  1479                           ; 11 bytes @ 0x2A
  1480     00CA                     	ds	11
  1481     00D5                     ??_lcd:
  1482     00D5                     ??_setOffset:	
  1483                           ; 1 bytes @ 0x35
  1484                           
  1485     00D5                     setOffset@potar:	
  1486                           ; 1 bytes @ 0x35
  1487                           
  1488                           
  1489                           ; 2 bytes @ 0x35
  1490     00D5                     	ds	2
  1491     00D7                     ??_main:
  1492                           
  1493                           ; 1 bytes @ 0x37
  1494     00D7                     	ds	2
  1495                           
  1496                           	psect	cstackCOMMON
  1497     0070                     __pcstackCOMMON:
  1498     0070                     ?_LCD_WriteCommand:
  1499     0070                     ?_SPI_Exchange8bit:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502     0070                     ?_SPI_InitializePins:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505     0070                     ?_SPI_Initialize:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508     0070                     ?_putch:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511     0070                     ?_LCD_InitializePins:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514     0070                     ?_LCD_Initialize:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517     0070                     ?_LCD_WriteByte:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520     0070                     ?_LCD_WriteString:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523     0070                     ?_LCD_Clear:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526     0070                     ?_init:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529     0070                     ?_configurerInterruptBouton:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532     0070                     ?_init_pot:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535     0070                     ?_init_adc:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538     0070                     ?_lcd:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541     0070                     ?_isr:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544     0070                     ?_setOffset:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547     0070                     ?_charToRien:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550     0070                     ?_main:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553     0070                     ?i1_LCD_WriteCommand:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556     0070                     ?i1_LCD_WriteByte:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559     0070                     ?i1_LCD_WriteString:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562     0070                     ?i1_LCD_Clear:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565     0070                     ?i1_lcd:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568     0070                     ?i1_SPI_Exchange8bit:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571     0070                     ??i1_SPI_Exchange8bit:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574     0070                     ?i1_putch:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577     0070                     ??i1_putch:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580     0070                     ?_cesar:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583     0070                     ?i1___awdiv:	
  1584                           ; 2 bytes @ 0x0
  1585                           
  1586     0070                     ?i1___awmod:	
  1587                           ; 2 bytes @ 0x0
  1588                           
  1589     0070                     ?i1_fputc:	
  1590                           ; 2 bytes @ 0x0
  1591                           
  1592     0070                     putch@c:	
  1593                           ; 2 bytes @ 0x0
  1594                           
  1595     0070                     i1SPI_Exchange8bit@data:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598     0070                     cesar@value:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601     0070                     i1___awdiv@divisor:	
  1602                           ; 2 bytes @ 0x0
  1603                           
  1604     0070                     i1___awmod@divisor:	
  1605                           ; 2 bytes @ 0x0
  1606                           
  1607     0070                     i1fputc@c:	
  1608                           ; 2 bytes @ 0x0
  1609                           
  1610                           
  1611                           ; 2 bytes @ 0x0
  1612     0070                     	ds	1
  1613     0071                     ?i1_LCD_WriteIOExpander:
  1614     0071                     i1LCD_WriteIOExpander@data:	
  1615                           ; 1 bytes @ 0x1
  1616                           
  1617                           
  1618                           ; 1 bytes @ 0x1
  1619     0071                     	ds	1
  1620     0072                     ??i1_LCD_WriteIOExpander:
  1621     0072                     i1LCD_WriteIOExpander@reg:	
  1622                           ; 1 bytes @ 0x2
  1623                           
  1624     0072                     i1fputc@fp:	
  1625                           ; 1 bytes @ 0x2
  1626                           
  1627     0072                     cesar@offsetBis:	
  1628                           ; 1 bytes @ 0x2
  1629                           
  1630     0072                     i1___awdiv@dividend:	
  1631                           ; 2 bytes @ 0x2
  1632                           
  1633     0072                     i1___awmod@dividend:	
  1634                           ; 2 bytes @ 0x2
  1635                           
  1636                           
  1637                           ; 2 bytes @ 0x2
  1638     0072                     	ds	1
  1639     0073                     ??i1_LCD_WriteCommand:
  1640     0073                     ??i1_LCD_WriteByte:	
  1641                           ; 1 bytes @ 0x3
  1642                           
  1643     0073                     ??i1_fputc:	
  1644                           ; 1 bytes @ 0x3
  1645                           
  1646     0073                     i1LCD_WriteCommand@cmd:	
  1647                           ; 1 bytes @ 0x3
  1648                           
  1649     0073                     i1LCD_WriteByte@data:	
  1650                           ; 1 bytes @ 0x3
  1651                           
  1652                           
  1653                           ; 1 bytes @ 0x3
  1654     0073                     	ds	1
  1655     0074                     ??_cesar:
  1656     0074                     ??i1_LCD_WriteString:	
  1657                           ; 1 bytes @ 0x4
  1658                           
  1659     0074                     ?i1_LCD_GoTo:	
  1660                           ; 1 bytes @ 0x4
  1661                           
  1662     0074                     ??i1___awdiv:	
  1663                           ; 1 bytes @ 0x4
  1664                           
  1665     0074                     ??i1___awmod:	
  1666                           ; 1 bytes @ 0x4
  1667                           
  1668     0074                     i1LCD_GoTo@column:	
  1669                           ; 1 bytes @ 0x4
  1670                           
  1671                           
  1672                           ; 1 bytes @ 0x4
  1673     0074                     	ds	1
  1674     0075                     ??i1_LCD_GoTo:
  1675     0075                     i1LCD_WriteString@data:	
  1676                           ; 1 bytes @ 0x5
  1677                           
  1678     0075                     i1___awdiv@counter:	
  1679                           ; 1 bytes @ 0x5
  1680                           
  1681     0075                     i1___awmod@counter:	
  1682                           ; 1 bytes @ 0x5
  1683                           
  1684     0075                     i1_LCD_GoTo$119:	
  1685                           ; 1 bytes @ 0x5
  1686                           
  1687                           
  1688                           ; 2 bytes @ 0x5
  1689     0075                     	ds	1
  1690     0076                     i1LCD_WriteString@i:
  1691     0076                     i1___awdiv@sign:	
  1692                           ; 1 bytes @ 0x6
  1693                           
  1694     0076                     i1___awmod@sign:	
  1695                           ; 1 bytes @ 0x6
  1696                           
  1697                           
  1698                           ; 1 bytes @ 0x6
  1699     0076                     	ds	1
  1700     0077                     ?i1_abs:
  1701     0077                     i1LCD_GoTo@pos:	
  1702                           ; 2 bytes @ 0x7
  1703                           
  1704     0077                     i1___awdiv@quotient:	
  1705                           ; 1 bytes @ 0x7
  1706                           
  1707     0077                     i1abs@a:	
  1708                           ; 2 bytes @ 0x7
  1709                           
  1710                           
  1711                           ; 2 bytes @ 0x7
  1712     0077                     	ds	1
  1713     0078                     i1LCD_GoTo@row:
  1714                           
  1715                           ; 1 bytes @ 0x8
  1716     0078                     	ds	1
  1717     0079                     ??i1_LCD_Clear:
  1718     0079                     ??i1_abs:	
  1719                           ; 1 bytes @ 0x9
  1720                           
  1721     0079                     cesar@renvoi:	
  1722                           ; 1 bytes @ 0x9
  1723                           
  1724                           
  1725                           ; 2 bytes @ 0x9
  1726     0079                     	ds	2
  1727     007B                     ?i1_vfpfcnvrt:
  1728     007B                     i1vfpfcnvrt@fmt:	
  1729                           ; 2 bytes @ 0xB
  1730                           
  1731                           
  1732                           ; 1 bytes @ 0xB
  1733     007B                     	ds	1
  1734     007C                     i1vfpfcnvrt@ap:
  1735                           
  1736                           ; 1 bytes @ 0xC
  1737     007C                     	ds	1
  1738     007D                     ??i1_vfprintf:
  1739                           
  1740                           ; 1 bytes @ 0xD
  1741     007D                     	ds	1
  1742     007E                     ??i1_sprintf:
  1743                           
  1744                           	psect	cstackBANK0
  1745     0020                     __pcstackBANK0:	
  1746                           ; 1 bytes @ 0xE
  1747                           
  1748     0020                     ??i1_vfpfcnvrt:
  1749                           
  1750                           ; 1 bytes @ 0x0
  1751     0020                     	ds	4
  1752     0024                     i1vfpfcnvrt@done:
  1753                           
  1754                           ; 1 bytes @ 0x4
  1755     0024                     	ds	1
  1756     0025                     i1vfpfcnvrt@cnt:
  1757                           
  1758                           ; 2 bytes @ 0x5
  1759     0025                     	ds	2
  1760     0027                     i1vfpfcnvrt@fp:
  1761                           
  1762                           ; 1 bytes @ 0x7
  1763     0027                     	ds	1
  1764     0028                     i1vfpfcnvrt@convarg:
  1765                           
  1766                           ; 4 bytes @ 0x8
  1767     0028                     	ds	4
  1768     002C                     i1vfpfcnvrt@cp:
  1769                           
  1770                           ; 2 bytes @ 0xC
  1771     002C                     	ds	2
  1772     002E                     i1vfpfcnvrt@c:
  1773                           
  1774                           ; 1 bytes @ 0xE
  1775     002E                     	ds	1
  1776     002F                     ?i1_vfprintf:
  1777     002F                     i1vfprintf@fmt:	
  1778                           ; 2 bytes @ 0xF
  1779                           
  1780                           
  1781                           ; 2 bytes @ 0xF
  1782     002F                     	ds	2
  1783     0031                     i1vfprintf@ap:
  1784                           
  1785                           ; 1 bytes @ 0x11
  1786     0031                     	ds	1
  1787     0032                     i1vfprintf@fp:
  1788                           
  1789                           ; 1 bytes @ 0x12
  1790     0032                     	ds	1
  1791     0033                     i1vfprintf@cfmt:
  1792                           
  1793                           ; 2 bytes @ 0x13
  1794     0033                     	ds	2
  1795     0035                     ?i1_sprintf:
  1796     0035                     i1sprintf@s:	
  1797                           ; 2 bytes @ 0x15
  1798                           
  1799                           
  1800                           ; 2 bytes @ 0x15
  1801     0035                     	ds	2
  1802     0037                     i1sprintf@fmt:
  1803                           
  1804                           ; 2 bytes @ 0x17
  1805     0037                     	ds	4
  1806     003B                     i1sprintf@ap:
  1807                           
  1808                           ; 1 bytes @ 0x1B
  1809     003B                     	ds	1
  1810     003C                     i1sprintf@f:
  1811                           
  1812                           ; 11 bytes @ 0x1C
  1813     003C                     	ds	11
  1814     0047                     ??i1_lcd:
  1815                           
  1816                           ; 1 bytes @ 0x27
  1817     0047                     	ds	2
  1818     0049                     ??_isr:
  1819                           
  1820                           ; 1 bytes @ 0x29
  1821     0049                     	ds	4
  1822     004D                     isr@caractere:
  1823                           
  1824                           ; 1 bytes @ 0x2D
  1825     004D                     	ds	1
  1826                           
  1827                           	psect	maintext
  1828     0693                     __pmaintext:	
  1829 ;;
  1830 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1831 ;;
  1832 ;; *************** function _main *****************
  1833 ;; Defined at:
  1834 ;;		line 204 in file "main.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : B1F/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1850 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1851 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1852 ;;Total ram usage:        2 bytes
  1853 ;; Hardware stack levels required when called: unknown (due to recursion)
  1854 ;; This function calls:
  1855 ;;		_LCD_Clear
  1856 ;;		_LCD_GoTo
  1857 ;;		_charToRien
  1858 ;;		_configurerInterruptBouton
  1859 ;;		_init
  1860 ;;		_init_adc
  1861 ;;		_init_pot
  1862 ;;		_lcd
  1863 ;;		_setOffset
  1864 ;; This function is called by:
  1865 ;;		Startup code after reset
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869     0693                     _main:	
  1870                           ;psect for function _main
  1871                           
  1872     0693                     l2483:	
  1873                           ;incstack = 0
  1874                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1875                           
  1876                           
  1877                           ;main.c: 206:     init();
  1878     0693  3187  27C8  3186   	fcall	_init
  1879     0696                     l2485:
  1880                           
  1881                           ;main.c: 207:     init_pot();
  1882     0696  318D  259B  3186   	fcall	_init_pot
  1883     0699                     l2487:
  1884                           
  1885                           ;main.c: 208:     init_adc();
  1886     0699  318D  25C5  3186   	fcall	_init_adc
  1887     069C                     l2489:
  1888                           
  1889                           ;main.c: 209:     LCD_Clear();
  1890     069C  3187  27F5  3186   	fcall	_LCD_Clear
  1891     069F                     l2491:
  1892                           
  1893                           ;main.c: 210:     LCD_GoTo(0, 0);
  1894     069F  0021               	movlb	1	; select bank1
  1895     06A0  01A4               	clrf	LCD_GoTo@column^(0+128)
  1896     06A1  3000               	movlw	0
  1897     06A2  318E  26CA  3186   	fcall	_LCD_GoTo
  1898     06A5                     l2493:
  1899                           
  1900                           ;main.c: 212:     _delay((unsigned long)((250)*(8000000/4000.0)));
  1901     06A5  3003               	movlw	3
  1902     06A6  0021               	movlb	1	; select bank1
  1903     06A7  00D8               	movwf	(??_main^(0+128)+1)
  1904     06A8  308A               	movlw	138
  1905     06A9  00D7               	movwf	??_main^(0+128)
  1906     06AA  3055               	movlw	85
  1907     06AB                     u2357:
  1908     06AB  0B89               	decfsz	9,f
  1909     06AC  2EAB               	goto	u2357
  1910     06AD  0BD7               	decfsz	??_main^(0+128),f
  1911     06AE  2EAB               	goto	u2357
  1912     06AF  0BD8               	decfsz	(??_main^(0+128)+1),f
  1913     06B0  2EAB               	goto	u2357
  1914     06B1  3200               	nop2
  1915     06B2                     l187:	
  1916                           ;main.c: 215:     while (1) {
  1917                           
  1918                           
  1919                           ;main.c: 216:         LCD_Clear();
  1920     06B2  3187  27F5  3186   	fcall	_LCD_Clear
  1921     06B5                     l2495:
  1922                           
  1923                           ;main.c: 217:         offset = setOffset();
  1924     06B5  3187  2798  3186   	fcall	_setOffset
  1925     06B8  0021               	movlb	1	; select bank1
  1926     06B9  00E2               	movwf	_offset^(0+128)
  1927     06BA                     l2497:
  1928                           
  1929                           ;main.c: 218:         charToRien(offset);
  1930     06BA  0862               	movf	_offset^(0+128),w
  1931     06BB  318F  27D5  3186   	fcall	_charToRien
  1932     06BE                     l2499:
  1933                           
  1934                           ;main.c: 219:         LCD_GoTo(0, 0);
  1935     06BE  0021               	movlb	1	; select bank1
  1936     06BF  01A4               	clrf	LCD_GoTo@column^(0+128)
  1937     06C0  3000               	movlw	0
  1938     06C1  318E  26CA  3186   	fcall	_LCD_GoTo
  1939     06C4                     l2501:
  1940                           
  1941                           ;main.c: 221:         lcd();
  1942     06C4  3187  271D  3186   	fcall	_lcd
  1943     06C7                     l2503:
  1944                           
  1945                           ;main.c: 222:         _delay((unsigned long)((250)*(8000000/4000.0)));
  1946     06C7  3003               	movlw	3
  1947     06C8  0021               	movlb	1	; select bank1
  1948     06C9  00D8               	movwf	(??_main^(0+128)+1)
  1949     06CA  308A               	movlw	138
  1950     06CB  00D7               	movwf	??_main^(0+128)
  1951     06CC  3055               	movlw	85
  1952     06CD                     u2367:
  1953     06CD  0B89               	decfsz	9,f
  1954     06CE  2ECD               	goto	u2367
  1955     06CF  0BD7               	decfsz	??_main^(0+128),f
  1956     06D0  2ECD               	goto	u2367
  1957     06D1  0BD8               	decfsz	(??_main^(0+128)+1),f
  1958     06D2  2ECD               	goto	u2367
  1959     06D3  3200               	nop2
  1960                           
  1961                           ;main.c: 223:         configurerInterruptBouton();
  1962     06D4  318D  25A8  3186   	fcall	_configurerInterruptBouton
  1963     06D7  2EB2               	goto	l187
  1964     06D8  3180  286E         	ljmp	start
  1965     06DA                     __end_of_main:
  1966                           
  1967                           	psect	text1
  1968     0798                     __ptext1:	
  1969 ;; *************** function _setOffset *****************
  1970 ;; Defined at:
  1971 ;;		line 134 in file "main.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  potar           2   53[BANK1 ] unsigned int 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      unsigned char 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1986 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1988 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1989 ;;Total ram usage:        2 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; Hardware stack levels required when called: unknown (due to recursion)
  1992 ;; This function calls:
  1993 ;;		___lwdiv
  1994 ;;		___wmul
  1995 ;;		_sprintf
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001     0798                     _setOffset:	
  2002                           ;psect for function _setOffset
  2003                           
  2004     0798                     l2413:	
  2005                           ;incstack = 0
  2006                           ; Regs used in _setOffset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2007                           
  2008                           
  2009                           ;main.c: 135:     ADCON0bits.ADGO = 1;
  2010     0798  0021               	movlb	1	; select bank1
  2011     0799  149D               	bsf	29,1	;volatile
  2012     079A                     l151:	
  2013                           ;main.c: 136:     while (ADCON0bits.ADGO) {};
  2014                           
  2015     079A  189D               	btfsc	29,1	;volatile
  2016     079B  2F9D               	goto	u2181
  2017     079C  2F9E               	goto	u2180
  2018     079D                     u2181:
  2019     079D  2F9A               	goto	l151
  2020     079E                     u2180:
  2021     079E                     l2415:
  2022                           
  2023                           ;main.c: 137:     unsigned int potar = (ADRESH << 8) + ADRESL;
  2024     079E  081C               	movf	28,w	;volatile
  2025     079F  00D6               	movwf	(setOffset@potar+1)^(0+128)
  2026     07A0  081B               	movf	27,w	;volatile
  2027     07A1  00D5               	movwf	setOffset@potar^(0+128)
  2028     07A2                     l2417:
  2029                           
  2030                           ;main.c: 138:     sprintf("%d", potar);
  2031     07A2  3019               	movlw	low ((STR_1+10)| (0+32768))
  2032     07A3  00C3               	movwf	sprintf@s^(0+128)
  2033     07A4  3090               	movlw	high ((STR_1+10)| (0+32768))
  2034     07A5  00C4               	movwf	(sprintf@s^(0+128)+1)
  2035     07A6  0856               	movf	(setOffset@potar+1)^(0+128),w
  2036     07A7  00C6               	movwf	(sprintf@fmt+1)^(0+128)
  2037     07A8  0855               	movf	setOffset@potar^(0+128),w
  2038     07A9  00C5               	movwf	sprintf@fmt^(0+128)
  2039     07AA  318F  278E  3187   	fcall	_sprintf
  2040     07AD                     l2419:
  2041                           
  2042                           ;main.c: 139:     return (35 * potar) / 1023;
  2043     07AD  30FF               	movlw	255
  2044     07AE  0021               	movlb	1	; select bank1
  2045     07AF  00A6               	movwf	___lwdiv@divisor^(0+128)
  2046     07B0  3003               	movlw	3
  2047     07B1  00A7               	movwf	(___lwdiv@divisor^(0+128)+1)
  2048     07B2  0856               	movf	(setOffset@potar+1)^(0+128),w
  2049     07B3  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  2050     07B4  0855               	movf	setOffset@potar^(0+128),w
  2051     07B5  00A0               	movwf	___wmul@multiplier^(0+128)
  2052     07B6  3023               	movlw	35
  2053     07B7  00A2               	movwf	___wmul@multiplicand^(0+128)
  2054     07B8  3000               	movlw	0
  2055     07B9  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  2056     07BA  318F  2708  3187   	fcall	___wmul
  2057     07BD  0021               	movlb	1	; select bank1
  2058     07BE  0821               	movf	(?___wmul+1)^(0+128),w
  2059     07BF  00A9               	movwf	(___lwdiv@dividend+1)^(0+128)
  2060     07C0  0820               	movf	?___wmul^(0+128),w
  2061     07C1  00A8               	movwf	___lwdiv@dividend^(0+128)
  2062     07C2  3187  275B  3187   	fcall	___lwdiv
  2063     07C5  0021               	movlb	1	; select bank1
  2064     07C6  0826               	movf	?___lwdiv^(0+128),w
  2065     07C7                     l154:
  2066     07C7  0008               	return
  2067     07C8                     __end_of_setOffset:
  2068                           
  2069                           	psect	text2
  2070     0F08                     __ptext2:	
  2071 ;; *************** function ___wmul *****************
  2072 ;; Defined at:
  2073 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2076 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  product         2    4[BANK1 ] unsigned int 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  2    0[BANK1 ] unsigned int 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2088 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2089 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2091 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2092 ;;Total ram usage:        6 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: unknown (due to recursion)
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_setOffset
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102     0F08                     ___wmul:	
  2103                           ;psect for function ___wmul
  2104                           
  2105     0F08                     l2285:	
  2106                           ;incstack = 0
  2107                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2108                           
  2109     0F08  0021               	movlb	1	; select bank1
  2110     0F09  01A4               	clrf	___wmul@product^(0+128)
  2111     0F0A  01A5               	clrf	(___wmul@product+1)^(0+128)
  2112     0F0B                     l2287:
  2113     0F0B  1C20               	btfss	___wmul@multiplier^(0+128),0
  2114     0F0C  2F0E               	goto	u2051
  2115     0F0D  2F0F               	goto	u2050
  2116     0F0E                     u2051:
  2117     0F0E  2F13               	goto	l318
  2118     0F0F                     u2050:
  2119     0F0F                     l2289:
  2120     0F0F  0822               	movf	___wmul@multiplicand^(0+128),w
  2121     0F10  07A4               	addwf	___wmul@product^(0+128),f
  2122     0F11  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  2123     0F12  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  2124     0F13                     l318:
  2125     0F13  3001               	movlw	1
  2126     0F14                     u2065:
  2127     0F14  35A2               	lslf	___wmul@multiplicand^(0+128),f
  2128     0F15  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2129     0F16  0B89               	decfsz	9,f
  2130     0F17  2F14               	goto	u2065
  2131     0F18                     l2291:
  2132     0F18  3001               	movlw	1
  2133     0F19                     u2075:
  2134     0F19  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  2135     0F1A  0CA0               	rrf	___wmul@multiplier^(0+128),f
  2136     0F1B  0B89               	decfsz	9,f
  2137     0F1C  2F19               	goto	u2075
  2138     0F1D                     l2293:
  2139     0F1D  0820               	movf	___wmul@multiplier^(0+128),w
  2140     0F1E  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
  2141     0F1F  1D03               	btfss	3,2
  2142     0F20  2F22               	goto	u2081
  2143     0F21  2F23               	goto	u2080
  2144     0F22                     u2081:
  2145     0F22  2F0B               	goto	l2287
  2146     0F23                     u2080:
  2147     0F23                     l2295:
  2148     0F23  0825               	movf	(___wmul@product+1)^(0+128),w
  2149     0F24  00A1               	movwf	(?___wmul+1)^(0+128)
  2150     0F25  0824               	movf	___wmul@product^(0+128),w
  2151     0F26  00A0               	movwf	?___wmul^(0+128)
  2152     0F27                     l320:
  2153     0F27  0008               	return
  2154     0F28                     __end_of___wmul:
  2155                           
  2156                           	psect	text3
  2157     075B                     __ptext3:	
  2158 ;; *************** function ___lwdiv *****************
  2159 ;; Defined at:
  2160 ;;		line 5 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/lwdiv.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  divisor         2    6[BANK1 ] unsigned int 
  2163 ;;  dividend        2    8[BANK1 ] unsigned int 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  quotient        2   11[BANK1 ] unsigned int 
  2166 ;;  counter         1   13[BANK1 ] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  2    6[BANK1 ] unsigned int 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2176 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2177 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2178 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2179 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2180 ;;Total ram usage:        8 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: unknown (due to recursion)
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_setOffset
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190     075B                     ___lwdiv:	
  2191                           ;psect for function ___lwdiv
  2192                           
  2193     075B                     l2299:	
  2194                           ;incstack = 0
  2195                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2196                           
  2197     075B  0021               	movlb	1	; select bank1
  2198     075C  01AB               	clrf	___lwdiv@quotient^(0+128)
  2199     075D  01AC               	clrf	(___lwdiv@quotient+1)^(0+128)
  2200     075E                     l2301:
  2201     075E  0826               	movf	___lwdiv@divisor^(0+128),w
  2202     075F  0427               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  2203     0760  1903               	btfsc	3,2
  2204     0761  2F63               	goto	u2091
  2205     0762  2F64               	goto	u2090
  2206     0763                     u2091:
  2207     0763  2F93               	goto	l2321
  2208     0764                     u2090:
  2209     0764                     l2303:
  2210     0764  01AD               	clrf	___lwdiv@counter^(0+128)
  2211     0765  0AAD               	incf	___lwdiv@counter^(0+128),f
  2212     0766  2F70               	goto	l2309
  2213     0767                     l2305:
  2214     0767  3001               	movlw	1
  2215     0768                     u2105:
  2216     0768  35A6               	lslf	___lwdiv@divisor^(0+128),f
  2217     0769  0DA7               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2218     076A  0B89               	decfsz	9,f
  2219     076B  2F68               	goto	u2105
  2220     076C                     l2307:
  2221     076C  3001               	movlw	1
  2222     076D  00AA               	movwf	??___lwdiv^(0+128)
  2223     076E  082A               	movf	??___lwdiv^(0+128),w
  2224     076F  07AD               	addwf	___lwdiv@counter^(0+128),f
  2225     0770                     l2309:
  2226     0770  1FA7               	btfss	(___lwdiv@divisor+1)^(0+128),7
  2227     0771  2F73               	goto	u2111
  2228     0772  2F74               	goto	u2110
  2229     0773                     u2111:
  2230     0773  2F67               	goto	l2305
  2231     0774                     u2110:
  2232     0774                     l2311:
  2233     0774  3001               	movlw	1
  2234     0775                     u2125:
  2235     0775  35AB               	lslf	___lwdiv@quotient^(0+128),f
  2236     0776  0DAC               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2237     0777  0B89               	decfsz	9,f
  2238     0778  2F75               	goto	u2125
  2239     0779  0827               	movf	(___lwdiv@divisor+1)^(0+128),w
  2240     077A  0229               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2241     077B  1D03               	skipz
  2242     077C  2F7F               	goto	u2135
  2243     077D  0826               	movf	___lwdiv@divisor^(0+128),w
  2244     077E  0228               	subwf	___lwdiv@dividend^(0+128),w
  2245     077F                     u2135:
  2246     077F  1C03               	skipc
  2247     0780  2F82               	goto	u2131
  2248     0781  2F83               	goto	u2130
  2249     0782                     u2131:
  2250     0782  2F88               	goto	l2317
  2251     0783                     u2130:
  2252     0783                     l2313:
  2253     0783  0826               	movf	___lwdiv@divisor^(0+128),w
  2254     0784  02A8               	subwf	___lwdiv@dividend^(0+128),f
  2255     0785  0827               	movf	(___lwdiv@divisor+1)^(0+128),w
  2256     0786  3BA9               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  2257     0787                     l2315:
  2258     0787  142B               	bsf	___lwdiv@quotient^(0+128),0
  2259     0788                     l2317:
  2260     0788  3001               	movlw	1
  2261     0789                     u2145:
  2262     0789  36A7               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  2263     078A  0CA6               	rrf	___lwdiv@divisor^(0+128),f
  2264     078B  0B89               	decfsz	9,f
  2265     078C  2F89               	goto	u2145
  2266     078D                     l2319:
  2267     078D  3001               	movlw	1
  2268     078E  02AD               	subwf	___lwdiv@counter^(0+128),f
  2269     078F  1D03               	btfss	3,2
  2270     0790  2F92               	goto	u2151
  2271     0791  2F93               	goto	u2150
  2272     0792                     u2151:
  2273     0792  2F74               	goto	l2311
  2274     0793                     u2150:
  2275     0793                     l2321:
  2276     0793  082C               	movf	(___lwdiv@quotient+1)^(0+128),w
  2277     0794  00A7               	movwf	(?___lwdiv+1)^(0+128)
  2278     0795  082B               	movf	___lwdiv@quotient^(0+128),w
  2279     0796  00A6               	movwf	?___lwdiv^(0+128)
  2280     0797                     l598:
  2281     0797  0008               	return
  2282     0798                     __end_of___lwdiv:
  2283                           
  2284                           	psect	text4
  2285     071D                     __ptext4:	
  2286 ;; *************** function _lcd *****************
  2287 ;; Defined at:
  2288 ;;		line 84 in file "main.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2304 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2305 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2306 ;;Total ram usage:        2 bytes
  2307 ;; Hardware stack levels used: 1
  2308 ;; Hardware stack levels required when called: unknown (due to recursion)
  2309 ;; This function calls:
  2310 ;;		_LCD_Clear
  2311 ;;		_LCD_GoTo
  2312 ;;		_LCD_WriteString
  2313 ;;		_sprintf
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319     071D                     _lcd:	
  2320                           ;psect for function _lcd
  2321                           
  2322     071D                     l2401:	
  2323                           ;incstack = 0
  2324                           ; Regs used in _lcd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2325                           
  2326                           
  2327                           ;main.c: 85:     LCD_Clear();
  2328     071D  3187  27F5  3187   	fcall	_LCD_Clear
  2329                           
  2330                           ;main.c: 86:     LCD_GoTo(0, 0);
  2331     0720  0021               	movlb	1	; select bank1
  2332     0721  01A4               	clrf	LCD_GoTo@column^(0+128)
  2333     0722  3000               	movlw	0
  2334     0723  318E  26CA  3187   	fcall	_LCD_GoTo
  2335     0726                     l2403:
  2336                           
  2337                           ;main.c: 89:     if (Chiffrement == 1) {
  2338     0726  0021               	movlb	1	; select bank1
  2339     0727  035F               	decf	_Chiffrement^(0+128),w
  2340     0728  0460               	iorwf	(_Chiffrement+1)^(0+128),w
  2341     0729  1D03               	btfss	3,2
  2342     072A  2F2C               	goto	u2171
  2343     072B  2F2D               	goto	u2170
  2344     072C                     u2171:
  2345     072C  2F44               	goto	l2409
  2346     072D                     u2170:
  2347     072D                     l2405:
  2348                           
  2349                           ;main.c: 91:         sprintf(String, "Chiffre : %d", offset);
  2350     072D  30E3               	movlw	low _String
  2351     072E  00C3               	movwf	sprintf@s^(0+128)
  2352     072F  3000               	movlw	high _String
  2353     0730  00C4               	movwf	(sprintf@s+1)^(0+128)
  2354     0731  300F               	movlw	low (STR_1| (0+32768))
  2355     0732  00C5               	movwf	sprintf@fmt^(0+128)
  2356     0733  3090               	movlw	high (STR_1| (0+32768))
  2357     0734  00C6               	movwf	(sprintf@fmt^(0+128)+1)
  2358     0735  0862               	movf	_offset^(0+128),w
  2359     0736  00D5               	movwf	??_lcd^(0+128)
  2360     0737  01D6               	clrf	(??_lcd^(0+128)+1)
  2361     0738  0855               	movf	??_lcd^(0+128),w
  2362     0739  00C7               	movwf	(?_sprintf^(0+128)+4)
  2363     073A  0856               	movf	(??_lcd+1)^(0+128),w
  2364     073B  00C8               	movwf	((?_sprintf+1)^(0+128)+4)
  2365     073C  318F  278E  3187   	fcall	_sprintf
  2366     073F                     l2407:
  2367                           
  2368                           ;main.c: 92:         LCD_WriteString(String);
  2369     073F  30E3               	movlw	(low (_String| 0))& (0+255)
  2370     0740  318E  26E9  3187   	fcall	_LCD_WriteString
  2371                           
  2372                           ;main.c: 93:     } else {
  2373     0743  2F5A               	goto	l133
  2374     0744                     l2409:
  2375                           
  2376                           ;main.c: 95:         sprintf(String, "Dechiffre : %d", offset);
  2377     0744  30E3               	movlw	low _String
  2378     0745  00C3               	movwf	sprintf@s^(0+128)
  2379     0746  3000               	movlw	high _String
  2380     0747  00C4               	movwf	(sprintf@s+1)^(0+128)
  2381     0748  3000               	movlw	low (STR_2| (0+32768))
  2382     0749  00C5               	movwf	sprintf@fmt^(0+128)
  2383     074A  3090               	movlw	high (STR_2| (0+32768))
  2384     074B  00C6               	movwf	(sprintf@fmt^(0+128)+1)
  2385     074C  0862               	movf	_offset^(0+128),w
  2386     074D  00D5               	movwf	??_lcd^(0+128)
  2387     074E  01D6               	clrf	(??_lcd^(0+128)+1)
  2388     074F  0855               	movf	??_lcd^(0+128),w
  2389     0750  00C7               	movwf	(?_sprintf^(0+128)+4)
  2390     0751  0856               	movf	(??_lcd+1)^(0+128),w
  2391     0752  00C8               	movwf	((?_sprintf+1)^(0+128)+4)
  2392     0753  318F  278E  3187   	fcall	_sprintf
  2393     0756                     l2411:
  2394                           
  2395                           ;main.c: 96:         LCD_WriteString(String);
  2396     0756  30E3               	movlw	(low (_String| 0))& (0+255)
  2397     0757  318E  26E9  3187   	fcall	_LCD_WriteString
  2398     075A                     l133:
  2399     075A  0008               	return
  2400     075B                     __end_of_lcd:
  2401                           
  2402                           	psect	text5
  2403     0F8E                     __ptext5:	
  2404 ;; *************** function _sprintf *****************
  2405 ;; Defined at:
  2406 ;;		line 9 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/nf_sprintf.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  s               2   35[BANK1 ] PTR unsigned char 
  2409 ;;		 -> STR_3(3), String(3), 
  2410 ;;  fmt             2   37[BANK1 ] PTR const unsigned char 
  2411 ;;		 -> ROM(16384), STR_2(15), STR_1(13), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  f              11   42[BANK1 ] struct _IO_FILE
  2414 ;;  ret             2    0        int 
  2415 ;;  ap              1   41[BANK1 ] PTR void [1]
  2416 ;;		 -> ?_sprintf(2), 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  2   35[BANK1 ] int 
  2419 ;; Registers used:
  2420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2426 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2427 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2429 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2430 ;;Total ram usage:       18 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: unknown (due to recursion)
  2433 ;; This function calls:
  2434 ;;		_vfprintf
  2435 ;; This function is called by:
  2436 ;;		_lcd
  2437 ;;		_setOffset
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441     0F8E                     _sprintf:	
  2442                           ;psect for function _sprintf
  2443                           
  2444     0F8E                     l2223:	
  2445                           ;incstack = 0
  2446                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2447                           
  2448     0F8E  30C7               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  2449     0F8F  0021               	movlb	1	; select bank1
  2450     0F90  00C9               	movwf	sprintf@ap^(0+128)
  2451     0F91  0844               	movf	(sprintf@s+1)^(0+128),w
  2452     0F92  00CB               	movwf	(sprintf@f+1)^(0+128)
  2453     0F93  0843               	movf	sprintf@s^(0+128),w
  2454     0F94  00CA               	movwf	sprintf@f^(0+128)
  2455     0F95                     l2225:
  2456     0F95  01CC               	clrf	(sprintf@f^(0+128)+2)
  2457     0F96  01CD               	clrf	((sprintf@f+1)^(0+128)+2)
  2458     0F97                     l2227:
  2459     0F97  01D3               	clrf	(sprintf@f^(0+128)+9)
  2460     0F98  01D4               	clrf	((sprintf@f+1)^(0+128)+9)
  2461     0F99                     l2229:
  2462     0F99  0846               	movf	(sprintf@fmt+1)^(0+128),w
  2463     0F9A  00BD               	movwf	(vfprintf@fmt+1)^(0+128)
  2464     0F9B  0845               	movf	sprintf@fmt^(0+128),w
  2465     0F9C  00BC               	movwf	vfprintf@fmt^(0+128)
  2466     0F9D  30C9               	movlw	(low (sprintf@ap| 0))& (0+255)
  2467     0F9E  00BE               	movwf	vfprintf@ap^(0+128)
  2468     0F9F  30CA               	movlw	(low (sprintf@f| 0))& (0+255)
  2469     0FA0  318F  2749  318F   	fcall	_vfprintf
  2470     0FA3                     l2231:
  2471     0FA3  3002               	movlw	2
  2472     0FA4  3ECA               	addlw	(low (sprintf@f| 0))& (0+255)
  2473     0FA5  0086               	movwf	6
  2474     0FA6  0187               	clrf	7
  2475     0FA7  3F40               	moviw [0]fsr1
  2476     0FA8  0021               	movlb	1	; select bank1
  2477     0FA9  0743               	addwf	sprintf@s^(0+128),w
  2478     0FAA  0084               	movwf	4
  2479     0FAB  3F41               	moviw [1]fsr1
  2480     0FAC  3D44               	addwfc	(sprintf@s+1)^(0+128),w
  2481     0FAD  0085               	movwf	5
  2482     0FAE  3000               	movlw	0
  2483     0FAF  0080               	movwf	0
  2484     0FB0                     l781:
  2485     0FB0  0008               	return
  2486     0FB1                     __end_of_sprintf:
  2487                           
  2488                           	psect	text6
  2489     0F49                     __ptext6:	
  2490 ;; *************** function _vfprintf *****************
  2491 ;; Defined at:
  2492 ;;		line 1817 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  fp              1    wreg     PTR struct _IO_FILE
  2495 ;;		 -> sprintf@f(11), 
  2496 ;;  fmt             2   28[BANK1 ] PTR const unsigned char 
  2497 ;;		 -> ROM(16384), STR_2(15), STR_1(13), 
  2498 ;;  ap              1   30[BANK1 ] PTR PTR void 
  2499 ;;		 -> sprintf@ap(1), 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  fp              1   32[BANK1 ] PTR struct _IO_FILE
  2502 ;;		 -> sprintf@f(11), 
  2503 ;;  cfmt            2   33[BANK1 ] PTR unsigned char 
  2504 ;;		 -> ROM(16384), STR_2(15), STR_1(13), 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  2   28[BANK1 ] int 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2514 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2515 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2516 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2517 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2518 ;;Total ram usage:        7 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; Hardware stack levels required when called: unknown (due to recursion)
  2521 ;; This function calls:
  2522 ;;		_vfpfcnvrt
  2523 ;; This function is called by:
  2524 ;;		_sprintf
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528     0F49                     _vfprintf:	
  2529                           ;psect for function _vfprintf
  2530                           
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2534                           ;vfprintf@fp stored from wreg
  2535     0F49  0021               	movlb	1	; select bank1
  2536     0F4A  00C0               	movwf	vfprintf@fp^(0+128)
  2537     0F4B                     l2149:
  2538                           
  2539                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.45/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  2540     0F4B  083D               	movf	(vfprintf@fmt+1)^(0+128),w
  2541     0F4C  00C2               	movwf	(vfprintf@cfmt+1)^(0+128)
  2542     0F4D  083C               	movf	vfprintf@fmt^(0+128),w
  2543     0F4E  00C1               	movwf	vfprintf@cfmt^(0+128)
  2544     0F4F                     l2151:
  2545                           
  2546                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1824:     nout = 0;
  2547     0F4F  01D9               	clrf	_nout^(0+128)
  2548     0F50  01DA               	clrf	(_nout+1)^(0+128)
  2549                           
  2550                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  2551     0F51  2F5F               	goto	l2155
  2552     0F52                     l2153:
  2553                           
  2554                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1828:         nout +
      +                          =
  2555     0F52  30C1               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2556     0F53  00AB               	movwf	vfpfcnvrt@fmt^(0+128)
  2557     0F54  083E               	movf	vfprintf@ap^(0+128),w
  2558     0F55  00AC               	movwf	vfpfcnvrt@ap^(0+128)
  2559     0F56  0840               	movf	vfprintf@fp^(0+128),w
  2560     0F57  3181  21E9  318F   	fcall	_vfpfcnvrt
  2561     0F5A  0021               	movlb	1	; select bank1
  2562     0F5B  082B               	movf	?_vfpfcnvrt^(0+128),w
  2563     0F5C  07D9               	addwf	_nout^(0+128),f
  2564     0F5D  082C               	movf	(?_vfpfcnvrt+1)^(0+128),w
  2565     0F5E  3DDA               	addwfc	(_nout+1)^(0+128),f
  2566     0F5F                     l2155:
  2567                           
  2568                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  2569     0F5F  0841               	movf	vfprintf@cfmt^(0+128),w
  2570     0F60  0084               	movwf	4
  2571     0F61  0842               	movf	(vfprintf@cfmt+1)^(0+128),w
  2572     0F62  0085               	movwf	5
  2573     0F63  0012               	moviw fsr0++
  2574     0F64  1D03               	btfss	3,2
  2575     0F65  2F67               	goto	u1941
  2576     0F66  2F68               	goto	u1940
  2577     0F67                     u1941:
  2578     0F67  2F52               	goto	l2153
  2579     0F68                     u1940:
  2580     0F68                     l2157:
  2581                           
  2582                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  2583     0F68  01BC               	clrf	?_vfprintf^(0+128)
  2584     0F69  01BD               	clrf	(?_vfprintf+1)^(0+128)
  2585     0F6A                     l831:
  2586     0F6A  0008               	return
  2587     0F6B                     __end_of_vfprintf:
  2588                           
  2589                           	psect	text7
  2590     01E9                     __ptext7:	
  2591 ;; *************** function _vfpfcnvrt *****************
  2592 ;; Defined at:
  2593 ;;		line 1177 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  fp              1    wreg     PTR struct _IO_FILE
  2596 ;;		 -> sprintf@f(11), 
  2597 ;;  fmt             1   11[BANK1 ] PTR PTR unsigned char 
  2598 ;;		 -> vfprintf@cfmt(2), 
  2599 ;;  ap              1   12[BANK1 ] PTR PTR void 
  2600 ;;		 -> sprintf@ap(1), 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  fp              1   20[BANK1 ] PTR struct _IO_FILE
  2603 ;;		 -> sprintf@f(11), 
  2604 ;;  convarg         4   21[BANK1 ] struct .
  2605 ;;  cp              2   25[BANK1 ] PTR unsigned char 
  2606 ;;		 -> ROM(16384), STR_2(15), STR_1(13), 
  2607 ;;  cnt             2   18[BANK1 ] int 
  2608 ;;  c               1   27[BANK1 ] unsigned char 
  2609 ;;  done            1   17[BANK1 ] _Bool 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  2   11[BANK1 ] int 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2619 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2620 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2621 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2622 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2623 ;;Total ram usage:       17 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: unknown (due to recursion)
  2626 ;; This function calls:
  2627 ;;		___awdiv
  2628 ;;		___awmod
  2629 ;;		_abs
  2630 ;;		_fputc
  2631 ;; This function is called by:
  2632 ;;		_vfprintf
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636     01E9                     _vfpfcnvrt:	
  2637                           ;psect for function _vfpfcnvrt
  2638                           
  2639                           
  2640                           ;incstack = 0
  2641                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2642                           ;vfpfcnvrt@fp stored from wreg
  2643     01E9  0021               	movlb	1	; select bank1
  2644     01EA  00B4               	movwf	vfpfcnvrt@fp^(0+128)
  2645     01EB                     l1963:
  2646                           
  2647                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.45/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 119
      +                          1:  int cnt = 0;
  2648     01EB  01B2               	clrf	vfpfcnvrt@cnt^(0+128)
  2649     01EC  01B3               	clrf	(vfpfcnvrt@cnt+1)^(0+128)
  2650     01ED                     l1965:
  2651                           
  2652                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1201:     if ((*fmt)
      +                          [0] == '%') {
  2653     01ED  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  2654     01EE  0086               	movwf	6
  2655     01EF  0187               	clrf	7
  2656     01F0  3F40               	moviw [0]fsr1
  2657     01F1  00AD               	movwf	??_vfpfcnvrt^(0+128)
  2658     01F2  3F41               	moviw [1]fsr1
  2659     01F3  00AE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2660     01F4  082D               	movf	??_vfpfcnvrt^(0+128),w
  2661     01F5  0084               	movwf	4
  2662     01F6  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2663     01F7  0085               	movwf	5
  2664     01F8  0012               	moviw fsr0++
  2665     01F9  3A25               	xorlw	37
  2666     01FA  1D03               	btfss	3,2
  2667     01FB  29FD               	goto	u1681
  2668     01FC  29FE               	goto	u1680
  2669     01FD                     u1681:
  2670     01FD  2B1A               	goto	l2041
  2671     01FE                     u1680:
  2672     01FE                     l1967:
  2673                           
  2674                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  2675     01FE  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  2676     01FF  0086               	movwf	6
  2677     0200  0187               	clrf	7
  2678     0201  3001               	movlw	1
  2679     0202  0781               	addwf	1,f
  2680     0203  3141               	addfsr 1,1
  2681     0204  1803               	skipnc
  2682     0205  0A81               	incf	1,f
  2683     0206                     l1969:
  2684                           
  2685                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  2686     0206  01DB               	clrf	_width^(0+128)
  2687     0207  01DC               	clrf	(_width+1)^(0+128)
  2688     0208  1003               	clrc
  2689     0209  3000               	movlw	0
  2690     020A  1803               	btfsc	3,0
  2691     020B  3001               	movlw	1
  2692     020C  00E1               	movwf	_flags^(0+128)
  2693     020D                     l1971:
  2694                           
  2695                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  2696     020D  30FF               	movlw	255
  2697     020E  00DD               	movwf	_prec^(0+128)
  2698     020F  30FF               	movlw	255
  2699     0210  00DE               	movwf	(_prec^(0+128)+1)
  2700     0211                     l1973:
  2701                           
  2702                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  2703     0211  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  2704     0212  0086               	movwf	6
  2705     0213  0187               	clrf	7
  2706     0214  3F40               	moviw [0]fsr1
  2707     0215  00B9               	movwf	vfpfcnvrt@cp^(0+128)
  2708     0216  3F41               	moviw [1]fsr1
  2709     0217  00BA               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  2710     0218                     l1975:
  2711                           
  2712                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == '
      +                          d' || *cp == 'i') {
  2713     0218  0839               	movf	vfpfcnvrt@cp^(0+128),w
  2714     0219  0084               	movwf	4
  2715     021A  083A               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  2716     021B  0085               	movwf	5
  2717     021C  0012               	moviw fsr0++
  2718     021D  3A64               	xorlw	100
  2719     021E  1903               	btfsc	3,2
  2720     021F  2A21               	goto	u1691
  2721     0220  2A22               	goto	u1690
  2722     0221                     u1691:
  2723     0221  2A2C               	goto	l1979
  2724     0222                     u1690:
  2725     0222                     l1977:
  2726     0222  0839               	movf	vfpfcnvrt@cp^(0+128),w
  2727     0223  0084               	movwf	4
  2728     0224  083A               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  2729     0225  0085               	movwf	5
  2730     0226  0012               	moviw fsr0++
  2731     0227  3A69               	xorlw	105
  2732     0228  1D03               	btfss	3,2
  2733     0229  2A2B               	goto	u1701
  2734     022A  2A2C               	goto	u1700
  2735     022B                     u1701:
  2736     022B  2AC1               	goto	l2015
  2737     022C                     u1700:
  2738     022C                     l1979:
  2739                           
  2740                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1404:    convarg.sin
      +                          t = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2741     022C  082C               	movf	vfpfcnvrt@ap^(0+128),w
  2742     022D  0086               	movwf	6
  2743     022E  0187               	clrf	7
  2744     022F  0801               	movf	1,w
  2745     0230  0084               	movwf	4
  2746     0231  0185               	clrf	5
  2747     0232  3002               	movlw	2
  2748     0233  0781               	addwf	1,f
  2749     0234  3F00               	moviw [0]fsr0
  2750     0235  00B5               	movwf	vfpfcnvrt@convarg^(0+128)
  2751     0236  3F01               	moviw [1]fsr0
  2752     0237  00B6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  2753     0238                     l1981:
  2754                           
  2755                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1
      +                          ;
  2756     0238  0839               	movf	vfpfcnvrt@cp^(0+128),w
  2757     0239  3E01               	addlw	1
  2758     023A  00AD               	movwf	??_vfpfcnvrt^(0+128)
  2759     023B  3000               	movlw	0
  2760     023C  3D3A               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  2761     023D  00AE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  2762     023E  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  2763     023F  0086               	movwf	6
  2764     0240  0187               	clrf	7
  2765     0241  082D               	movf	??_vfpfcnvrt^(0+128),w
  2766     0242  3FC0               	movwi [0]fsr1
  2767     0243  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2768     0244  3FC1               	movwi [1]fsr1
  2769     0245                     l1983:
  2770                           
  2771                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1408:    c = sizeof(
      +                          dbuf);
  2772     0245  3020               	movlw	32
  2773     0246  00BB               	movwf	vfpfcnvrt@c^(0+128)
  2774     0247                     l1985:
  2775                           
  2776                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1409:    done = conv
      +                          arg.sint < 0;
  2777     0247  1BB6               	btfsc	(vfpfcnvrt@convarg+1)^(0+128),7
  2778     0248  2A4A               	goto	u1711
  2779     0249  2A4C               	goto	u1710
  2780     024A                     u1711:
  2781     024A  3001               	movlw	1
  2782     024B  2A4D               	goto	u1720
  2783     024C                     u1710:
  2784     024C  3000               	movlw	0
  2785     024D                     u1720:
  2786     024D  00B1               	movwf	vfpfcnvrt@done^(0+128)
  2787     024E                     l1987:
  2788                           
  2789                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1411:     dbuf[--c] 
      +                          = abs(convarg.sint % 10) + '0';
  2790     024E  3001               	movlw	1
  2791     024F  02BB               	subwf	vfpfcnvrt@c^(0+128),f
  2792     0250  083B               	movf	vfpfcnvrt@c^(0+128),w
  2793     0251  3E4E               	addlw	(low (_dbuf| 0))& (0+255)
  2794     0252  0086               	movwf	6
  2795     0253  0187               	clrf	7
  2796     0254  300A               	movlw	10
  2797     0255  00A0               	movwf	___awmod@divisor^(0+128)
  2798     0256  3000               	movlw	0
  2799     0257  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  2800     0258  0836               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  2801     0259  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  2802     025A  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  2803     025B  00A2               	movwf	___awmod@dividend^(0+128)
  2804     025C  3185  2598  3181   	fcall	___awmod
  2805     025F  0021               	movlb	1	; select bank1
  2806     0260  0821               	movf	(?___awmod+1)^(0+128),w
  2807     0261  00A8               	movwf	(abs@a+1)^(0+128)
  2808     0262  0820               	movf	?___awmod^(0+128),w
  2809     0263  00A7               	movwf	abs@a^(0+128)
  2810     0264  318E  2612  3181   	fcall	_abs
  2811     0267  0021               	movlb	1	; select bank1
  2812     0268  0827               	movf	?_abs^(0+128),w
  2813     0269  3E30               	addlw	48
  2814     026A  0081               	movwf	1
  2815     026B                     l1989:
  2816                           
  2817                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1412:     convarg.si
      +                          nt /= 10;
  2818     026B  300A               	movlw	10
  2819     026C  00A0               	movwf	___awdiv@divisor^(0+128)
  2820     026D  3000               	movlw	0
  2821     026E  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  2822     026F  0836               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  2823     0270  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  2824     0271  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  2825     0272  00A2               	movwf	___awdiv@dividend^(0+128)
  2826     0273  3184  2483  3181   	fcall	___awdiv
  2827     0276  0021               	movlb	1	; select bank1
  2828     0277  0821               	movf	(?___awdiv+1)^(0+128),w
  2829     0278  00B6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  2830     0279  0820               	movf	?___awdiv^(0+128),w
  2831     027A  00B5               	movwf	vfpfcnvrt@convarg^(0+128)
  2832     027B                     l1991:
  2833                           
  2834                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1414:     cnt++;
  2835     027B  3001               	movlw	1
  2836     027C  07B2               	addwf	vfpfcnvrt@cnt^(0+128),f
  2837     027D  3000               	movlw	0
  2838     027E  3DB3               	addwfc	(vfpfcnvrt@cnt+1)^(0+128),f
  2839     027F                     l1993:
  2840                           
  2841                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1416:    } while (co
      +                          nvarg.sint != 0 && c != 0);
  2842     027F  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  2843     0280  0436               	iorwf	(vfpfcnvrt@convarg+1)^(0+128),w
  2844     0281  1903               	btfsc	3,2
  2845     0282  2A84               	goto	u1731
  2846     0283  2A85               	goto	u1730
  2847     0284                     u1731:
  2848     0284  2A8A               	goto	l1997
  2849     0285                     u1730:
  2850     0285                     l1995:
  2851     0285  083B               	movf	vfpfcnvrt@c^(0+128),w
  2852     0286  1D03               	btfss	3,2
  2853     0287  2A89               	goto	u1741
  2854     0288  2A8A               	goto	u1740
  2855     0289                     u1741:
  2856     0289  2A4E               	goto	l1987
  2857     028A                     u1740:
  2858     028A                     l1997:
  2859                           
  2860                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1417:    if (c != 0 
      +                          && done) {
  2861     028A  083B               	movf	vfpfcnvrt@c^(0+128),w
  2862     028B  1903               	btfsc	3,2
  2863     028C  2A8E               	goto	u1751
  2864     028D  2A8F               	goto	u1750
  2865     028E                     u1751:
  2866     028E  2AB6               	goto	l2009
  2867     028F                     u1750:
  2868     028F                     l1999:
  2869     028F  0831               	movf	vfpfcnvrt@done^(0+128),w
  2870     0290  1903               	btfsc	3,2
  2871     0291  2A93               	goto	u1761
  2872     0292  2A94               	goto	u1760
  2873     0293                     u1761:
  2874     0293  2AB6               	goto	l2009
  2875     0294                     u1760:
  2876     0294                     l2001:
  2877                           
  2878                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1418:     dbuf[--c] 
      +                          = '-';
  2879     0294  3001               	movlw	1
  2880     0295  02BB               	subwf	vfpfcnvrt@c^(0+128),f
  2881     0296  083B               	movf	vfpfcnvrt@c^(0+128),w
  2882     0297  3E4E               	addlw	(low (_dbuf| 0))& (0+255)
  2883     0298  0086               	movwf	6
  2884     0299  0187               	clrf	7
  2885     029A  302D               	movlw	45
  2886     029B  0081               	movwf	1
  2887     029C                     l2003:
  2888                           
  2889                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1420:     cnt++;
  2890     029C  3001               	movlw	1
  2891     029D  07B2               	addwf	vfpfcnvrt@cnt^(0+128),f
  2892     029E  3000               	movlw	0
  2893     029F  3DB3               	addwfc	(vfpfcnvrt@cnt+1)^(0+128),f
  2894     02A0  2AB6               	goto	l2009
  2895     02A1                     l2005:
  2896                           
  2897                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1424:     fputc(dbuf
      +                          [c++], fp);
  2898     02A1  083B               	movf	vfpfcnvrt@c^(0+128),w
  2899     02A2  3E4E               	addlw	(low (_dbuf| 0))& (0+255)
  2900     02A3  0086               	movwf	6
  2901     02A4  0187               	clrf	7
  2902     02A5  0801               	movf	1,w
  2903     02A6  00AD               	movwf	??_vfpfcnvrt^(0+128)
  2904     02A7  01AE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  2905     02A8  082D               	movf	??_vfpfcnvrt^(0+128),w
  2906     02A9  00A0               	movwf	fputc@c^(0+128)
  2907     02AA  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2908     02AB  00A1               	movwf	(fputc@c+1)^(0+128)
  2909     02AC  0834               	movf	vfpfcnvrt@fp^(0+128),w
  2910     02AD  00A2               	movwf	fputc@fp^(0+128)
  2911     02AE  3185  2542  3181   	fcall	_fputc
  2912     02B1                     l2007:
  2913     02B1  3001               	movlw	1
  2914     02B2  0021               	movlb	1	; select bank1
  2915     02B3  00AD               	movwf	??_vfpfcnvrt^(0+128)
  2916     02B4  082D               	movf	??_vfpfcnvrt^(0+128),w
  2917     02B5  07BB               	addwf	vfpfcnvrt@c^(0+128),f
  2918     02B6                     l2009:
  2919                           
  2920                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1423:    while (c !=
      +                           sizeof(dbuf)) {
  2921     02B6  3020               	movlw	32
  2922     02B7  063B               	xorwf	vfpfcnvrt@c^(0+128),w
  2923     02B8  1D03               	btfss	3,2
  2924     02B9  2ABB               	goto	u1771
  2925     02BA  2ABC               	goto	u1770
  2926     02BB                     u1771:
  2927     02BB  2AA1               	goto	l2005
  2928     02BC                     u1770:
  2929     02BC                     l2011:
  2930                           
  2931                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1427:    return cnt;
  2932     02BC  0833               	movf	(vfpfcnvrt@cnt+1)^(0+128),w
  2933     02BD  00AC               	movwf	(?_vfpfcnvrt+1)^(0+128)
  2934     02BE  0832               	movf	vfpfcnvrt@cnt^(0+128),w
  2935     02BF  00AB               	movwf	?_vfpfcnvrt^(0+128)
  2936     02C0  2B3B               	goto	l823
  2937     02C1                     l2015:
  2938                           
  2939                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1595:   if (*cp == '
      +                          n') {
  2940     02C1  0839               	movf	vfpfcnvrt@cp^(0+128),w
  2941     02C2  0084               	movwf	4
  2942     02C3  083A               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  2943     02C4  0085               	movwf	5
  2944     02C5  0012               	moviw fsr0++
  2945     02C6  3A6E               	xorlw	110
  2946     02C7  1D03               	btfss	3,2
  2947     02C8  2ACA               	goto	u1781
  2948     02C9  2ACB               	goto	u1780
  2949     02CA                     u1781:
  2950     02CA  2AE9               	goto	l2025
  2951     02CB                     u1780:
  2952     02CB                     l2017:
  2953                           
  2954                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1638:    *(*(int* *)
      +                          __va_arg(*(int* **)ap, (int*)0)) = (int) nout;
  2955     02CB  082C               	movf	vfpfcnvrt@ap^(0+128),w
  2956     02CC  0086               	movwf	6
  2957     02CD  0187               	clrf	7
  2958     02CE  3F40               	moviw [0]fsr1
  2959     02CF  0084               	movwf	4
  2960     02D0  0185               	clrf	5
  2961     02D1  0A81               	incf	1,f
  2962     02D2  0800               	movf	0,w
  2963     02D3  0086               	movwf	6
  2964     02D4  0187               	clrf	7
  2965     02D5  0859               	movf	_nout^(0+128),w
  2966     02D6  3FC0               	movwi [0]fsr1
  2967     02D7  085A               	movf	(_nout+1)^(0+128),w
  2968     02D8  3FC1               	movwi [1]fsr1
  2969     02D9                     l2019:
  2970                           
  2971                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1640:    *fmt = cp+1
      +                          ;
  2972     02D9  0839               	movf	vfpfcnvrt@cp^(0+128),w
  2973     02DA  3E01               	addlw	1
  2974     02DB  00AD               	movwf	??_vfpfcnvrt^(0+128)
  2975     02DC  3000               	movlw	0
  2976     02DD  3D3A               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  2977     02DE  00AE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  2978     02DF  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  2979     02E0  0086               	movwf	6
  2980     02E1  0187               	clrf	7
  2981     02E2  082D               	movf	??_vfpfcnvrt^(0+128),w
  2982     02E3  3FC0               	movwi [0]fsr1
  2983     02E4  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2984     02E5  3FC1               	movwi [1]fsr1
  2985     02E6                     l2021:
  2986                           
  2987                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1641:    return (int
      +                          ) 0;
  2988     02E6  01AB               	clrf	?_vfpfcnvrt^(0+128)
  2989     02E7  01AC               	clrf	(?_vfpfcnvrt+1)^(0+128)
  2990     02E8  2B3B               	goto	l823
  2991     02E9                     l2025:
  2992                           
  2993                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1798:         if ((*
      +                          fmt)[0] == '%') {
  2994     02E9  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  2995     02EA  0086               	movwf	6
  2996     02EB  0187               	clrf	7
  2997     02EC  3F40               	moviw [0]fsr1
  2998     02ED  00AD               	movwf	??_vfpfcnvrt^(0+128)
  2999     02EE  3F41               	moviw [1]fsr1
  3000     02EF  00AE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3001     02F0  082D               	movf	??_vfpfcnvrt^(0+128),w
  3002     02F1  0084               	movwf	4
  3003     02F2  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3004     02F3  0085               	movwf	5
  3005     02F4  0012               	moviw fsr0++
  3006     02F5  3A25               	xorlw	37
  3007     02F6  1D03               	btfss	3,2
  3008     02F7  2AF9               	goto	u1791
  3009     02F8  2AFA               	goto	u1790
  3010     02F9                     u1791:
  3011     02F9  2B11               	goto	l2035
  3012     02FA                     u1790:
  3013     02FA                     l2027:
  3014                           
  3015                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1799:             ++
      +                          *fmt;
  3016     02FA  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3017     02FB  0086               	movwf	6
  3018     02FC  0187               	clrf	7
  3019     02FD  3001               	movlw	1
  3020     02FE  0781               	addwf	1,f
  3021     02FF  3141               	addfsr 1,1
  3022     0300  1803               	skipnc
  3023     0301  0A81               	incf	1,f
  3024     0302                     l2029:
  3025                           
  3026                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1800:             fp
      +                          utc((int)'%', fp);
  3027     0302  3025               	movlw	37
  3028     0303  00A0               	movwf	fputc@c^(0+128)
  3029     0304  3000               	movlw	0
  3030     0305  00A1               	movwf	(fputc@c^(0+128)+1)
  3031     0306  0834               	movf	vfpfcnvrt@fp^(0+128),w
  3032     0307  00A2               	movwf	fputc@fp^(0+128)
  3033     0308  3185  2542  3181   	fcall	_fputc
  3034     030B                     l2031:
  3035                           
  3036                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1801:             re
      +                          turn (int) 1;
  3037     030B  3001               	movlw	1
  3038     030C  0021               	movlb	1	; select bank1
  3039     030D  00AB               	movwf	?_vfpfcnvrt^(0+128)
  3040     030E  3000               	movlw	0
  3041     030F  00AC               	movwf	(?_vfpfcnvrt^(0+128)+1)
  3042     0310  2B3B               	goto	l823
  3043     0311                     l2035:
  3044                           
  3045                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  3046     0311  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3047     0312  0086               	movwf	6
  3048     0313  0187               	clrf	7
  3049     0314  3001               	movlw	1
  3050     0315  0781               	addwf	1,f
  3051     0316  3141               	addfsr 1,1
  3052     0317  1803               	skipnc
  3053     0318  0A81               	incf	1,f
  3054     0319  2AE6               	goto	l2021
  3055     031A                     l2041:
  3056                           
  3057                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  3058     031A  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3059     031B  0086               	movwf	6
  3060     031C  0187               	clrf	7
  3061     031D  3F40               	moviw [0]fsr1
  3062     031E  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3063     031F  3F41               	moviw [1]fsr1
  3064     0320  00AE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3065     0321  082D               	movf	??_vfpfcnvrt^(0+128),w
  3066     0322  0084               	movwf	4
  3067     0323  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3068     0324  0085               	movwf	5
  3069     0325  0800               	movf	0,w	;code access
  3070     0326  00AF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3071     0327  01B0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3072     0328  082F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3073     0329  00A0               	movwf	fputc@c^(0+128)
  3074     032A  0830               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3075     032B  00A1               	movwf	(fputc@c+1)^(0+128)
  3076     032C  0834               	movf	vfpfcnvrt@fp^(0+128),w
  3077     032D  00A2               	movwf	fputc@fp^(0+128)
  3078     032E  3185  2542  3181   	fcall	_fputc
  3079     0331                     l2043:
  3080                           
  3081                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1812:     ++*fmt;
  3082     0331  0021               	movlb	1	; select bank1
  3083     0332  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3084     0333  0086               	movwf	6
  3085     0334  0187               	clrf	7
  3086     0335  3001               	movlw	1
  3087     0336  0781               	addwf	1,f
  3088     0337  3141               	addfsr 1,1
  3089     0338  1803               	skipnc
  3090     0339  0A81               	incf	1,f
  3091     033A  2B0B               	goto	l2031
  3092     033B                     l823:
  3093     033B  0008               	return
  3094     033C                     __end_of_vfpfcnvrt:
  3095                           
  3096                           	psect	text8
  3097     0542                     __ptext8:	
  3098 ;; *************** function _fputc *****************
  3099 ;; Defined at:
  3100 ;;		line 8 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputc.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  c               2    0[BANK1 ] int 
  3103 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  3104 ;;		 -> sprintf@f(11), 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  2    0[BANK1 ] int 
  3109 ;; Registers used:
  3110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3116 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3118 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3119 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3120 ;;Total ram usage:        8 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: unknown (due to recursion)
  3123 ;; This function calls:
  3124 ;;		_putch
  3125 ;; This function is called by:
  3126 ;;		_vfpfcnvrt
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130     0542                     _fputc:	
  3131                           ;psect for function _fputc
  3132                           
  3133     0542                     l1825:	
  3134                           ;incstack = 0
  3135                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3136                           
  3137     0542  0021               	movlb	1	; select bank1
  3138     0543  0822               	movf	fputc@fp^(0+128),w
  3139     0544  1903               	btfsc	3,2
  3140     0545  2D47               	goto	u1391
  3141     0546  2D48               	goto	u1390
  3142     0547                     u1391:
  3143     0547  2D4D               	goto	l1829
  3144     0548                     u1390:
  3145     0548                     l1827:
  3146     0548  0822               	movf	fputc@fp^(0+128),w
  3147     0549  1D03               	btfss	3,2
  3148     054A  2D4C               	goto	u1401
  3149     054B  2D4D               	goto	u1400
  3150     054C                     u1401:
  3151     054C  2D52               	goto	l1831
  3152     054D                     u1400:
  3153     054D                     l1829:
  3154     054D  0820               	movf	fputc@c^(0+128),w
  3155     054E  3180  2003  3185   	fcall	_putch
  3156     0551  2D97               	goto	l850
  3157     0552                     l1831:
  3158     0552  0822               	movf	fputc@fp^(0+128),w
  3159     0553  3E09               	addlw	9
  3160     0554  0086               	movwf	6
  3161     0555  0187               	clrf	7
  3162     0556  0016               	moviw fsr1++
  3163     0557  0401               	iorwf	1,w
  3164     0558  1903               	btfsc	3,2
  3165     0559  2D5B               	goto	u1411
  3166     055A  2D5C               	goto	u1410
  3167     055B                     u1411:
  3168     055B  2D7A               	goto	l1835
  3169     055C                     u1410:
  3170     055C                     l1833:
  3171     055C  0822               	movf	fputc@fp^(0+128),w
  3172     055D  3E09               	addlw	9
  3173     055E  0086               	movwf	6
  3174     055F  0187               	clrf	7
  3175     0560  3F40               	moviw [0]fsr1
  3176     0561  00A3               	movwf	??_fputc^(0+128)
  3177     0562  3F41               	moviw [1]fsr1
  3178     0563  00A4               	movwf	(??_fputc^(0+128)+1)
  3179     0564  0822               	movf	fputc@fp^(0+128),w
  3180     0565  3E02               	addlw	2
  3181     0566  0086               	movwf	6
  3182     0567  0187               	clrf	7
  3183     0568  3F40               	moviw [0]fsr1
  3184     0569  00A5               	movwf	(??_fputc+2)^(0+128)
  3185     056A  3F41               	moviw [1]fsr1
  3186     056B  00A6               	movwf	((??_fputc+2)^(0+128)+1)
  3187     056C  0826               	movf	(??_fputc+3)^(0+128),w
  3188     056D  3A80               	xorlw	128
  3189     056E  00A7               	movwf	(??_fputc+4)^(0+128)
  3190     056F  0824               	movf	(??_fputc+1)^(0+128),w
  3191     0570  3A80               	xorlw	128
  3192     0571  0227               	subwf	(??_fputc+4)^(0+128),w
  3193     0572  1D03               	skipz
  3194     0573  2D76               	goto	u1425
  3195     0574  0823               	movf	??_fputc^(0+128),w
  3196     0575  0225               	subwf	(??_fputc+2)^(0+128),w
  3197     0576                     u1425:
  3198     0576  1803               	skipnc
  3199     0577  2D79               	goto	u1421
  3200     0578  2D7A               	goto	u1420
  3201     0579                     u1421:
  3202     0579  2D97               	goto	l850
  3203     057A                     u1420:
  3204     057A                     l1835:
  3205     057A  0021               	movlb	1	; select bank1
  3206     057B  0822               	movf	fputc@fp^(0+128),w
  3207     057C  3E02               	addlw	2
  3208     057D  0086               	movwf	6
  3209     057E  0187               	clrf	7
  3210     057F  0822               	movf	fputc@fp^(0+128),w
  3211     0580  0084               	movwf	4
  3212     0581  0185               	clrf	5
  3213     0582  3F00               	moviw [0]fsr0
  3214     0583  00A3               	movwf	??_fputc^(0+128)
  3215     0584  3F01               	moviw [1]fsr0
  3216     0585  00A4               	movwf	(??_fputc^(0+128)+1)
  3217     0586  3F40               	moviw [0]fsr1
  3218     0587  0723               	addwf	??_fputc^(0+128),w
  3219     0588  0084               	movwf	4
  3220     0589  3F41               	moviw [1]fsr1
  3221     058A  3D24               	addwfc	(??_fputc+1)^(0+128),w
  3222     058B  0085               	movwf	5
  3223     058C  0820               	movf	fputc@c^(0+128),w
  3224     058D  0080               	movwf	0
  3225     058E                     l1837:
  3226     058E  0822               	movf	fputc@fp^(0+128),w
  3227     058F  3E02               	addlw	2
  3228     0590  0086               	movwf	6
  3229     0591  0187               	clrf	7
  3230     0592  3001               	movlw	1
  3231     0593  0781               	addwf	1,f
  3232     0594  3141               	addfsr 1,1
  3233     0595  1803               	skipnc
  3234     0596  0A81               	incf	1,f
  3235     0597                     l850:
  3236     0597  0008               	return
  3237     0598                     __end_of_fputc:
  3238                           
  3239                           	psect	text9
  3240     0003                     __ptext9:	
  3241 ;; *************** function _putch *****************
  3242 ;; Defined at:
  3243 ;;		line 7 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/putch.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  c               1    wreg     unsigned char 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  c               1    0[COMMON] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3261 ;;Total ram usage:        0 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: unknown (due to recursion)
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_fputc
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271     0003                     _putch:	
  3272                           ;psect for function _putch
  3273                           
  3274     0003                     l861:	
  3275                           ;incstack = 0
  3276                           ; Regs used in _putch: [wreg]
  3277                           
  3278     0003  0008               	return
  3279     0004                     __end_of_putch:
  3280                           
  3281                           	psect	text10
  3282     0E12                     __ptext10:	
  3283 ;; *************** function _abs *****************
  3284 ;; Defined at:
  3285 ;;		line 1 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/abs.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  a               2    7[BANK1 ] int 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  2    7[BANK1 ] int 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3299 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3301 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3302 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3303 ;;Total ram usage:        4 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; Hardware stack levels required when called: unknown (due to recursion)
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_vfpfcnvrt
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313     0E12                     _abs:	
  3314                           ;psect for function _abs
  3315                           
  3316     0E12                     l1841:	
  3317                           ;incstack = 0
  3318                           ; Regs used in _abs: [wreg+status,2+status,0]
  3319                           
  3320     0E12  0021               	movlb	1	; select bank1
  3321     0E13  1BA8               	btfsc	(abs@a+1)^(0+128),7
  3322     0E14  2E16               	goto	u1431
  3323     0E15  2E17               	goto	u1430
  3324     0E16                     u1431:
  3325     0E16  2E18               	goto	l1845
  3326     0E17                     u1430:
  3327     0E17                     l1843:
  3328     0E17  2E23               	goto	l838
  3329     0E18                     l1845:
  3330     0E18  0927               	comf	abs@a^(0+128),w
  3331     0E19  00A9               	movwf	??_abs^(0+128)
  3332     0E1A  0928               	comf	(abs@a+1)^(0+128),w
  3333     0E1B  00AA               	movwf	(??_abs^(0+128)+1)
  3334     0E1C  0AA9               	incf	??_abs^(0+128),f
  3335     0E1D  1903               	skipnz
  3336     0E1E  0AAA               	incf	(??_abs^(0+128)+1),f
  3337     0E1F  0829               	movf	??_abs^(0+128),w
  3338     0E20  00A7               	movwf	?_abs^(0+128)
  3339     0E21  082A               	movf	(??_abs+1)^(0+128),w
  3340     0E22  00A8               	movwf	(?_abs+1)^(0+128)
  3341     0E23                     l838:
  3342     0E23  0008               	return
  3343     0E24                     __end_of_abs:
  3344                           
  3345                           	psect	text11
  3346     0EE9                     __ptext11:	
  3347 ;; *************** function _LCD_WriteString *****************
  3348 ;; Defined at:
  3349 ;;		line 73 in file "../Ressources/lcd.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  data            1    wreg     PTR const unsigned char 
  3352 ;;		 -> String(3), 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  data            1    6[BANK1 ] PTR const unsigned char 
  3355 ;;		 -> String(3), 
  3356 ;;  i               1    5[BANK1 ] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3367 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3368 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3369 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3370 ;;Total ram usage:        3 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: unknown (due to recursion)
  3373 ;; This function calls:
  3374 ;;		_LCD_WriteByte
  3375 ;; This function is called by:
  3376 ;;		_lcd
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380     0EE9                     _LCD_WriteString:	
  3381                           ;psect for function _LCD_WriteString
  3382                           
  3383                           
  3384                           ;incstack = 0
  3385                           ; Regs used in _LCD_WriteString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3386                           ;LCD_WriteString@data stored from wreg
  3387     0EE9  0021               	movlb	1	; select bank1
  3388     0EEA  00A6               	movwf	LCD_WriteString@data^(0+128)
  3389     0EEB                     l2205:
  3390                           
  3391                           ;../Ressources/lcd.c: 74:     char i = 0;
  3392     0EEB  01A5               	clrf	LCD_WriteString@i^(0+128)
  3393                           
  3394                           ;../Ressources/lcd.c: 75:     while (data[i]) {
  3395     0EEC  2EFC               	goto	l2211
  3396     0EED                     l2207:
  3397                           
  3398                           ;../Ressources/lcd.c: 76:         LCD_WriteByte(data[i++]);
  3399     0EED  0825               	movf	LCD_WriteString@i^(0+128),w
  3400     0EEE  0726               	addwf	LCD_WriteString@data^(0+128),w
  3401     0EEF  00A4               	movwf	??_LCD_WriteString^(0+128)
  3402     0EF0  0824               	movf	??_LCD_WriteString^(0+128),w
  3403     0EF1  0086               	movwf	6
  3404     0EF2  0187               	clrf	7
  3405     0EF3  0801               	movf	1,w
  3406     0EF4  318E  2678  318E   	fcall	_LCD_WriteByte
  3407     0EF7                     l2209:
  3408     0EF7  3001               	movlw	1
  3409     0EF8  0021               	movlb	1	; select bank1
  3410     0EF9  00A4               	movwf	??_LCD_WriteString^(0+128)
  3411     0EFA  0824               	movf	??_LCD_WriteString^(0+128),w
  3412     0EFB  07A5               	addwf	LCD_WriteString@i^(0+128),f
  3413     0EFC                     l2211:
  3414                           
  3415                           ;../Ressources/lcd.c: 75:     while (data[i]) {
  3416     0EFC  0825               	movf	LCD_WriteString@i^(0+128),w
  3417     0EFD  0726               	addwf	LCD_WriteString@data^(0+128),w
  3418     0EFE  00A4               	movwf	??_LCD_WriteString^(0+128)
  3419     0EFF  0824               	movf	??_LCD_WriteString^(0+128),w
  3420     0F00  0086               	movwf	6
  3421     0F01  0187               	clrf	7
  3422     0F02  0801               	movf	1,w
  3423     0F03  1D03               	btfss	3,2
  3424     0F04  2F06               	goto	u1981
  3425     0F05  2F07               	goto	u1980
  3426     0F06                     u1981:
  3427     0F06  2EED               	goto	l2207
  3428     0F07                     u1980:
  3429     0F07                     l33:
  3430     0F07  0008               	return
  3431     0F08                     __end_of_LCD_WriteString:
  3432                           
  3433                           	psect	text12
  3434     0E78                     __ptext12:	
  3435 ;; *************** function _LCD_WriteByte *****************
  3436 ;; Defined at:
  3437 ;;		line 67 in file "../Ressources/lcd.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  data            1    wreg     unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  data            1    3[BANK1 ] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3452 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3454 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3455 ;;Total ram usage:        1 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: unknown (due to recursion)
  3458 ;; This function calls:
  3459 ;;		_LCD_WriteIOExpander
  3460 ;; This function is called by:
  3461 ;;		_LCD_WriteString
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465     0E78                     _LCD_WriteByte:	
  3466                           ;psect for function _LCD_WriteByte
  3467                           
  3468                           
  3469                           ;incstack = 0
  3470                           ; Regs used in _LCD_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  3471                           ;LCD_WriteByte@data stored from wreg
  3472     0E78  0021               	movlb	1	; select bank1
  3473     0E79  00A3               	movwf	LCD_WriteByte@data^(0+128)
  3474     0E7A                     l2137:
  3475                           
  3476                           ;../Ressources/lcd.c: 68:     LCD_WriteIOExpander(0x12, 0xE0);
  3477     0E7A  30E0               	movlw	224
  3478     0E7B  00A1               	movwf	LCD_WriteIOExpander@data^(0+128)
  3479     0E7C  3012               	movlw	18
  3480     0E7D  318E  264C  318E   	fcall	_LCD_WriteIOExpander
  3481                           
  3482                           ;../Ressources/lcd.c: 69:     LCD_WriteIOExpander(0x13, data);
  3483     0E80  0021               	movlb	1	; select bank1
  3484     0E81  0823               	movf	LCD_WriteByte@data^(0+128),w
  3485     0E82  00A1               	movwf	LCD_WriteIOExpander@data^(0+128)
  3486     0E83  3013               	movlw	19
  3487     0E84  318E  264C  318E   	fcall	_LCD_WriteIOExpander
  3488                           
  3489                           ;../Ressources/lcd.c: 70:     LCD_WriteIOExpander(0x12, 0xA0);
  3490     0E87  30A0               	movlw	160
  3491     0E88  0021               	movlb	1	; select bank1
  3492     0E89  00A1               	movwf	LCD_WriteIOExpander@data^(0+128)
  3493     0E8A  3012               	movlw	18
  3494     0E8B  318E  264C  318E   	fcall	_LCD_WriteIOExpander
  3495     0E8E                     l27:
  3496     0E8E  0008               	return
  3497     0E8F                     __end_of_LCD_WriteByte:
  3498                           
  3499                           	psect	text13
  3500     07F5                     __ptext13:	
  3501 ;; *************** function _LCD_Clear *****************
  3502 ;; Defined at:
  3503 ;;		line 87 in file "../Ressources/lcd.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, status,2, status,0, pclath, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3521 ;;Total ram usage:        0 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: unknown (due to recursion)
  3524 ;; This function calls:
  3525 ;;		_LCD_GoTo
  3526 ;;		_LCD_WriteCommand
  3527 ;; This function is called by:
  3528 ;;		_lcd
  3529 ;;		_main
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533     07F5                     _LCD_Clear:	
  3534                           ;psect for function _LCD_Clear
  3535                           
  3536     07F5                     l2213:	
  3537                           ;incstack = 0
  3538                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3539                           
  3540                           
  3541                           ;../Ressources/lcd.c: 88:     LCD_WriteCommand(0x01);
  3542     07F5  3001               	movlw	1
  3543     07F6  318E  2661  3187   	fcall	_LCD_WriteCommand
  3544                           
  3545                           ;../Ressources/lcd.c: 89:     LCD_GoTo(0, 0);
  3546     07F9  0021               	movlb	1	; select bank1
  3547     07FA  01A4               	clrf	LCD_GoTo@column^(0+128)
  3548     07FB  3000               	movlw	0
  3549     07FC  318E  26CA  3187   	fcall	_LCD_GoTo
  3550     07FF                     l44:
  3551     07FF  0008               	return
  3552     0800                     __end_of_LCD_Clear:
  3553                           
  3554                           	psect	text14
  3555     0ECA                     __ptext14:	
  3556 ;; *************** function _LCD_GoTo *****************
  3557 ;; Defined at:
  3558 ;;		line 80 in file "../Ressources/lcd.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  row             1    wreg     unsigned char 
  3561 ;;  column          1    4[BANK1 ] unsigned char 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  row             1    8[BANK1 ] unsigned char 
  3564 ;;  pos             1    7[BANK1 ] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, pclath, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3574 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3575 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3577 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3578 ;;Total ram usage:        5 bytes
  3579 ;; Hardware stack levels used: 1
  3580 ;; Hardware stack levels required when called: unknown (due to recursion)
  3581 ;; This function calls:
  3582 ;;		_LCD_WriteCommand
  3583 ;; This function is called by:
  3584 ;;		_LCD_Clear
  3585 ;;		_lcd
  3586 ;;		_main
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590     0ECA                     _LCD_GoTo:	
  3591                           ;psect for function _LCD_GoTo
  3592                           
  3593                           
  3594                           ;incstack = 0
  3595                           ; Regs used in _LCD_GoTo: [wreg+status,2+status,0+pclath+cstack]
  3596                           ;LCD_GoTo@row stored from wreg
  3597     0ECA  0021               	movlb	1	; select bank1
  3598     0ECB  00A8               	movwf	LCD_GoTo@row^(0+128)
  3599     0ECC                     l2139:
  3600                           
  3601                           ;../Ressources/lcd.c: 81:     if (row < 2) {
  3602     0ECC  3002               	movlw	2
  3603     0ECD  0228               	subwf	LCD_GoTo@row^(0+128),w
  3604     0ECE  1803               	skipnc
  3605     0ECF  2ED1               	goto	u1921
  3606     0ED0  2ED2               	goto	u1920
  3607     0ED1                     u1921:
  3608     0ED1  2EE8               	goto	l41
  3609     0ED2                     u1920:
  3610     0ED2                     l2141:
  3611                           
  3612                           ;../Ressources/lcd.c: 82:         char pos = (row == 0) ? (0x80 | column) : (0xC0 | colu
      +                          mn);
  3613     0ED2  0828               	movf	LCD_GoTo@row^(0+128),w
  3614     0ED3  1903               	btfsc	3,2
  3615     0ED4  2ED6               	goto	u1931
  3616     0ED5  2ED7               	goto	u1930
  3617     0ED6                     u1931:
  3618     0ED6  2EDD               	goto	l2145
  3619     0ED7                     u1930:
  3620     0ED7                     l2143:
  3621     0ED7  30C0               	movlw	192
  3622     0ED8  0424               	iorwf	LCD_GoTo@column^(0+128),w
  3623     0ED9  00A5               	movwf	_LCD_GoTo$119^(0+128)
  3624     0EDA  3000               	movlw	0
  3625     0EDB  00A6               	movwf	(_LCD_GoTo$119+1)^(0+128)
  3626     0EDC  2EE2               	goto	l40
  3627     0EDD                     l2145:
  3628     0EDD  3080               	movlw	128
  3629     0EDE  0424               	iorwf	LCD_GoTo@column^(0+128),w
  3630     0EDF  00A5               	movwf	_LCD_GoTo$119^(0+128)
  3631     0EE0  3000               	movlw	0
  3632     0EE1  00A6               	movwf	(_LCD_GoTo$119+1)^(0+128)
  3633     0EE2                     l40:
  3634     0EE2  0825               	movf	_LCD_GoTo$119^(0+128),w
  3635     0EE3  00A7               	movwf	LCD_GoTo@pos^(0+128)
  3636     0EE4                     l2147:
  3637                           
  3638                           ;../Ressources/lcd.c: 83:         LCD_WriteCommand(pos);
  3639     0EE4  0827               	movf	LCD_GoTo@pos^(0+128),w
  3640     0EE5  318E  2661  318E   	fcall	_LCD_WriteCommand
  3641     0EE8                     l41:
  3642     0EE8  0008               	return
  3643     0EE9                     __end_of_LCD_GoTo:
  3644                           
  3645                           	psect	text15
  3646     0D9B                     __ptext15:	
  3647 ;; *************** function _init_pot *****************
  3648 ;; Defined at:
  3649 ;;		line 70 in file "main.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;		None
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		None
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3667 ;;Total ram usage:        0 bytes
  3668 ;; Hardware stack levels used: 1
  3669 ;; Hardware stack levels required when called: unknown (due to recursion)
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		_main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677     0D9B                     _init_pot:	
  3678                           ;psect for function _init_pot
  3679                           
  3680     0D9B                     l2391:	
  3681                           ;incstack = 0
  3682                           ; Regs used in _init_pot: []
  3683                           
  3684                           
  3685                           ;main.c: 71:     ANSELAbits.ANSA0 = 1;
  3686     0D9B  0023               	movlb	3	; select bank3
  3687     0D9C  140C               	bsf	12,0	;volatile
  3688                           
  3689                           ;main.c: 72:     ANSELAbits.ANSA0 = 0;
  3690     0D9D  100C               	bcf	12,0	;volatile
  3691     0D9E                     l125:
  3692     0D9E  0008               	return
  3693     0D9F                     __end_of_init_pot:
  3694                           
  3695                           	psect	text16
  3696     0DC5                     __ptext16:	
  3697 ;; *************** function _init_adc *****************
  3698 ;; Defined at:
  3699 ;;		line 75 in file "main.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3717 ;;Total ram usage:        0 bytes
  3718 ;; Hardware stack levels used: 1
  3719 ;; Hardware stack levels required when called: unknown (due to recursion)
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_main
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727     0DC5                     _init_adc:	
  3728                           ;psect for function _init_adc
  3729                           
  3730     0DC5                     l2393:	
  3731                           ;incstack = 0
  3732                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  3733                           
  3734                           
  3735                           ;main.c: 76:     ADCON0bits.ADON = 1;
  3736     0DC5  0021               	movlb	1	; select bank1
  3737     0DC6  141D               	bsf	29,0	;volatile
  3738     0DC7                     l2395:
  3739                           
  3740                           ;main.c: 77:     ADCON1bits.ADCS = 0b00;
  3741     0DC7  308F               	movlw	-113
  3742     0DC8  059E               	andwf	30,f	;volatile
  3743                           
  3744                           ;main.c: 78:     ADCON1bits.ADPREF = 0b00;
  3745     0DC9  30FC               	movlw	-4
  3746     0DCA  059E               	andwf	30,f	;volatile
  3747     0DCB                     l2397:
  3748                           
  3749                           ;main.c: 79:     ADCON1bits.ADNREF = 0;
  3750     0DCB  111E               	bcf	30,2	;volatile
  3751     0DCC                     l2399:
  3752                           
  3753                           ;main.c: 80:     ADCON1bits.ADFM = 1;
  3754     0DCC  179E               	bsf	30,7	;volatile
  3755                           
  3756                           ;main.c: 81:     ADCON0bits.CHS = 0;
  3757     0DCD  3083               	movlw	-125
  3758     0DCE  059D               	andwf	29,f	;volatile
  3759     0DCF                     l128:
  3760     0DCF  0008               	return
  3761     0DD0                     __end_of_init_adc:
  3762                           
  3763                           	psect	text17
  3764     07C8                     __ptext17:	
  3765 ;; *************** function _init *****************
  3766 ;; Defined at:
  3767 ;;		line 25 in file "main.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2, status,0, pclath, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: unknown (due to recursion)
  3788 ;; This function calls:
  3789 ;;		_LCD_Initialize
  3790 ;;		_LCD_InitializePins
  3791 ;;		_SPI_Initialize
  3792 ;;		_SPI_InitializePins
  3793 ;; This function is called by:
  3794 ;;		_main
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798     07C8                     _init:	
  3799                           ;psect for function _init
  3800                           
  3801     07C8                     l2347:	
  3802                           ;incstack = 0
  3803                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  3804                           
  3805                           
  3806                           ;main.c: 27:     RC6PPSbits.RC6PPS = 0x14;
  3807     07C8  003D               	movlb	29	; select bank29
  3808     07C9  0826               	movf	38,w	;volatile
  3809     07CA  39E0               	andlw	-32
  3810     07CB  3814               	iorlw	20
  3811     07CC  00A6               	movwf	38	;volatile
  3812                           
  3813                           ;main.c: 28:     RXPPSbits.RXPPS = 0x17;
  3814     07CD  003C               	movlb	28	; select bank28
  3815     07CE  0824               	movf	36,w	;volatile
  3816     07CF  39E0               	andlw	-32
  3817     07D0  3817               	iorlw	23
  3818     07D1  00A4               	movwf	36	;volatile
  3819     07D2                     l2349:
  3820                           
  3821                           ;main.c: 31:     TRISCbits.TRISC6 = 0;
  3822     07D2  0021               	movlb	1	; select bank1
  3823     07D3  130E               	bcf	14,6	;volatile
  3824     07D4                     l2351:
  3825                           
  3826                           ;main.c: 32:     TRISCbits.TRISC7 = 1;
  3827     07D4  178E               	bsf	14,7	;volatile
  3828     07D5                     l2353:
  3829                           
  3830                           ;main.c: 33:     ANSELCbits.ANSC7 = 0;
  3831     07D5  0023               	movlb	3	; select bank3
  3832     07D6  138E               	bcf	14,7	;volatile
  3833     07D7                     l2355:
  3834                           
  3835                           ;main.c: 36:     TRISBbits.TRISB0 = 1;
  3836     07D7  0021               	movlb	1	; select bank1
  3837     07D8  140D               	bsf	13,0	;volatile
  3838     07D9                     l2357:
  3839                           
  3840                           ;main.c: 37:     ANSELBbits.ANSB0 = 0;
  3841     07D9  0023               	movlb	3	; select bank3
  3842     07DA  100D               	bcf	13,0	;volatile
  3843     07DB                     l2359:
  3844                           
  3845                           ;main.c: 40:     TX1STAbits.SYNC = 0;
  3846     07DB  121E               	bcf	30,4	;volatile
  3847     07DC                     l2361:
  3848                           
  3849                           ;main.c: 41:     TX1STAbits.BRGH = 0;
  3850     07DC  111E               	bcf	30,2	;volatile
  3851     07DD                     l2363:
  3852                           
  3853                           ;main.c: 42:     BAUD1CONbits.BRG16 = 0;
  3854     07DD  119F               	bcf	31,3	;volatile
  3855     07DE                     l2365:
  3856                           
  3857                           ;main.c: 43:     SP1BRGHbits.SP1BRGH = 0;
  3858     07DE  019C               	clrf	28	;volatile
  3859     07DF                     l2367:
  3860                           
  3861                           ;main.c: 44:     SP1BRGLbits.SP1BRGL = 0x0C;
  3862     07DF  300C               	movlw	12
  3863     07E0  009B               	movwf	27	;volatile
  3864     07E1                     l2369:
  3865                           
  3866                           ;main.c: 47:     RC1STAbits.SPEN = 1;
  3867     07E1  179D               	bsf	29,7	;volatile
  3868     07E2                     l2371:
  3869                           
  3870                           ;main.c: 48:     TX1STAbits.TXEN = 1;
  3871     07E2  169E               	bsf	30,5	;volatile
  3872     07E3                     l2373:
  3873                           
  3874                           ;main.c: 49:     RC1STAbits.CREN = 1;
  3875     07E3  161D               	bsf	29,4	;volatile
  3876     07E4                     l2375:
  3877                           
  3878                           ;main.c: 52:     INTCONbits.GIE = 1;
  3879     07E4  178B               	bsf	11,7	;volatile
  3880     07E5                     l2377:
  3881                           
  3882                           ;main.c: 53:     INTCONbits.PEIE = 1;
  3883     07E5  170B               	bsf	11,6	;volatile
  3884     07E6                     l2379:
  3885                           
  3886                           ;main.c: 54:     PIE1bits.RCIE = 1;
  3887     07E6  0021               	movlb	1	; select bank1
  3888     07E7  1691               	bsf	17,5	;volatile
  3889     07E8                     l2381:
  3890                           
  3891                           ;main.c: 57:     SPI_InitializePins();
  3892     07E8  318F  2728  3187   	fcall	_SPI_InitializePins
  3893     07EB                     l2383:
  3894                           
  3895                           ;main.c: 58:     LCD_InitializePins();
  3896     07EB  318D  25A3  3187   	fcall	_LCD_InitializePins
  3897     07EE                     l2385:
  3898                           
  3899                           ;main.c: 59:     SPI_Initialize();
  3900     07EE  318D  25B4  3187   	fcall	_SPI_Initialize
  3901     07F1                     l2387:
  3902                           
  3903                           ;main.c: 60:     LCD_Initialize();
  3904     07F1  3184  2421  3187   	fcall	_LCD_Initialize
  3905     07F4                     l119:
  3906     07F4  0008               	return
  3907     07F5                     __end_of_init:
  3908                           
  3909                           	psect	text18
  3910     0F28                     __ptext18:	
  3911 ;; *************** function _SPI_InitializePins *****************
  3912 ;; Defined at:
  3913 ;;		line 40 in file "../Ressources/spi.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3931 ;;Total ram usage:        0 bytes
  3932 ;; Hardware stack levels used: 1
  3933 ;; Hardware stack levels required when called: unknown (due to recursion)
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_init
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941     0F28                     _SPI_InitializePins:	
  3942                           ;psect for function _SPI_InitializePins
  3943                           
  3944     0F28                     l2215:	
  3945                           ;incstack = 0
  3946                           ; Regs used in _SPI_InitializePins: [wreg+status,2+status,0]
  3947                           
  3948                           
  3949                           ;../Ressources/spi.c: 42:     LATCbits.LATC3 = 0;
  3950     0F28  0022               	movlb	2	; select bank2
  3951     0F29  118E               	bcf	14,3	;volatile
  3952                           
  3953                           ;../Ressources/spi.c: 43:     TRISCbits.TRISC3 = 0;
  3954     0F2A  0021               	movlb	1	; select bank1
  3955     0F2B  118E               	bcf	14,3	;volatile
  3956                           
  3957                           ;../Ressources/spi.c: 46:     LATCbits.LATC4 = 0;
  3958     0F2C  0022               	movlb	2	; select bank2
  3959     0F2D  120E               	bcf	14,4	;volatile
  3960                           
  3961                           ;../Ressources/spi.c: 47:     TRISCbits.TRISC4 = 1;
  3962     0F2E  0021               	movlb	1	; select bank1
  3963     0F2F  160E               	bsf	14,4	;volatile
  3964                           
  3965                           ;../Ressources/spi.c: 50:     LATCbits.LATC5 = 0;
  3966     0F30  0022               	movlb	2	; select bank2
  3967     0F31  128E               	bcf	14,5	;volatile
  3968                           
  3969                           ;../Ressources/spi.c: 51:     TRISCbits.TRISC5 = 0;
  3970     0F32  0021               	movlb	1	; select bank1
  3971     0F33  128E               	bcf	14,5	;volatile
  3972     0F34                     l2217:
  3973                           
  3974                           ;../Ressources/spi.c: 53:     SSPDATPPSbits.SSPDATPPS = 0x14;
  3975     0F34  003C               	movlb	28	; select bank28
  3976     0F35  0821               	movf	33,w	;volatile
  3977     0F36  39E0               	andlw	-32
  3978     0F37  3814               	iorlw	20
  3979     0F38  00A1               	movwf	33	;volatile
  3980                           
  3981                           ;../Ressources/spi.c: 54:     RC3PPSbits.RC3PPS = 0x10;
  3982     0F39  003D               	movlb	29	; select bank29
  3983     0F3A  0823               	movf	35,w	;volatile
  3984     0F3B  39E0               	andlw	-32
  3985     0F3C  3810               	iorlw	16
  3986     0F3D  00A3               	movwf	35	;volatile
  3987                           
  3988                           ;../Ressources/spi.c: 55:     SSPCLKPPSbits.SSPCLKPPS = 0x13;
  3989     0F3E  003C               	movlb	28	; select bank28
  3990     0F3F  0820               	movf	32,w	;volatile
  3991     0F40  39E0               	andlw	-32
  3992     0F41  3813               	iorlw	19
  3993     0F42  00A0               	movwf	32	;volatile
  3994                           
  3995                           ;../Ressources/spi.c: 56:     RC5PPSbits.RC5PPS = 0x11;
  3996     0F43  003D               	movlb	29	; select bank29
  3997     0F44  0825               	movf	37,w	;volatile
  3998     0F45  39E0               	andlw	-32
  3999     0F46  3811               	iorlw	17
  4000     0F47  00A5               	movwf	37	;volatile
  4001     0F48                     l217:
  4002     0F48  0008               	return
  4003     0F49                     __end_of_SPI_InitializePins:
  4004                           
  4005                           	psect	text19
  4006     0DB4                     __ptext19:	
  4007 ;; *************** function _SPI_Initialize *****************
  4008 ;; Defined at:
  4009 ;;		line 59 in file "../Ressources/spi.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4027 ;;Total ram usage:        0 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; Hardware stack levels required when called: unknown (due to recursion)
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_init
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037     0DB4                     _SPI_Initialize:	
  4038                           ;psect for function _SPI_Initialize
  4039                           
  4040     0DB4                     l2219:	
  4041                           ;incstack = 0
  4042                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  4043                           
  4044                           
  4045                           ;../Ressources/spi.c: 61:     SSP1STAT = 0x40;
  4046     0DB4  3040               	movlw	64
  4047     0DB5  0024               	movlb	4	; select bank4
  4048     0DB6  0094               	movwf	20	;volatile
  4049                           
  4050                           ;../Ressources/spi.c: 62:     SSP1CON1 = 0x22;
  4051     0DB7  3022               	movlw	34
  4052     0DB8  0095               	movwf	21	;volatile
  4053     0DB9                     l2221:
  4054                           
  4055                           ;../Ressources/spi.c: 63:     SSP1ADD = 0x00;
  4056     0DB9  0192               	clrf	18	;volatile
  4057     0DBA                     l220:
  4058     0DBA  0008               	return
  4059     0DBB                     __end_of_SPI_Initialize:
  4060                           
  4061                           	psect	text20
  4062     0DA3                     __ptext20:	
  4063 ;; *************** function _LCD_InitializePins *****************
  4064 ;; Defined at:
  4065 ;;		line 31 in file "../Ressources/lcd.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		None
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4083 ;;Total ram usage:        0 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; Hardware stack levels required when called: unknown (due to recursion)
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_init
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093     0DA3                     _LCD_InitializePins:	
  4094                           ;psect for function _LCD_InitializePins
  4095                           
  4096     0DA3                     l2185:	
  4097                           ;incstack = 0
  4098                           ; Regs used in _LCD_InitializePins: []
  4099                           
  4100                           
  4101                           ;../Ressources/lcd.c: 32:     LATAbits.LATA2 = 1;
  4102     0DA3  0022               	movlb	2	; select bank2
  4103     0DA4  150C               	bsf	12,2	;volatile
  4104                           
  4105                           ;../Ressources/lcd.c: 33:     TRISAbits.TRISA2 = 0;
  4106     0DA5  0021               	movlb	1	; select bank1
  4107     0DA6  110C               	bcf	12,2	;volatile
  4108     0DA7                     l15:
  4109     0DA7  0008               	return
  4110     0DA8                     __end_of_LCD_InitializePins:
  4111                           
  4112                           	psect	text21
  4113     0421                     __ptext21:	
  4114 ;; *************** function _LCD_Initialize *****************
  4115 ;; Defined at:
  4116 ;;		line 36 in file "../Ressources/lcd.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2, status,0, pclath, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4132 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4133 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4134 ;;Total ram usage:        2 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: unknown (due to recursion)
  4137 ;; This function calls:
  4138 ;;		_LCD_WriteCommand
  4139 ;;		_LCD_WriteIOExpander
  4140 ;; This function is called by:
  4141 ;;		_init
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145     0421                     _LCD_Initialize:	
  4146                           ;psect for function _LCD_Initialize
  4147                           
  4148     0421                     l2187:	
  4149                           ;incstack = 0
  4150                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4151                           
  4152                           
  4153                           ;../Ressources/lcd.c: 37:     LCD_WriteIOExpander(0x00, 0x00);
  4154     0421  0021               	movlb	1	; select bank1
  4155     0422  01A1               	clrf	LCD_WriteIOExpander@data^(0+128)
  4156     0423  3000               	movlw	0
  4157     0424  318E  264C  3184   	fcall	_LCD_WriteIOExpander
  4158                           
  4159                           ;../Ressources/lcd.c: 38:     LCD_WriteIOExpander(0x01, 0x00);
  4160     0427  0021               	movlb	1	; select bank1
  4161     0428  01A1               	clrf	LCD_WriteIOExpander@data^(0+128)
  4162     0429  3001               	movlw	1
  4163     042A  318E  264C  3184   	fcall	_LCD_WriteIOExpander
  4164                           
  4165                           ;../Ressources/lcd.c: 39:     LCD_WriteIOExpander(0x12, 0x20);
  4166     042D  3020               	movlw	32
  4167     042E  0021               	movlb	1	; select bank1
  4168     042F  00A1               	movwf	LCD_WriteIOExpander@data^(0+128)
  4169     0430  3012               	movlw	18
  4170     0431  318E  264C  3184   	fcall	_LCD_WriteIOExpander
  4171     0434                     l2189:
  4172                           
  4173                           ;../Ressources/lcd.c: 40:     _delay((unsigned long)((10)*(8000000/4000.0)));
  4174     0434  301A               	movlw	26
  4175     0435  0021               	movlb	1	; select bank1
  4176     0436  00A4               	movwf	??_LCD_Initialize^(0+128)
  4177     0437  30F8               	movlw	248
  4178     0438                     u2377:
  4179     0438  0B89               	decfsz	9,f
  4180     0439  2C38               	goto	u2377
  4181     043A  0BA4               	decfsz	??_LCD_Initialize^(0+128),f
  4182     043B  2C38               	goto	u2377
  4183     043C  0000               	nop
  4184     043D                     l2191:
  4185                           
  4186                           ;../Ressources/lcd.c: 41:     LCD_WriteCommand(0x3C);
  4187     043D  303C               	movlw	60
  4188     043E  318E  2661  3184   	fcall	_LCD_WriteCommand
  4189                           
  4190                           ;../Ressources/lcd.c: 42:     _delay((unsigned long)((10)*(8000000/4000.0)));
  4191     0441  301A               	movlw	26
  4192     0442  0021               	movlb	1	; select bank1
  4193     0443  00A4               	movwf	??_LCD_Initialize^(0+128)
  4194     0444  30F8               	movlw	248
  4195     0445                     u2387:
  4196     0445  0B89               	decfsz	9,f
  4197     0446  2C45               	goto	u2387
  4198     0447  0BA4               	decfsz	??_LCD_Initialize^(0+128),f
  4199     0448  2C45               	goto	u2387
  4200     0449  0000               	nop
  4201     044A                     l2193:
  4202                           
  4203                           ;../Ressources/lcd.c: 43:     LCD_WriteCommand(0x0C);
  4204     044A  300C               	movlw	12
  4205     044B  318E  2661  3184   	fcall	_LCD_WriteCommand
  4206     044E                     l2195:
  4207                           
  4208                           ;../Ressources/lcd.c: 44:     _delay((unsigned long)((10)*(8000000/4000.0)));
  4209     044E  301A               	movlw	26
  4210     044F  0021               	movlb	1	; select bank1
  4211     0450  00A4               	movwf	??_LCD_Initialize^(0+128)
  4212     0451  30F8               	movlw	248
  4213     0452                     u2397:
  4214     0452  0B89               	decfsz	9,f
  4215     0453  2C52               	goto	u2397
  4216     0454  0BA4               	decfsz	??_LCD_Initialize^(0+128),f
  4217     0455  2C52               	goto	u2397
  4218     0456  0000               	nop
  4219                           
  4220                           ;../Ressources/lcd.c: 45:     LCD_WriteCommand(0x01);
  4221     0457  3001               	movlw	1
  4222     0458  318E  2661  3184   	fcall	_LCD_WriteCommand
  4223     045B                     l2197:
  4224                           
  4225                           ;../Ressources/lcd.c: 46:     _delay((unsigned long)((10)*(8000000/4000.0)));
  4226     045B  301A               	movlw	26
  4227     045C  0021               	movlb	1	; select bank1
  4228     045D  00A4               	movwf	??_LCD_Initialize^(0+128)
  4229     045E  30F8               	movlw	248
  4230     045F                     u2407:
  4231     045F  0B89               	decfsz	9,f
  4232     0460  2C5F               	goto	u2407
  4233     0461  0BA4               	decfsz	??_LCD_Initialize^(0+128),f
  4234     0462  2C5F               	goto	u2407
  4235     0463  0000               	nop
  4236     0464                     l2199:
  4237                           
  4238                           ;../Ressources/lcd.c: 47:     LCD_WriteCommand(0x0C);
  4239     0464  300C               	movlw	12
  4240     0465  318E  2661  3184   	fcall	_LCD_WriteCommand
  4241                           
  4242                           ;../Ressources/lcd.c: 48:     _delay((unsigned long)((130)*(8000000/4000.0)));
  4243     0468  3002               	movlw	2
  4244     0469  0021               	movlb	1	; select bank1
  4245     046A  00A5               	movwf	(??_LCD_Initialize^(0+128)+1)
  4246     046B  3052               	movlw	82
  4247     046C  00A4               	movwf	??_LCD_Initialize^(0+128)
  4248     046D  30A6               	movlw	166
  4249     046E                     u2417:
  4250     046E  0B89               	decfsz	9,f
  4251     046F  2C6E               	goto	u2417
  4252     0470  0BA4               	decfsz	??_LCD_Initialize^(0+128),f
  4253     0471  2C6E               	goto	u2417
  4254     0472  0BA5               	decfsz	(??_LCD_Initialize^(0+128)+1),f
  4255     0473  2C6E               	goto	u2417
  4256     0474  0000               	nop
  4257     0475                     l2201:
  4258                           
  4259                           ;../Ressources/lcd.c: 49:     LCD_WriteCommand(0x80);
  4260     0475  3080               	movlw	128
  4261     0476  318E  2661  3184   	fcall	_LCD_WriteCommand
  4262     0479                     l2203:
  4263                           
  4264                           ;../Ressources/lcd.c: 50:     _delay((unsigned long)((1)*(8000000/4000.0)));
  4265     0479  3003               	movlw	3
  4266     047A  0021               	movlb	1	; select bank1
  4267     047B  00A4               	movwf	??_LCD_Initialize^(0+128)
  4268     047C  3097               	movlw	151
  4269     047D                     u2427:
  4270     047D  0B89               	decfsz	9,f
  4271     047E  2C7D               	goto	u2427
  4272     047F  0BA4               	decfsz	??_LCD_Initialize^(0+128),f
  4273     0480  2C7D               	goto	u2427
  4274     0481  3200               	nop2
  4275     0482                     l18:
  4276     0482  0008               	return
  4277     0483                     __end_of_LCD_Initialize:
  4278                           
  4279                           	psect	text22
  4280     0E61                     __ptext22:	
  4281 ;; *************** function _LCD_WriteCommand *****************
  4282 ;; Defined at:
  4283 ;;		line 61 in file "../Ressources/lcd.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  cmd             1    wreg     unsigned char 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  cmd             1    3[BANK1 ] unsigned char 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, pclath, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4298 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4300 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4301 ;;Total ram usage:        1 bytes
  4302 ;; Hardware stack levels used: 1
  4303 ;; Hardware stack levels required when called: unknown (due to recursion)
  4304 ;; This function calls:
  4305 ;;		_LCD_WriteIOExpander
  4306 ;; This function is called by:
  4307 ;;		_LCD_Initialize
  4308 ;;		_LCD_GoTo
  4309 ;;		_LCD_Clear
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313     0E61                     _LCD_WriteCommand:	
  4314                           ;psect for function _LCD_WriteCommand
  4315                           
  4316                           
  4317                           ;incstack = 0
  4318                           ; Regs used in _LCD_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
  4319                           ;LCD_WriteCommand@cmd stored from wreg
  4320     0E61  0021               	movlb	1	; select bank1
  4321     0E62  00A3               	movwf	LCD_WriteCommand@cmd^(0+128)
  4322     0E63                     l1961:
  4323                           
  4324                           ;../Ressources/lcd.c: 62:     LCD_WriteIOExpander(0x12, 0x60);
  4325     0E63  3060               	movlw	96
  4326     0E64  00A1               	movwf	LCD_WriteIOExpander@data^(0+128)
  4327     0E65  3012               	movlw	18
  4328     0E66  318E  264C  318E   	fcall	_LCD_WriteIOExpander
  4329                           
  4330                           ;../Ressources/lcd.c: 63:     LCD_WriteIOExpander(0x13, cmd);
  4331     0E69  0021               	movlb	1	; select bank1
  4332     0E6A  0823               	movf	LCD_WriteCommand@cmd^(0+128),w
  4333     0E6B  00A1               	movwf	LCD_WriteIOExpander@data^(0+128)
  4334     0E6C  3013               	movlw	19
  4335     0E6D  318E  264C  318E   	fcall	_LCD_WriteIOExpander
  4336                           
  4337                           ;../Ressources/lcd.c: 64:     LCD_WriteIOExpander(0x12, 0x20);
  4338     0E70  3020               	movlw	32
  4339     0E71  0021               	movlb	1	; select bank1
  4340     0E72  00A1               	movwf	LCD_WriteIOExpander@data^(0+128)
  4341     0E73  3012               	movlw	18
  4342     0E74  318E  264C  318E   	fcall	_LCD_WriteIOExpander
  4343     0E77                     l24:
  4344     0E77  0008               	return
  4345     0E78                     __end_of_LCD_WriteCommand:
  4346                           
  4347                           	psect	text23
  4348     0E4C                     __ptext23:	
  4349 ;; *************** function _LCD_WriteIOExpander *****************
  4350 ;; Defined at:
  4351 ;;		line 53 in file "../Ressources/lcd.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  reg             1    wreg     unsigned char 
  4354 ;;  data            1    1[BANK1 ] unsigned char 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  reg             1    2[BANK1 ] unsigned char 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, status,0, pclath, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4366 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4367 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4369 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4370 ;;Total ram usage:        2 bytes
  4371 ;; Hardware stack levels used: 1
  4372 ;; Hardware stack levels required when called: unknown (due to recursion)
  4373 ;; This function calls:
  4374 ;;		_SPI_Exchange8bit
  4375 ;; This function is called by:
  4376 ;;		_LCD_Initialize
  4377 ;;		_LCD_WriteCommand
  4378 ;;		_LCD_WriteByte
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382     0E4C                     _LCD_WriteIOExpander:	
  4383                           ;psect for function _LCD_WriteIOExpander
  4384                           
  4385                           
  4386                           ;incstack = 0
  4387                           ; Regs used in _LCD_WriteIOExpander: [wreg+status,2+status,0+pclath+cstack]
  4388                           ;LCD_WriteIOExpander@reg stored from wreg
  4389     0E4C  0021               	movlb	1	; select bank1
  4390     0E4D  00A2               	movwf	LCD_WriteIOExpander@reg^(0+128)
  4391     0E4E                     l1737:
  4392                           
  4393                           ;../Ressources/lcd.c: 54:     LATAbits.LATA2 = 0;
  4394     0E4E  0022               	movlb	2	; select bank2
  4395     0E4F  110C               	bcf	12,2	;volatile
  4396     0E50                     l1739:
  4397                           
  4398                           ;../Ressources/lcd.c: 55:     SPI_Exchange8bit(0x40);
  4399     0E50  3040               	movlw	64
  4400     0E51  318D  25EF  318E   	fcall	_SPI_Exchange8bit
  4401                           
  4402                           ;../Ressources/lcd.c: 56:     SPI_Exchange8bit(reg);
  4403     0E54  0021               	movlb	1	; select bank1
  4404     0E55  0822               	movf	LCD_WriteIOExpander@reg^(0+128),w
  4405     0E56  318D  25EF  318E   	fcall	_SPI_Exchange8bit
  4406                           
  4407                           ;../Ressources/lcd.c: 57:     SPI_Exchange8bit(data);
  4408     0E59  0021               	movlb	1	; select bank1
  4409     0E5A  0821               	movf	LCD_WriteIOExpander@data^(0+128),w
  4410     0E5B  318D  25EF  318E   	fcall	_SPI_Exchange8bit
  4411     0E5E                     l1741:
  4412                           
  4413                           ;../Ressources/lcd.c: 58:     LATAbits.LATA2 = 1;
  4414     0E5E  0022               	movlb	2	; select bank2
  4415     0E5F  150C               	bsf	12,2	;volatile
  4416     0E60                     l21:
  4417     0E60  0008               	return
  4418     0E61                     __end_of_LCD_WriteIOExpander:
  4419                           
  4420                           	psect	text24
  4421     0DEF                     __ptext24:	
  4422 ;; *************** function _SPI_Exchange8bit *****************
  4423 ;; Defined at:
  4424 ;;		line 66 in file "../Ressources/spi.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  data            1    wreg     unsigned char 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  data            1    0[BANK1 ] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      unsigned char 
  4431 ;; Registers used:
  4432 ;;		wreg
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4439 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4441 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4442 ;;Total ram usage:        1 bytes
  4443 ;; Hardware stack levels used: 1
  4444 ;; Hardware stack levels required when called: unknown (due to recursion)
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_LCD_WriteIOExpander
  4449 ;;		_SPI_Exchange8bitBuffer
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453     0DEF                     _SPI_Exchange8bit:	
  4454                           ;psect for function _SPI_Exchange8bit
  4455                           
  4456                           
  4457                           ;incstack = 0
  4458                           ; Regs used in _SPI_Exchange8bit: [wreg]
  4459                           ;SPI_Exchange8bit@data stored from wreg
  4460     0DEF  0021               	movlb	1	; select bank1
  4461     0DF0  00A0               	movwf	SPI_Exchange8bit@data^(0+128)
  4462     0DF1                     l1725:
  4463                           
  4464                           ;../Ressources/spi.c: 66: char SPI_Exchange8bit(char data);../Ressources/spi.c: 67: {;..
      +                          /Ressources/spi.c: 69:     SSP1CON1bits.WCOL = 0;
  4465     0DF1  0024               	movlb	4	; select bank4
  4466     0DF2  1395               	bcf	21,7	;volatile
  4467     0DF3                     l1727:
  4468                           
  4469                           ;../Ressources/spi.c: 71:     SSP1BUF = data;
  4470     0DF3  0021               	movlb	1	; select bank1
  4471     0DF4  0820               	movf	SPI_Exchange8bit@data^(0+128),w
  4472     0DF5  0024               	movlb	4	; select bank4
  4473     0DF6  0091               	movwf	17	;volatile
  4474                           
  4475                           ;../Ressources/spi.c: 73:     while(SSP1STATbits.BF == 0x0)
  4476     0DF7  2DF9               	goto	l223
  4477     0DF8                     l224:
  4478     0DF8  0064               	clrwdt	;# 
  4479     0DF9                     l223:	
  4480                           ;../Ressources/spi.c: 76:     }
  4481                           
  4482                           
  4483                           ;../Ressources/spi.c: 73:     while(SSP1STATbits.BF == 0x0)
  4484     0DF9  0024               	movlb	4	; select bank4
  4485     0DFA  1C14               	btfss	20,0	;volatile
  4486     0DFB  2DFD               	goto	u1181
  4487     0DFC  2DFE               	goto	u1180
  4488     0DFD                     u1181:
  4489     0DFD  2DF8               	goto	l224
  4490     0DFE                     u1180:
  4491     0DFE                     l1729:
  4492                           
  4493                           ;../Ressources/spi.c: 78:     return (SSP1BUF);
  4494     0DFE  0811               	movf	17,w	;volatile
  4495     0DFF                     l226:
  4496     0DFF  0008               	return
  4497     0E00                     __end_of_SPI_Exchange8bit:
  4498                           
  4499                           	psect	text25
  4500     0DA8                     __ptext25:	
  4501 ;; *************** function _configurerInterruptBouton *****************
  4502 ;; Defined at:
  4503 ;;		line 63 in file "main.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;		None
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		None
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4521 ;;Total ram usage:        0 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: unknown (due to recursion)
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_main
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531     0DA8                     _configurerInterruptBouton:	
  4532                           ;psect for function _configurerInterruptBouton
  4533                           
  4534     0DA8                     l2389:	
  4535                           ;incstack = 0
  4536                           ; Regs used in _configurerInterruptBouton: []
  4537                           
  4538                           
  4539                           ;main.c: 64:     INTCONbits.INTE = 1;
  4540     0DA8  160B               	bsf	11,4	;volatile
  4541                           
  4542                           ;main.c: 65:     INTCONbits.INTF = 0;
  4543     0DA9  108B               	bcf	11,1	;volatile
  4544                           
  4545                           ;main.c: 66:     INTEDG = 0;
  4546     0DAA  0021               	movlb	1	; select bank1
  4547     0DAB  1315               	bcf	21,6	;volatile
  4548                           
  4549                           ;main.c: 67:     INTCONbits.GIE = 1;
  4550     0DAC  178B               	bsf	11,7	;volatile
  4551     0DAD                     l122:
  4552     0DAD  0008               	return
  4553     0DAE                     __end_of_configurerInterruptBouton:
  4554                           
  4555                           	psect	text26
  4556     0FD5                     __ptext26:	
  4557 ;; *************** function _charToRien *****************
  4558 ;; Defined at:
  4559 ;;		line 155 in file "main.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  nombre          1    wreg     unsigned char 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  nombre          1   13[BANK1 ] unsigned char 
  4564 ;;  dizaines        1   12[BANK1 ] unsigned char 
  4565 ;;  unite           1   11[BANK1 ] unsigned char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0, pclath, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4576 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4577 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4578 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4579 ;;Total ram usage:        5 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: unknown (due to recursion)
  4582 ;; This function calls:
  4583 ;;		___awdiv
  4584 ;;		___awmod
  4585 ;; This function is called by:
  4586 ;;		_main
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590     0FD5                     _charToRien:	
  4591                           ;psect for function _charToRien
  4592                           
  4593                           
  4594                           ;incstack = 0
  4595                           ; Regs used in _charToRien: [wreg+status,2+status,0+pclath+cstack]
  4596                           ;charToRien@nombre stored from wreg
  4597     0FD5  0021               	movlb	1	; select bank1
  4598     0FD6  00AD               	movwf	charToRien@nombre^(0+128)
  4599     0FD7                     l2423:
  4600                           
  4601                           ;main.c: 156:     char unite = (nombre % 10) + 48;
  4602     0FD7  300A               	movlw	10
  4603     0FD8  00A0               	movwf	___awmod@divisor^(0+128)
  4604     0FD9  3000               	movlw	0
  4605     0FDA  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  4606     0FDB  082D               	movf	charToRien@nombre^(0+128),w
  4607     0FDC  00A9               	movwf	??_charToRien^(0+128)
  4608     0FDD  01AA               	clrf	(??_charToRien^(0+128)+1)
  4609     0FDE  0829               	movf	??_charToRien^(0+128),w
  4610     0FDF  00A2               	movwf	___awmod@dividend^(0+128)
  4611     0FE0  082A               	movf	(??_charToRien+1)^(0+128),w
  4612     0FE1  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  4613     0FE2  3185  2598  318F   	fcall	___awmod
  4614     0FE5  0021               	movlb	1	; select bank1
  4615     0FE6  0820               	movf	?___awmod^(0+128),w
  4616     0FE7  3E30               	addlw	48
  4617     0FE8  00AB               	movwf	charToRien@unite^(0+128)
  4618                           
  4619                           ;main.c: 157:     char dizaines = (nombre / 10) + 48;
  4620     0FE9  300A               	movlw	10
  4621     0FEA  00A0               	movwf	___awdiv@divisor^(0+128)
  4622     0FEB  3000               	movlw	0
  4623     0FEC  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  4624     0FED  082D               	movf	charToRien@nombre^(0+128),w
  4625     0FEE  00A9               	movwf	??_charToRien^(0+128)
  4626     0FEF  01AA               	clrf	(??_charToRien^(0+128)+1)
  4627     0FF0  0829               	movf	??_charToRien^(0+128),w
  4628     0FF1  00A2               	movwf	___awdiv@dividend^(0+128)
  4629     0FF2  082A               	movf	(??_charToRien+1)^(0+128),w
  4630     0FF3  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  4631     0FF4  3184  2483  318F   	fcall	___awdiv
  4632     0FF7  0021               	movlb	1	; select bank1
  4633     0FF8  0820               	movf	?___awdiv^(0+128),w
  4634     0FF9  3E30               	addlw	48
  4635     0FFA  00AC               	movwf	charToRien@dizaines^(0+128)
  4636     0FFB                     l2425:
  4637                           
  4638                           ;main.c: 158:     String[0] = dizaines;
  4639     0FFB  082C               	movf	charToRien@dizaines^(0+128),w
  4640     0FFC  00E3               	movwf	_String^(0+128)
  4641     0FFD                     l2427:
  4642                           
  4643                           ;main.c: 159:     String[1] = unite;
  4644     0FFD  082B               	movf	charToRien@unite^(0+128),w
  4645     0FFE  00E4               	movwf	(_String^(0+128)+1)
  4646     0FFF                     l163:
  4647     0FFF  0008               	return
  4648     1000                     __end_of_charToRien:
  4649                           
  4650                           	psect	text27
  4651     0598                     __ptext27:	
  4652 ;; *************** function ___awmod *****************
  4653 ;; Defined at:
  4654 ;;		line 5 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/awmod.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  divisor         2    0[BANK1 ] int 
  4657 ;;  dividend        2    2[BANK1 ] int 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  sign            1    6[BANK1 ] unsigned char 
  4660 ;;  counter         1    5[BANK1 ] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  2    0[BANK1 ] int 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4670 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4671 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4672 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4673 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4674 ;;Total ram usage:        7 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: unknown (due to recursion)
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_charToRien
  4681 ;;		_vfpfcnvrt
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685     0598                     ___awmod:	
  4686                           ;psect for function ___awmod
  4687                           
  4688     0598                     l1787:	
  4689                           ;incstack = 0
  4690                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4691                           
  4692     0598  0021               	movlb	1	; select bank1
  4693     0599  01A6               	clrf	___awmod@sign^(0+128)
  4694     059A                     l1789:
  4695     059A  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  4696     059B  2D9D               	goto	u1301
  4697     059C  2D9E               	goto	u1300
  4698     059D                     u1301:
  4699     059D  2DA5               	goto	l1795
  4700     059E                     u1300:
  4701     059E                     l1791:
  4702     059E  09A2               	comf	___awmod@dividend^(0+128),f
  4703     059F  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4704     05A0  0AA2               	incf	___awmod@dividend^(0+128),f
  4705     05A1  1903               	skipnz
  4706     05A2  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4707     05A3                     l1793:
  4708     05A3  01A6               	clrf	___awmod@sign^(0+128)
  4709     05A4  0AA6               	incf	___awmod@sign^(0+128),f
  4710     05A5                     l1795:
  4711     05A5  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  4712     05A6  2DA8               	goto	u1311
  4713     05A7  2DA9               	goto	u1310
  4714     05A8                     u1311:
  4715     05A8  2DAE               	goto	l1799
  4716     05A9                     u1310:
  4717     05A9                     l1797:
  4718     05A9  09A0               	comf	___awmod@divisor^(0+128),f
  4719     05AA  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  4720     05AB  0AA0               	incf	___awmod@divisor^(0+128),f
  4721     05AC  1903               	skipnz
  4722     05AD  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  4723     05AE                     l1799:
  4724     05AE  0820               	movf	___awmod@divisor^(0+128),w
  4725     05AF  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  4726     05B0  1903               	btfsc	3,2
  4727     05B1  2DB3               	goto	u1321
  4728     05B2  2DB4               	goto	u1320
  4729     05B3                     u1321:
  4730     05B3  2DDD               	goto	l1817
  4731     05B4                     u1320:
  4732     05B4                     l1801:
  4733     05B4  01A5               	clrf	___awmod@counter^(0+128)
  4734     05B5  0AA5               	incf	___awmod@counter^(0+128),f
  4735     05B6  2DC0               	goto	l1807
  4736     05B7                     l1803:
  4737     05B7  3001               	movlw	1
  4738     05B8                     u1335:
  4739     05B8  35A0               	lslf	___awmod@divisor^(0+128),f
  4740     05B9  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  4741     05BA  0B89               	decfsz	9,f
  4742     05BB  2DB8               	goto	u1335
  4743     05BC                     l1805:
  4744     05BC  3001               	movlw	1
  4745     05BD  00A4               	movwf	??___awmod^(0+128)
  4746     05BE  0824               	movf	??___awmod^(0+128),w
  4747     05BF  07A5               	addwf	___awmod@counter^(0+128),f
  4748     05C0                     l1807:
  4749     05C0  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  4750     05C1  2DC3               	goto	u1341
  4751     05C2  2DC4               	goto	u1340
  4752     05C3                     u1341:
  4753     05C3  2DB7               	goto	l1803
  4754     05C4                     u1340:
  4755     05C4                     l1809:
  4756     05C4  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4757     05C5  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  4758     05C6  1D03               	skipz
  4759     05C7  2DCA               	goto	u1355
  4760     05C8  0820               	movf	___awmod@divisor^(0+128),w
  4761     05C9  0222               	subwf	___awmod@dividend^(0+128),w
  4762     05CA                     u1355:
  4763     05CA  1C03               	skipc
  4764     05CB  2DCD               	goto	u1351
  4765     05CC  2DCE               	goto	u1350
  4766     05CD                     u1351:
  4767     05CD  2DD2               	goto	l1813
  4768     05CE                     u1350:
  4769     05CE                     l1811:
  4770     05CE  0820               	movf	___awmod@divisor^(0+128),w
  4771     05CF  02A2               	subwf	___awmod@dividend^(0+128),f
  4772     05D0  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4773     05D1  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
  4774     05D2                     l1813:
  4775     05D2  3001               	movlw	1
  4776     05D3                     u1365:
  4777     05D3  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
  4778     05D4  0CA0               	rrf	___awmod@divisor^(0+128),f
  4779     05D5  0B89               	decfsz	9,f
  4780     05D6  2DD3               	goto	u1365
  4781     05D7                     l1815:
  4782     05D7  3001               	movlw	1
  4783     05D8  02A5               	subwf	___awmod@counter^(0+128),f
  4784     05D9  1D03               	btfss	3,2
  4785     05DA  2DDC               	goto	u1371
  4786     05DB  2DDD               	goto	u1370
  4787     05DC                     u1371:
  4788     05DC  2DC4               	goto	l1809
  4789     05DD                     u1370:
  4790     05DD                     l1817:
  4791     05DD  0826               	movf	___awmod@sign^(0+128),w
  4792     05DE  1903               	btfsc	3,2
  4793     05DF  2DE1               	goto	u1381
  4794     05E0  2DE2               	goto	u1380
  4795     05E1                     u1381:
  4796     05E1  2DE7               	goto	l1821
  4797     05E2                     u1380:
  4798     05E2                     l1819:
  4799     05E2  09A2               	comf	___awmod@dividend^(0+128),f
  4800     05E3  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4801     05E4  0AA2               	incf	___awmod@dividend^(0+128),f
  4802     05E5  1903               	skipnz
  4803     05E6  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4804     05E7                     l1821:
  4805     05E7  0823               	movf	(___awmod@dividend+1)^(0+128),w
  4806     05E8  00A1               	movwf	(?___awmod+1)^(0+128)
  4807     05E9  0822               	movf	___awmod@dividend^(0+128),w
  4808     05EA  00A0               	movwf	?___awmod^(0+128)
  4809     05EB                     l484:
  4810     05EB  0008               	return
  4811     05EC                     __end_of___awmod:
  4812                           
  4813                           	psect	text28
  4814     0483                     __ptext28:	
  4815 ;; *************** function ___awdiv *****************
  4816 ;; Defined at:
  4817 ;;		line 5 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/awdiv.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  divisor         2    0[BANK1 ] int 
  4820 ;;  dividend        2    2[BANK1 ] int 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  quotient        2    7[BANK1 ] int 
  4823 ;;  sign            1    6[BANK1 ] unsigned char 
  4824 ;;  counter         1    5[BANK1 ] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  2    0[BANK1 ] int 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4834 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4835 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4836 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4837 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4838 ;;Total ram usage:        9 bytes
  4839 ;; Hardware stack levels used: 1
  4840 ;; Hardware stack levels required when called: unknown (due to recursion)
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_charToRien
  4845 ;;		_vfpfcnvrt
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849     0483                     ___awdiv:	
  4850                           ;psect for function ___awdiv
  4851                           
  4852     0483                     l1743:	
  4853                           ;incstack = 0
  4854                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4855                           
  4856     0483  0021               	movlb	1	; select bank1
  4857     0484  01A6               	clrf	___awdiv@sign^(0+128)
  4858     0485                     l1745:
  4859     0485  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4860     0486  2C88               	goto	u1201
  4861     0487  2C89               	goto	u1200
  4862     0488                     u1201:
  4863     0488  2C90               	goto	l1751
  4864     0489                     u1200:
  4865     0489                     l1747:
  4866     0489  09A0               	comf	___awdiv@divisor^(0+128),f
  4867     048A  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  4868     048B  0AA0               	incf	___awdiv@divisor^(0+128),f
  4869     048C  1903               	skipnz
  4870     048D  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  4871     048E                     l1749:
  4872     048E  01A6               	clrf	___awdiv@sign^(0+128)
  4873     048F  0AA6               	incf	___awdiv@sign^(0+128),f
  4874     0490                     l1751:
  4875     0490  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  4876     0491  2C93               	goto	u1211
  4877     0492  2C94               	goto	u1210
  4878     0493                     u1211:
  4879     0493  2C9D               	goto	l1757
  4880     0494                     u1210:
  4881     0494                     l1753:
  4882     0494  09A2               	comf	___awdiv@dividend^(0+128),f
  4883     0495  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  4884     0496  0AA2               	incf	___awdiv@dividend^(0+128),f
  4885     0497  1903               	skipnz
  4886     0498  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  4887     0499                     l1755:
  4888     0499  3001               	movlw	1
  4889     049A  00A4               	movwf	??___awdiv^(0+128)
  4890     049B  0824               	movf	??___awdiv^(0+128),w
  4891     049C  06A6               	xorwf	___awdiv@sign^(0+128),f
  4892     049D                     l1757:
  4893     049D  01A7               	clrf	___awdiv@quotient^(0+128)
  4894     049E  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
  4895     049F                     l1759:
  4896     049F  0820               	movf	___awdiv@divisor^(0+128),w
  4897     04A0  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  4898     04A1  1903               	btfsc	3,2
  4899     04A2  2CA4               	goto	u1221
  4900     04A3  2CA5               	goto	u1220
  4901     04A4                     u1221:
  4902     04A4  2CD4               	goto	l1779
  4903     04A5                     u1220:
  4904     04A5                     l1761:
  4905     04A5  01A5               	clrf	___awdiv@counter^(0+128)
  4906     04A6  0AA5               	incf	___awdiv@counter^(0+128),f
  4907     04A7  2CB1               	goto	l1767
  4908     04A8                     l1763:
  4909     04A8  3001               	movlw	1
  4910     04A9                     u1235:
  4911     04A9  35A0               	lslf	___awdiv@divisor^(0+128),f
  4912     04AA  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  4913     04AB  0B89               	decfsz	9,f
  4914     04AC  2CA9               	goto	u1235
  4915     04AD                     l1765:
  4916     04AD  3001               	movlw	1
  4917     04AE  00A4               	movwf	??___awdiv^(0+128)
  4918     04AF  0824               	movf	??___awdiv^(0+128),w
  4919     04B0  07A5               	addwf	___awdiv@counter^(0+128),f
  4920     04B1                     l1767:
  4921     04B1  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4922     04B2  2CB4               	goto	u1241
  4923     04B3  2CB5               	goto	u1240
  4924     04B4                     u1241:
  4925     04B4  2CA8               	goto	l1763
  4926     04B5                     u1240:
  4927     04B5                     l1769:
  4928     04B5  3001               	movlw	1
  4929     04B6                     u1255:
  4930     04B6  35A7               	lslf	___awdiv@quotient^(0+128),f
  4931     04B7  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
  4932     04B8  0B89               	decfsz	9,f
  4933     04B9  2CB6               	goto	u1255
  4934     04BA  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4935     04BB  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  4936     04BC  1D03               	skipz
  4937     04BD  2CC0               	goto	u1265
  4938     04BE  0820               	movf	___awdiv@divisor^(0+128),w
  4939     04BF  0222               	subwf	___awdiv@dividend^(0+128),w
  4940     04C0                     u1265:
  4941     04C0  1C03               	skipc
  4942     04C1  2CC3               	goto	u1261
  4943     04C2  2CC4               	goto	u1260
  4944     04C3                     u1261:
  4945     04C3  2CC9               	goto	l1775
  4946     04C4                     u1260:
  4947     04C4                     l1771:
  4948     04C4  0820               	movf	___awdiv@divisor^(0+128),w
  4949     04C5  02A2               	subwf	___awdiv@dividend^(0+128),f
  4950     04C6  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4951     04C7  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
  4952     04C8                     l1773:
  4953     04C8  1427               	bsf	___awdiv@quotient^(0+128),0
  4954     04C9                     l1775:
  4955     04C9  3001               	movlw	1
  4956     04CA                     u1275:
  4957     04CA  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
  4958     04CB  0CA0               	rrf	___awdiv@divisor^(0+128),f
  4959     04CC  0B89               	decfsz	9,f
  4960     04CD  2CCA               	goto	u1275
  4961     04CE                     l1777:
  4962     04CE  3001               	movlw	1
  4963     04CF  02A5               	subwf	___awdiv@counter^(0+128),f
  4964     04D0  1D03               	btfss	3,2
  4965     04D1  2CD3               	goto	u1281
  4966     04D2  2CD4               	goto	u1280
  4967     04D3                     u1281:
  4968     04D3  2CB5               	goto	l1769
  4969     04D4                     u1280:
  4970     04D4                     l1779:
  4971     04D4  0826               	movf	___awdiv@sign^(0+128),w
  4972     04D5  1903               	btfsc	3,2
  4973     04D6  2CD8               	goto	u1291
  4974     04D7  2CD9               	goto	u1290
  4975     04D8                     u1291:
  4976     04D8  2CDE               	goto	l1783
  4977     04D9                     u1290:
  4978     04D9                     l1781:
  4979     04D9  09A7               	comf	___awdiv@quotient^(0+128),f
  4980     04DA  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
  4981     04DB  0AA7               	incf	___awdiv@quotient^(0+128),f
  4982     04DC  1903               	skipnz
  4983     04DD  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
  4984     04DE                     l1783:
  4985     04DE  0828               	movf	(___awdiv@quotient+1)^(0+128),w
  4986     04DF  00A1               	movwf	(?___awdiv+1)^(0+128)
  4987     04E0  0827               	movf	___awdiv@quotient^(0+128),w
  4988     04E1  00A0               	movwf	?___awdiv^(0+128)
  4989     04E2                     l471:
  4990     04E2  0008               	return
  4991     04E3                     __end_of___awdiv:
  4992                           
  4993                           	psect	intentry
  4994     0004                     __pintentry:	
  4995 ;; *************** function _isr *****************
  4996 ;; Defined at:
  4997 ;;		line 100 in file "main.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  caractere       1   45[BANK0 ] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5013 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5014 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5015 ;;Total ram usage:        5 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; Hardware stack levels required when called: unknown (due to recursion)
  5018 ;; This function calls:
  5019 ;;		_cesar
  5020 ;;		i1_lcd
  5021 ;; This function is called by:
  5022 ;;		Interrupt level 1
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026     0004                     _isr:
  5027                           
  5028                           ;incstack = 0
  5029     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5030                           
  5031                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5032     0005  3180               	pagesel	$
  5033     0006                     i1l2441:
  5034                           
  5035                           ;main.c: 101:     char caractere;;main.c: 103:     while (PIR1bits.RCIF) {
  5036     0006  2851               	goto	i1l2463
  5037     0007                     i1l2443:
  5038                           
  5039                           ;main.c: 104:         caractere = RC1REG;
  5040     0007  0023               	movlb	3	; select bank3
  5041     0008  0819               	movf	25,w	;volatile
  5042     0009  0020               	movlb	0	; select bank0
  5043     000A  00CD               	movwf	isr@caractere
  5044                           
  5045                           ;main.c: 106:         if (caractere >= 'A' && RC1REG <= 'Z') {
  5046     000B  3041               	movlw	65
  5047     000C  024D               	subwf	isr@caractere,w
  5048     000D  1C03               	skipc
  5049     000E  2810               	goto	u220_21
  5050     000F  2811               	goto	u220_20
  5051     0010                     u220_21:
  5052     0010  281D               	goto	i1l2449
  5053     0011                     u220_20:
  5054     0011                     i1l2445:
  5055     0011  305B               	movlw	91
  5056     0012  0023               	movlb	3	; select bank3
  5057     0013  0219               	subwf	25,w	;volatile
  5058     0014  1803               	skipnc
  5059     0015  2817               	goto	u221_21
  5060     0016  2818               	goto	u221_20
  5061     0017                     u221_21:
  5062     0017  281D               	goto	i1l2449
  5063     0018                     u221_20:
  5064     0018                     i1l2447:
  5065                           
  5066                           ;main.c: 107:             caractere += ('a' - 'A');
  5067     0018  3020               	movlw	32
  5068     0019  0020               	movlb	0	; select bank0
  5069     001A  00C9               	movwf	??_isr
  5070     001B  0849               	movf	??_isr,w
  5071     001C  07CD               	addwf	isr@caractere,f
  5072     001D                     i1l2449:
  5073                           
  5074                           ;main.c: 110:         if (caractere >= '0' && caractere <= '9') {
  5075     001D  3030               	movlw	48
  5076     001E  0020               	movlb	0	; select bank0
  5077     001F  024D               	subwf	isr@caractere,w
  5078     0020  1C03               	skipc
  5079     0021  2823               	goto	u222_21
  5080     0022  2824               	goto	u222_20
  5081     0023                     u222_21:
  5082     0023  2841               	goto	i1l2455
  5083     0024                     u222_20:
  5084     0024                     i1l2451:
  5085     0024  303A               	movlw	58
  5086     0025  024D               	subwf	isr@caractere,w
  5087     0026  1803               	skipnc
  5088     0027  2829               	goto	u223_21
  5089     0028  282A               	goto	u223_20
  5090     0029                     u223_21:
  5091     0029  2841               	goto	i1l2455
  5092     002A                     u223_20:
  5093     002A                     i1l2453:
  5094                           
  5095                           ;main.c: 111:             caractere = (char) cesar((int) caractere, offset);
  5096     002A  084D               	movf	isr@caractere,w
  5097     002B  00C9               	movwf	??_isr
  5098     002C  01CA               	clrf	??_isr+1
  5099     002D  0849               	movf	??_isr,w
  5100     002E  00F0               	movwf	cesar@value
  5101     002F  084A               	movf	??_isr+1,w
  5102     0030  00F1               	movwf	cesar@value+1
  5103     0031  0021               	movlb	1	; select bank1
  5104     0032  0862               	movf	_offset^(0+128),w
  5105     0033  0020               	movlb	0	; select bank0
  5106     0034  00CB               	movwf	??_isr+2
  5107     0035  01CC               	clrf	??_isr+3
  5108     0036  084B               	movf	??_isr+2,w
  5109     0037  00F2               	movwf	cesar@offsetBis
  5110     0038  084C               	movf	??_isr+3,w
  5111     0039  00F3               	movwf	cesar@offsetBis+1
  5112     003A  3183  233C  3180   	fcall	_cesar
  5113     003D  0870               	movf	?_cesar,w
  5114     003E  0020               	movlb	0	; select bank0
  5115     003F  00CD               	movwf	isr@caractere
  5116                           
  5117                           ;main.c: 112:         } else if (caractere >= 'a' && caractere <= 'z') {
  5118     0040  284E               	goto	i1l2461
  5119     0041                     i1l2455:
  5120     0041  3061               	movlw	97
  5121     0042  024D               	subwf	isr@caractere,w
  5122     0043  1C03               	skipc
  5123     0044  2846               	goto	u224_21
  5124     0045  2847               	goto	u224_20
  5125     0046                     u224_21:
  5126     0046  284E               	goto	i1l2461
  5127     0047                     u224_20:
  5128     0047                     i1l2457:
  5129     0047  307B               	movlw	123
  5130     0048  024D               	subwf	isr@caractere,w
  5131     0049  1803               	skipnc
  5132     004A  284C               	goto	u225_21
  5133     004B  284D               	goto	u225_20
  5134     004C                     u225_21:
  5135     004C  284E               	goto	i1l2461
  5136     004D                     u225_20:
  5137     004D  282A               	goto	i1l2453
  5138     004E                     i1l2461:
  5139                           
  5140                           ;main.c: 116:         TX1REG = caractere;
  5141     004E  084D               	movf	isr@caractere,w
  5142     004F  0023               	movlb	3	; select bank3
  5143     0050  009A               	movwf	26	;volatile
  5144     0051                     i1l2463:
  5145                           
  5146                           ;main.c: 103:     while (PIR1bits.RCIF) {
  5147     0051  0020               	movlb	0	; select bank0
  5148     0052  1A91               	btfsc	17,5	;volatile
  5149     0053  2855               	goto	u226_21
  5150     0054  2856               	goto	u226_20
  5151     0055                     u226_21:
  5152     0055  2807               	goto	i1l2443
  5153     0056                     u226_20:
  5154     0056                     i1l144:
  5155                           
  5156                           ;main.c: 119:     if (INTF) {
  5157     0056  1C8B               	btfss	11,1	;volatile
  5158     0057  2859               	goto	u227_21
  5159     0058  285A               	goto	u227_20
  5160     0059                     u227_21:
  5161     0059  286C               	goto	i1l148
  5162     005A                     u227_20:
  5163     005A                     i1l2465:
  5164                           
  5165                           ;main.c: 120:         INTF = 0;
  5166     005A  108B               	bcf	11,1	;volatile
  5167     005B                     i1l2467:
  5168                           
  5169                           ;main.c: 122:         if (Chiffrement == 1) {
  5170     005B  0021               	movlb	1	; select bank1
  5171     005C  035F               	decf	_Chiffrement^(0+128),w
  5172     005D  0460               	iorwf	(_Chiffrement+1)^(0+128),w
  5173     005E  1D03               	btfss	3,2
  5174     005F  2861               	goto	u228_21
  5175     0060  2862               	goto	u228_20
  5176     0061                     u228_21:
  5177     0061  2865               	goto	i1l2471
  5178     0062                     u228_20:
  5179     0062                     i1l2469:
  5180                           
  5181                           ;main.c: 123:             Chiffrement = 0;
  5182     0062  01DF               	clrf	_Chiffrement^(0+128)
  5183     0063  01E0               	clrf	(_Chiffrement+1)^(0+128)
  5184                           
  5185                           ;main.c: 124:         } else {
  5186     0064  2869               	goto	i1l2473
  5187     0065                     i1l2471:
  5188                           
  5189                           ;main.c: 125:             Chiffrement = 1;
  5190     0065  3001               	movlw	1
  5191     0066  00DF               	movwf	_Chiffrement^(0+128)
  5192     0067  3000               	movlw	0
  5193     0068  00E0               	movwf	(_Chiffrement^(0+128)+1)
  5194     0069                     i1l2473:
  5195                           
  5196                           ;main.c: 128:         lcd();
  5197     0069  3186  26DA  3180   	fcall	i1_lcd
  5198     006C                     i1l148:
  5199     006C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5200     006D  0009               	retfie
  5201     006E                     __end_of_isr:
  5202                           
  5203                           	psect	text30
  5204     06DA                     __ptext30:	
  5205 ;; *************** function i1_lcd *****************
  5206 ;; Defined at:
  5207 ;;		line 84 in file "main.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5223 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5224 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5225 ;;Total ram usage:        2 bytes
  5226 ;; Hardware stack levels used: 1
  5227 ;; Hardware stack levels required when called: 5
  5228 ;; This function calls:
  5229 ;;		i1_LCD_Clear
  5230 ;;		i1_LCD_GoTo
  5231 ;;		i1_LCD_WriteString
  5232 ;;		i1_sprintf
  5233 ;; This function is called by:
  5234 ;;		_isr
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238     06DA                     i1_lcd:	
  5239                           ;psect for function i1_lcd
  5240                           
  5241     06DA                     i1l2429:	
  5242                           ;incstack = 0
  5243                           ; Regs used in i1_lcd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5244                           
  5245                           
  5246                           ;main.c: 85:     LCD_Clear();
  5247     06DA  318D  25BB  3186   	fcall	i1_LCD_Clear
  5248                           
  5249                           ;main.c: 86:     LCD_GoTo(0, 0);
  5250     06DD  01F4               	clrf	i1LCD_GoTo@column
  5251     06DE  3000               	movlw	0
  5252     06DF  318E  26AC  3186   	fcall	i1_LCD_GoTo
  5253     06E2                     i1l2431:
  5254                           
  5255                           ;main.c: 89:     if (Chiffrement == 1) {
  5256     06E2  0021               	movlb	1	; select bank1
  5257     06E3  035F               	decf	_Chiffrement^(0+128),w
  5258     06E4  0460               	iorwf	(_Chiffrement+1)^(0+128),w
  5259     06E5  1D03               	btfss	3,2
  5260     06E6  2EE8               	goto	u219_21
  5261     06E7  2EE9               	goto	u219_20
  5262     06E8                     u219_21:
  5263     06E8  2F03               	goto	i1l2437
  5264     06E9                     u219_20:
  5265     06E9                     i1l2433:
  5266                           
  5267                           ;main.c: 91:         sprintf(String, "Chiffre : %d", offset);
  5268     06E9  30E3               	movlw	low _String
  5269     06EA  0020               	movlb	0	; select bank0
  5270     06EB  00B5               	movwf	i1sprintf@s
  5271     06EC  3000               	movlw	high _String
  5272     06ED  00B6               	movwf	i1sprintf@s+1
  5273     06EE  300F               	movlw	low (STR_1| (0+32768))
  5274     06EF  00B7               	movwf	i1sprintf@fmt
  5275     06F0  3090               	movlw	high (STR_1| (0+32768))
  5276     06F1  00B8               	movwf	i1sprintf@fmt+1
  5277     06F2  0021               	movlb	1	; select bank1
  5278     06F3  0862               	movf	_offset^(0+128),w
  5279     06F4  0020               	movlb	0	; select bank0
  5280     06F5  00C7               	movwf	??i1_lcd
  5281     06F6  01C8               	clrf	??i1_lcd+1
  5282     06F7  0847               	movf	??i1_lcd,w
  5283     06F8  00B9               	movwf	?i1_sprintf+4
  5284     06F9  0848               	movf	??i1_lcd+1,w
  5285     06FA  00BA               	movwf	?i1_sprintf+5
  5286     06FB  318F  276B  3186   	fcall	i1_sprintf
  5287     06FE                     i1l2435:
  5288                           
  5289                           ;main.c: 92:         LCD_WriteString(String);
  5290     06FE  30E3               	movlw	(low (_String| 0))& (0+255)
  5291     06FF  318E  268F  3186   	fcall	i1_LCD_WriteString
  5292                           
  5293                           ;main.c: 93:     } else {
  5294     0702  2F1C               	goto	i1l133
  5295     0703                     i1l2437:
  5296                           
  5297                           ;main.c: 95:         sprintf(String, "Dechiffre : %d", offset);
  5298     0703  30E3               	movlw	low _String
  5299     0704  0020               	movlb	0	; select bank0
  5300     0705  00B5               	movwf	i1sprintf@s
  5301     0706  3000               	movlw	high _String
  5302     0707  00B6               	movwf	i1sprintf@s+1
  5303     0708  3000               	movlw	low (STR_2| (0+32768))
  5304     0709  00B7               	movwf	i1sprintf@fmt
  5305     070A  3090               	movlw	high (STR_2| (0+32768))
  5306     070B  00B8               	movwf	i1sprintf@fmt+1
  5307     070C  0021               	movlb	1	; select bank1
  5308     070D  0862               	movf	_offset^(0+128),w
  5309     070E  0020               	movlb	0	; select bank0
  5310     070F  00C7               	movwf	??i1_lcd
  5311     0710  01C8               	clrf	??i1_lcd+1
  5312     0711  0847               	movf	??i1_lcd,w
  5313     0712  00B9               	movwf	?i1_sprintf+4
  5314     0713  0848               	movf	??i1_lcd+1,w
  5315     0714  00BA               	movwf	?i1_sprintf+5
  5316     0715  318F  276B  3186   	fcall	i1_sprintf
  5317     0718                     i1l2439:
  5318                           
  5319                           ;main.c: 96:         LCD_WriteString(String);
  5320     0718  30E3               	movlw	(low (_String| 0))& (0+255)
  5321     0719  318E  268F  3186   	fcall	i1_LCD_WriteString
  5322     071C                     i1l133:
  5323     071C  0008               	return
  5324     071D                     __end_ofi1_lcd:
  5325                           
  5326                           	psect	text31
  5327     0F6B                     __ptext31:	
  5328 ;; *************** function i1_sprintf *****************
  5329 ;; Defined at:
  5330 ;;		line 9 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/nf_sprintf.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;  s               2   21[BANK0 ] PTR unsigned char 
  5333 ;;		 -> STR_3(3), String(3), 
  5334 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
  5335 ;;		 -> ROM(16384), STR_2(15), STR_1(13), 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  f              11   28[BANK0 ] struct _IO_FILE
  5338 ;;  ret             2    0        int 
  5339 ;;  ap              1   27[BANK0 ] PTR void [1]
  5340 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  2   21[BANK0 ] int 
  5343 ;; Registers used:
  5344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5350 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5351 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5353 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5354 ;;Total ram usage:       18 bytes
  5355 ;; Hardware stack levels used: 1
  5356 ;; Hardware stack levels required when called: 4
  5357 ;; This function calls:
  5358 ;;		i1_vfprintf
  5359 ;; This function is called by:
  5360 ;;		i1_lcd
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364     0F6B                     i1_sprintf:	
  5365                           ;psect for function i1_sprintf
  5366                           
  5367     0F6B                     i1l2335:	
  5368                           ;incstack = 0
  5369                           ; Regs used in i1_sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5370                           
  5371     0F6B  3039               	movlw	(low ((?i1_sprintf| 0+4)))& (0+255)
  5372     0F6C  0020               	movlb	0	; select bank0
  5373     0F6D  00BB               	movwf	i1sprintf@ap
  5374     0F6E  0836               	movf	i1sprintf@s+1,w
  5375     0F6F  00BD               	movwf	i1sprintf@f+1
  5376     0F70  0835               	movf	i1sprintf@s,w
  5377     0F71  00BC               	movwf	i1sprintf@f
  5378     0F72                     i1l2337:
  5379     0F72  01BE               	clrf	i1sprintf@f+2
  5380     0F73  01BF               	clrf	i1sprintf@f+3
  5381     0F74                     i1l2339:
  5382     0F74  01C5               	clrf	i1sprintf@f+9
  5383     0F75  01C6               	clrf	i1sprintf@f+10
  5384     0F76                     i1l2341:
  5385     0F76  0838               	movf	i1sprintf@fmt+1,w
  5386     0F77  00B0               	movwf	i1vfprintf@fmt+1
  5387     0F78  0837               	movf	i1sprintf@fmt,w
  5388     0F79  00AF               	movwf	i1vfprintf@fmt
  5389     0F7A  303B               	movlw	(low (i1sprintf@ap| 0))& (0+255)
  5390     0F7B  00B1               	movwf	i1vfprintf@ap
  5391     0F7C  303C               	movlw	(low (i1sprintf@f| 0))& (0+255)
  5392     0F7D  318F  27B1  318F   	fcall	i1_vfprintf
  5393     0F80                     i1l2343:
  5394     0F80  3002               	movlw	2
  5395     0F81  3E3C               	addlw	(low (i1sprintf@f| 0))& (0+255)
  5396     0F82  0086               	movwf	6
  5397     0F83  0187               	clrf	7
  5398     0F84  3F40               	moviw [0]fsr1
  5399     0F85  0020               	movlb	0	; select bank0
  5400     0F86  0735               	addwf	i1sprintf@s,w
  5401     0F87  0084               	movwf	4
  5402     0F88  3F41               	moviw [1]fsr1
  5403     0F89  3D36               	addwfc	i1sprintf@s+1,w
  5404     0F8A  0085               	movwf	5
  5405     0F8B  3000               	movlw	0
  5406     0F8C  0080               	movwf	0
  5407     0F8D                     i1l781:
  5408     0F8D  0008               	return
  5409     0F8E                     __end_ofi1_sprintf:
  5410                           
  5411                           	psect	text32
  5412     0FB1                     __ptext32:	
  5413 ;; *************** function i1_vfprintf *****************
  5414 ;; Defined at:
  5415 ;;		line 1817 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  fp              1    wreg     PTR struct _IO_FILE
  5418 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  5419 ;;  fmt             2   15[BANK0 ] PTR const unsigned char 
  5420 ;;		 -> ROM(16384), STR_2(15), STR_1(13), 
  5421 ;;  ap              1   17[BANK0 ] PTR PTR void 
  5422 ;;		 -> i1sprintf@ap(1), sprintf@ap(1), 
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  fp              1   18[BANK0 ] PTR struct _IO_FILE
  5425 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  5426 ;;  cfmt            2   19[BANK0 ] PTR unsigned char 
  5427 ;;		 -> ROM(16384), STR_2(15), STR_1(13), 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  2   15[BANK0 ] int 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5437 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5438 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5440 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5441 ;;Total ram usage:        7 bytes
  5442 ;; Hardware stack levels used: 1
  5443 ;; Hardware stack levels required when called: 3
  5444 ;; This function calls:
  5445 ;;		i1_vfpfcnvrt
  5446 ;; This function is called by:
  5447 ;;		i1_sprintf
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451     0FB1                     i1_vfprintf:	
  5452                           ;psect for function i1_vfprintf
  5453                           
  5454                           
  5455                           ;incstack = 0
  5456                           ; Regs used in i1_vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5457                           ;i1vfprintf@fp stored from wreg
  5458     0FB1  0020               	movlb	0	; select bank0
  5459     0FB2  00B2               	movwf	i1vfprintf@fp
  5460     0FB3                     i1l2173:
  5461                           
  5462                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.45/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  5463     0FB3  0830               	movf	i1vfprintf@fmt+1,w
  5464     0FB4  00B4               	movwf	i1vfprintf@cfmt+1
  5465     0FB5  082F               	movf	i1vfprintf@fmt,w
  5466     0FB6  00B3               	movwf	i1vfprintf@cfmt
  5467     0FB7                     i1l2175:
  5468                           
  5469                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1824:     nout = 0;
  5470     0FB7  0021               	movlb	1	; select bank1
  5471     0FB8  01D9               	clrf	_nout^(0+128)
  5472     0FB9  01DA               	clrf	(_nout+1)^(0+128)
  5473                           
  5474                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  5475     0FBA  2FC8               	goto	i1l2179
  5476     0FBB                     i1l2177:
  5477                           
  5478                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1828:         nout +
      +                          =
  5479     0FBB  3033               	movlw	(low (i1vfprintf@cfmt| 0))& (0+255)
  5480     0FBC  00FB               	movwf	i1vfpfcnvrt@fmt
  5481     0FBD  0831               	movf	i1vfprintf@ap,w
  5482     0FBE  00FC               	movwf	i1vfpfcnvrt@ap
  5483     0FBF  0832               	movf	i1vfprintf@fp,w
  5484     0FC0  3180  2095  318F   	fcall	i1_vfpfcnvrt
  5485     0FC3  087B               	movf	?i1_vfpfcnvrt,w
  5486     0FC4  0021               	movlb	1	; select bank1
  5487     0FC5  07D9               	addwf	_nout^(0+128),f
  5488     0FC6  087C               	movf	?i1_vfpfcnvrt+1,w
  5489     0FC7  3DDA               	addwfc	(_nout+1)^(0+128),f
  5490     0FC8                     i1l2179:
  5491                           
  5492                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  5493     0FC8  0020               	movlb	0	; select bank0
  5494     0FC9  0833               	movf	i1vfprintf@cfmt,w
  5495     0FCA  0084               	movwf	4
  5496     0FCB  0834               	movf	i1vfprintf@cfmt+1,w
  5497     0FCC  0085               	movwf	5
  5498     0FCD  0012               	moviw fsr0++
  5499     0FCE  1D03               	btfss	3,2
  5500     0FCF  2FD1               	goto	u197_21
  5501     0FD0  2FD2               	goto	u197_20
  5502     0FD1                     u197_21:
  5503     0FD1  2FBB               	goto	i1l2177
  5504     0FD2                     u197_20:
  5505     0FD2                     i1l2181:
  5506                           
  5507                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  5508     0FD2  01AF               	clrf	?i1_vfprintf
  5509     0FD3  01B0               	clrf	?i1_vfprintf+1
  5510     0FD4                     i1l831:
  5511     0FD4  0008               	return
  5512     0FD5                     __end_ofi1_vfprintf:
  5513                           
  5514                           	psect	text33
  5515     0095                     __ptext33:	
  5516 ;; *************** function i1_vfpfcnvrt *****************
  5517 ;; Defined at:
  5518 ;;		line 1177 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  fp              1    wreg     PTR struct _IO_FILE
  5521 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  5522 ;;  fmt             1   11[COMMON] PTR PTR unsigned char 
  5523 ;;		 -> i1vfprintf@cfmt(2), vfprintf@cfmt(2), 
  5524 ;;  ap              1   12[COMMON] PTR PTR void 
  5525 ;;		 -> i1sprintf@ap(1), sprintf@ap(1), 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  5528 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  5529 ;;  convarg         4    8[BANK0 ] struct .
  5530 ;;  cp              2   12[BANK0 ] PTR unsigned char 
  5531 ;;		 -> ROM(16384), STR_2(15), STR_1(13), 
  5532 ;;  cnt             2    5[BANK0 ] int 
  5533 ;;  c               1   14[BANK0 ] unsigned char 
  5534 ;;  done            1    4[BANK0 ] _Bool 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  2   11[COMMON] int 
  5537 ;; Registers used:
  5538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5545 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5546 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5547 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5548 ;;Total ram usage:       17 bytes
  5549 ;; Hardware stack levels used: 1
  5550 ;; Hardware stack levels required when called: 2
  5551 ;; This function calls:
  5552 ;;		i1___awdiv
  5553 ;;		i1___awmod
  5554 ;;		i1_abs
  5555 ;;		i1_fputc
  5556 ;; This function is called by:
  5557 ;;		i1_vfprintf
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561     0095                     i1_vfpfcnvrt:	
  5562                           ;psect for function i1_vfpfcnvrt
  5563                           
  5564                           
  5565                           ;incstack = 0
  5566                           ; Regs used in i1_vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5567                           ;i1vfpfcnvrt@fp stored from wreg
  5568     0095  0020               	movlb	0	; select bank0
  5569     0096  00A7               	movwf	i1vfpfcnvrt@fp
  5570     0097                     i1l2051:
  5571                           
  5572                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.45/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 119
      +                          1:  int cnt = 0;
  5573     0097  01A5               	clrf	i1vfpfcnvrt@cnt
  5574     0098  01A6               	clrf	i1vfpfcnvrt@cnt+1
  5575     0099                     i1l2053:
  5576                           
  5577                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1201:     if ((*fmt)
      +                          [0] == '%') {
  5578     0099  087B               	movf	i1vfpfcnvrt@fmt,w
  5579     009A  0086               	movwf	6
  5580     009B  0187               	clrf	7
  5581     009C  3F40               	moviw [0]fsr1
  5582     009D  00A0               	movwf	??i1_vfpfcnvrt
  5583     009E  3F41               	moviw [1]fsr1
  5584     009F  00A1               	movwf	??i1_vfpfcnvrt+1
  5585     00A0  0820               	movf	??i1_vfpfcnvrt,w
  5586     00A1  0084               	movwf	4
  5587     00A2  0821               	movf	??i1_vfpfcnvrt+1,w
  5588     00A3  0085               	movwf	5
  5589     00A4  0012               	moviw fsr0++
  5590     00A5  3A25               	xorlw	37
  5591     00A6  1D03               	btfss	3,2
  5592     00A7  28A9               	goto	u180_21
  5593     00A8  28AA               	goto	u180_20
  5594     00A9                     u180_21:
  5595     00A9  29C8               	goto	i1l2129
  5596     00AA                     u180_20:
  5597     00AA                     i1l2055:
  5598                           
  5599                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  5600     00AA  087B               	movf	i1vfpfcnvrt@fmt,w
  5601     00AB  0086               	movwf	6
  5602     00AC  0187               	clrf	7
  5603     00AD  3001               	movlw	1
  5604     00AE  0781               	addwf	1,f
  5605     00AF  3141               	addfsr 1,1
  5606     00B0  1803               	skipnc
  5607     00B1  0A81               	incf	1,f
  5608     00B2                     i1l2057:
  5609                           
  5610                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  5611     00B2  0021               	movlb	1	; select bank1
  5612     00B3  01DB               	clrf	_width^(0+128)
  5613     00B4  01DC               	clrf	(_width+1)^(0+128)
  5614     00B5  1003               	clrc
  5615     00B6  3000               	movlw	0
  5616     00B7  1803               	btfsc	3,0
  5617     00B8  3001               	movlw	1
  5618     00B9  00E1               	movwf	_flags^(0+128)
  5619     00BA                     i1l2059:
  5620                           
  5621                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  5622     00BA  30FF               	movlw	255
  5623     00BB  00DD               	movwf	_prec^(0+128)
  5624     00BC  30FF               	movlw	255
  5625     00BD  00DE               	movwf	(_prec^(0+128)+1)
  5626     00BE                     i1l2061:
  5627                           
  5628                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  5629     00BE  087B               	movf	i1vfpfcnvrt@fmt,w
  5630     00BF  0086               	movwf	6
  5631     00C0  0187               	clrf	7
  5632     00C1  3F40               	moviw [0]fsr1
  5633     00C2  0020               	movlb	0	; select bank0
  5634     00C3  00AC               	movwf	i1vfpfcnvrt@cp
  5635     00C4  3F41               	moviw [1]fsr1
  5636     00C5  00AD               	movwf	i1vfpfcnvrt@cp+1
  5637     00C6                     i1l2063:
  5638                           
  5639                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == '
      +                          d' || *cp == 'i') {
  5640     00C6  082C               	movf	i1vfpfcnvrt@cp,w
  5641     00C7  0084               	movwf	4
  5642     00C8  082D               	movf	i1vfpfcnvrt@cp+1,w
  5643     00C9  0085               	movwf	5
  5644     00CA  0012               	moviw fsr0++
  5645     00CB  3A64               	xorlw	100
  5646     00CC  1903               	btfsc	3,2
  5647     00CD  28CF               	goto	u181_21
  5648     00CE  28D0               	goto	u181_20
  5649     00CF                     u181_21:
  5650     00CF  28DA               	goto	i1l2067
  5651     00D0                     u181_20:
  5652     00D0                     i1l2065:
  5653     00D0  082C               	movf	i1vfpfcnvrt@cp,w
  5654     00D1  0084               	movwf	4
  5655     00D2  082D               	movf	i1vfpfcnvrt@cp+1,w
  5656     00D3  0085               	movwf	5
  5657     00D4  0012               	moviw fsr0++
  5658     00D5  3A69               	xorlw	105
  5659     00D6  1D03               	btfss	3,2
  5660     00D7  28D9               	goto	u182_21
  5661     00D8  28DA               	goto	u182_20
  5662     00D9                     u182_21:
  5663     00D9  296E               	goto	i1l2103
  5664     00DA                     u182_20:
  5665     00DA                     i1l2067:
  5666                           
  5667                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1404:    convarg.sin
      +                          t = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5668     00DA  087C               	movf	i1vfpfcnvrt@ap,w
  5669     00DB  0086               	movwf	6
  5670     00DC  0187               	clrf	7
  5671     00DD  0801               	movf	1,w
  5672     00DE  0084               	movwf	4
  5673     00DF  0185               	clrf	5
  5674     00E0  3002               	movlw	2
  5675     00E1  0781               	addwf	1,f
  5676     00E2  3F00               	moviw [0]fsr0
  5677     00E3  00A8               	movwf	i1vfpfcnvrt@convarg
  5678     00E4  3F01               	moviw [1]fsr0
  5679     00E5  00A9               	movwf	i1vfpfcnvrt@convarg+1
  5680     00E6                     i1l2069:
  5681                           
  5682                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1
      +                          ;
  5683     00E6  082C               	movf	i1vfpfcnvrt@cp,w
  5684     00E7  3E01               	addlw	1
  5685     00E8  00A0               	movwf	??i1_vfpfcnvrt
  5686     00E9  3000               	movlw	0
  5687     00EA  3D2D               	addwfc	i1vfpfcnvrt@cp+1,w
  5688     00EB  00A1               	movwf	??i1_vfpfcnvrt+1
  5689     00EC  087B               	movf	i1vfpfcnvrt@fmt,w
  5690     00ED  0086               	movwf	6
  5691     00EE  0187               	clrf	7
  5692     00EF  0820               	movf	??i1_vfpfcnvrt,w
  5693     00F0  3FC0               	movwi [0]fsr1
  5694     00F1  0821               	movf	??i1_vfpfcnvrt+1,w
  5695     00F2  3FC1               	movwi [1]fsr1
  5696     00F3                     i1l2071:
  5697                           
  5698                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1408:    c = sizeof(
      +                          dbuf);
  5699     00F3  3020               	movlw	32
  5700     00F4  00AE               	movwf	i1vfpfcnvrt@c
  5701     00F5                     i1l2073:
  5702                           
  5703                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1409:    done = conv
      +                          arg.sint < 0;
  5704     00F5  1BA9               	btfsc	i1vfpfcnvrt@convarg+1,7
  5705     00F6  28F8               	goto	u183_21
  5706     00F7  28FA               	goto	u183_20
  5707     00F8                     u183_21:
  5708     00F8  3001               	movlw	1
  5709     00F9  28FB               	goto	u184_20
  5710     00FA                     u183_20:
  5711     00FA  3000               	movlw	0
  5712     00FB                     u184_20:
  5713     00FB  00A4               	movwf	i1vfpfcnvrt@done
  5714     00FC                     i1l2075:
  5715                           
  5716                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1411:     dbuf[--c] 
      +                          = abs(convarg.sint % 10) + '0';
  5717     00FC  3001               	movlw	1
  5718     00FD  02AE               	subwf	i1vfpfcnvrt@c,f
  5719     00FE  082E               	movf	i1vfpfcnvrt@c,w
  5720     00FF  3E4E               	addlw	(low (_dbuf| 0))& (0+255)
  5721     0100  0086               	movwf	6
  5722     0101  0187               	clrf	7
  5723     0102  300A               	movlw	10
  5724     0103  00F0               	movwf	i1___awmod@divisor
  5725     0104  3000               	movlw	0
  5726     0105  00F1               	movwf	i1___awmod@divisor+1
  5727     0106  0829               	movf	i1vfpfcnvrt@convarg+1,w
  5728     0107  00F3               	movwf	i1___awmod@dividend+1
  5729     0108  0828               	movf	i1vfpfcnvrt@convarg,w
  5730     0109  00F2               	movwf	i1___awmod@dividend
  5731     010A  3186  2640  3180   	fcall	i1___awmod
  5732     010D  0871               	movf	?i1___awmod+1,w
  5733     010E  00F8               	movwf	i1abs@a+1
  5734     010F  0870               	movf	?i1___awmod,w
  5735     0110  00F7               	movwf	i1abs@a
  5736     0111  318D  25DE  3180   	fcall	i1_abs
  5737     0114  0877               	movf	?i1_abs,w
  5738     0115  3E30               	addlw	48
  5739     0116  0081               	movwf	1
  5740     0117                     i1l2077:
  5741                           
  5742                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1412:     convarg.si
      +                          nt /= 10;
  5743     0117  300A               	movlw	10
  5744     0118  00F0               	movwf	i1___awdiv@divisor
  5745     0119  3000               	movlw	0
  5746     011A  00F1               	movwf	i1___awdiv@divisor+1
  5747     011B  0020               	movlb	0	; select bank0
  5748     011C  0829               	movf	i1vfpfcnvrt@convarg+1,w
  5749     011D  00F3               	movwf	i1___awdiv@dividend+1
  5750     011E  0828               	movf	i1vfpfcnvrt@convarg,w
  5751     011F  00F2               	movwf	i1___awdiv@dividend
  5752     0120  3184  24E3  3180   	fcall	i1___awdiv
  5753     0123  0871               	movf	?i1___awdiv+1,w
  5754     0124  0020               	movlb	0	; select bank0
  5755     0125  00A9               	movwf	i1vfpfcnvrt@convarg+1
  5756     0126  0870               	movf	?i1___awdiv,w
  5757     0127  00A8               	movwf	i1vfpfcnvrt@convarg
  5758     0128                     i1l2079:
  5759                           
  5760                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1414:     cnt++;
  5761     0128  3001               	movlw	1
  5762     0129  07A5               	addwf	i1vfpfcnvrt@cnt,f
  5763     012A  3000               	movlw	0
  5764     012B  3DA6               	addwfc	i1vfpfcnvrt@cnt+1,f
  5765     012C                     i1l2081:
  5766                           
  5767                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1416:    } while (co
      +                          nvarg.sint != 0 && c != 0);
  5768     012C  0828               	movf	i1vfpfcnvrt@convarg,w
  5769     012D  0429               	iorwf	i1vfpfcnvrt@convarg+1,w
  5770     012E  1903               	btfsc	3,2
  5771     012F  2931               	goto	u185_21
  5772     0130  2932               	goto	u185_20
  5773     0131                     u185_21:
  5774     0131  2937               	goto	i1l2085
  5775     0132                     u185_20:
  5776     0132                     i1l2083:
  5777     0132  082E               	movf	i1vfpfcnvrt@c,w
  5778     0133  1D03               	btfss	3,2
  5779     0134  2936               	goto	u186_21
  5780     0135  2937               	goto	u186_20
  5781     0136                     u186_21:
  5782     0136  28FC               	goto	i1l2075
  5783     0137                     u186_20:
  5784     0137                     i1l2085:
  5785                           
  5786                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1417:    if (c != 0 
      +                          && done) {
  5787     0137  082E               	movf	i1vfpfcnvrt@c,w
  5788     0138  1903               	btfsc	3,2
  5789     0139  293B               	goto	u187_21
  5790     013A  293C               	goto	u187_20
  5791     013B                     u187_21:
  5792     013B  2963               	goto	i1l2097
  5793     013C                     u187_20:
  5794     013C                     i1l2087:
  5795     013C  0824               	movf	i1vfpfcnvrt@done,w
  5796     013D  1903               	btfsc	3,2
  5797     013E  2940               	goto	u188_21
  5798     013F  2941               	goto	u188_20
  5799     0140                     u188_21:
  5800     0140  2963               	goto	i1l2097
  5801     0141                     u188_20:
  5802     0141                     i1l2089:
  5803                           
  5804                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1418:     dbuf[--c] 
      +                          = '-';
  5805     0141  3001               	movlw	1
  5806     0142  02AE               	subwf	i1vfpfcnvrt@c,f
  5807     0143  082E               	movf	i1vfpfcnvrt@c,w
  5808     0144  3E4E               	addlw	(low (_dbuf| 0))& (0+255)
  5809     0145  0086               	movwf	6
  5810     0146  0187               	clrf	7
  5811     0147  302D               	movlw	45
  5812     0148  0081               	movwf	1
  5813     0149                     i1l2091:
  5814                           
  5815                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1420:     cnt++;
  5816     0149  3001               	movlw	1
  5817     014A  07A5               	addwf	i1vfpfcnvrt@cnt,f
  5818     014B  3000               	movlw	0
  5819     014C  3DA6               	addwfc	i1vfpfcnvrt@cnt+1,f
  5820     014D  2963               	goto	i1l2097
  5821     014E                     i1l2093:
  5822                           
  5823                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1424:     fputc(dbuf
      +                          [c++], fp);
  5824     014E  082E               	movf	i1vfpfcnvrt@c,w
  5825     014F  3E4E               	addlw	(low (_dbuf| 0))& (0+255)
  5826     0150  0086               	movwf	6
  5827     0151  0187               	clrf	7
  5828     0152  0801               	movf	1,w
  5829     0153  00A0               	movwf	??i1_vfpfcnvrt
  5830     0154  01A1               	clrf	??i1_vfpfcnvrt+1
  5831     0155  0820               	movf	??i1_vfpfcnvrt,w
  5832     0156  00F0               	movwf	i1fputc@c
  5833     0157  0821               	movf	??i1_vfpfcnvrt+1,w
  5834     0158  00F1               	movwf	i1fputc@c+1
  5835     0159  0827               	movf	i1vfpfcnvrt@fp,w
  5836     015A  00F2               	movwf	i1fputc@fp
  5837     015B  3185  25EC  3180   	fcall	i1_fputc
  5838     015E                     i1l2095:
  5839     015E  3001               	movlw	1
  5840     015F  0020               	movlb	0	; select bank0
  5841     0160  00A0               	movwf	??i1_vfpfcnvrt
  5842     0161  0820               	movf	??i1_vfpfcnvrt,w
  5843     0162  07AE               	addwf	i1vfpfcnvrt@c,f
  5844     0163                     i1l2097:
  5845                           
  5846                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1423:    while (c !=
      +                           sizeof(dbuf)) {
  5847     0163  3020               	movlw	32
  5848     0164  062E               	xorwf	i1vfpfcnvrt@c,w
  5849     0165  1D03               	btfss	3,2
  5850     0166  2968               	goto	u189_21
  5851     0167  2969               	goto	u189_20
  5852     0168                     u189_21:
  5853     0168  294E               	goto	i1l2093
  5854     0169                     u189_20:
  5855     0169                     i1l2099:
  5856                           
  5857                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1427:    return cnt;
  5858     0169  0826               	movf	i1vfpfcnvrt@cnt+1,w
  5859     016A  00FC               	movwf	?i1_vfpfcnvrt+1
  5860     016B  0825               	movf	i1vfpfcnvrt@cnt,w
  5861     016C  00FB               	movwf	?i1_vfpfcnvrt
  5862     016D  29E8               	goto	i1l823
  5863     016E                     i1l2103:
  5864                           
  5865                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1595:   if (*cp == '
      +                          n') {
  5866     016E  082C               	movf	i1vfpfcnvrt@cp,w
  5867     016F  0084               	movwf	4
  5868     0170  082D               	movf	i1vfpfcnvrt@cp+1,w
  5869     0171  0085               	movwf	5
  5870     0172  0012               	moviw fsr0++
  5871     0173  3A6E               	xorlw	110
  5872     0174  1D03               	btfss	3,2
  5873     0175  2977               	goto	u190_21
  5874     0176  2978               	goto	u190_20
  5875     0177                     u190_21:
  5876     0177  2998               	goto	i1l2113
  5877     0178                     u190_20:
  5878     0178                     i1l2105:
  5879                           
  5880                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1638:    *(*(int* *)
      +                          __va_arg(*(int* **)ap, (int*)0)) = (int) nout;
  5881     0178  087C               	movf	i1vfpfcnvrt@ap,w
  5882     0179  0086               	movwf	6
  5883     017A  0187               	clrf	7
  5884     017B  3F40               	moviw [0]fsr1
  5885     017C  0084               	movwf	4
  5886     017D  0185               	clrf	5
  5887     017E  0A81               	incf	1,f
  5888     017F  0800               	movf	0,w
  5889     0180  0086               	movwf	6
  5890     0181  0187               	clrf	7
  5891     0182  0021               	movlb	1	; select bank1
  5892     0183  0859               	movf	_nout^(0+128),w
  5893     0184  3FC0               	movwi [0]fsr1
  5894     0185  085A               	movf	(_nout+1)^(0+128),w
  5895     0186  3FC1               	movwi [1]fsr1
  5896     0187                     i1l2107:
  5897                           
  5898                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1640:    *fmt = cp+1
      +                          ;
  5899     0187  0020               	movlb	0	; select bank0
  5900     0188  082C               	movf	i1vfpfcnvrt@cp,w
  5901     0189  3E01               	addlw	1
  5902     018A  00A0               	movwf	??i1_vfpfcnvrt
  5903     018B  3000               	movlw	0
  5904     018C  3D2D               	addwfc	i1vfpfcnvrt@cp+1,w
  5905     018D  00A1               	movwf	??i1_vfpfcnvrt+1
  5906     018E  087B               	movf	i1vfpfcnvrt@fmt,w
  5907     018F  0086               	movwf	6
  5908     0190  0187               	clrf	7
  5909     0191  0820               	movf	??i1_vfpfcnvrt,w
  5910     0192  3FC0               	movwi [0]fsr1
  5911     0193  0821               	movf	??i1_vfpfcnvrt+1,w
  5912     0194  3FC1               	movwi [1]fsr1
  5913     0195                     i1l2109:
  5914                           
  5915                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1641:    return (int
      +                          ) 0;
  5916     0195  01FB               	clrf	?i1_vfpfcnvrt
  5917     0196  01FC               	clrf	?i1_vfpfcnvrt+1
  5918     0197  29E8               	goto	i1l823
  5919     0198                     i1l2113:
  5920                           
  5921                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1798:         if ((*
      +                          fmt)[0] == '%') {
  5922     0198  087B               	movf	i1vfpfcnvrt@fmt,w
  5923     0199  0086               	movwf	6
  5924     019A  0187               	clrf	7
  5925     019B  3F40               	moviw [0]fsr1
  5926     019C  00A0               	movwf	??i1_vfpfcnvrt
  5927     019D  3F41               	moviw [1]fsr1
  5928     019E  00A1               	movwf	??i1_vfpfcnvrt+1
  5929     019F  0820               	movf	??i1_vfpfcnvrt,w
  5930     01A0  0084               	movwf	4
  5931     01A1  0821               	movf	??i1_vfpfcnvrt+1,w
  5932     01A2  0085               	movwf	5
  5933     01A3  0012               	moviw fsr0++
  5934     01A4  3A25               	xorlw	37
  5935     01A5  1D03               	btfss	3,2
  5936     01A6  29A8               	goto	u191_21
  5937     01A7  29A9               	goto	u191_20
  5938     01A8                     u191_21:
  5939     01A8  29BF               	goto	i1l2123
  5940     01A9                     u191_20:
  5941     01A9                     i1l2115:
  5942                           
  5943                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1799:             ++
      +                          *fmt;
  5944     01A9  087B               	movf	i1vfpfcnvrt@fmt,w
  5945     01AA  0086               	movwf	6
  5946     01AB  0187               	clrf	7
  5947     01AC  3001               	movlw	1
  5948     01AD  0781               	addwf	1,f
  5949     01AE  3141               	addfsr 1,1
  5950     01AF  1803               	skipnc
  5951     01B0  0A81               	incf	1,f
  5952     01B1                     i1l2117:
  5953                           
  5954                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1800:             fp
      +                          utc((int)'%', fp);
  5955     01B1  3025               	movlw	37
  5956     01B2  00F0               	movwf	i1fputc@c
  5957     01B3  3000               	movlw	0
  5958     01B4  00F1               	movwf	i1fputc@c+1
  5959     01B5  0827               	movf	i1vfpfcnvrt@fp,w
  5960     01B6  00F2               	movwf	i1fputc@fp
  5961     01B7  3185  25EC  3180   	fcall	i1_fputc
  5962     01BA                     i1l2119:
  5963                           
  5964                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1801:             re
      +                          turn (int) 1;
  5965     01BA  3001               	movlw	1
  5966     01BB  00FB               	movwf	?i1_vfpfcnvrt
  5967     01BC  3000               	movlw	0
  5968     01BD  00FC               	movwf	?i1_vfpfcnvrt+1
  5969     01BE  29E8               	goto	i1l823
  5970     01BF                     i1l2123:
  5971                           
  5972                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  5973     01BF  087B               	movf	i1vfpfcnvrt@fmt,w
  5974     01C0  0086               	movwf	6
  5975     01C1  0187               	clrf	7
  5976     01C2  3001               	movlw	1
  5977     01C3  0781               	addwf	1,f
  5978     01C4  3141               	addfsr 1,1
  5979     01C5  1803               	skipnc
  5980     01C6  0A81               	incf	1,f
  5981     01C7  2995               	goto	i1l2109
  5982     01C8                     i1l2129:
  5983                           
  5984                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  5985     01C8  087B               	movf	i1vfpfcnvrt@fmt,w
  5986     01C9  0086               	movwf	6
  5987     01CA  0187               	clrf	7
  5988     01CB  3F40               	moviw [0]fsr1
  5989     01CC  00A0               	movwf	??i1_vfpfcnvrt
  5990     01CD  3F41               	moviw [1]fsr1
  5991     01CE  00A1               	movwf	??i1_vfpfcnvrt+1
  5992     01CF  0820               	movf	??i1_vfpfcnvrt,w
  5993     01D0  0084               	movwf	4
  5994     01D1  0821               	movf	??i1_vfpfcnvrt+1,w
  5995     01D2  0085               	movwf	5
  5996     01D3  0800               	movf	0,w	;code access
  5997     01D4  00A2               	movwf	??i1_vfpfcnvrt+2
  5998     01D5  01A3               	clrf	??i1_vfpfcnvrt+3
  5999     01D6  0822               	movf	??i1_vfpfcnvrt+2,w
  6000     01D7  00F0               	movwf	i1fputc@c
  6001     01D8  0823               	movf	??i1_vfpfcnvrt+3,w
  6002     01D9  00F1               	movwf	i1fputc@c+1
  6003     01DA  0827               	movf	i1vfpfcnvrt@fp,w
  6004     01DB  00F2               	movwf	i1fputc@fp
  6005     01DC  3185  25EC  3180   	fcall	i1_fputc
  6006     01DF                     i1l2131:
  6007                           
  6008                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1812:     ++*fmt;
  6009     01DF  087B               	movf	i1vfpfcnvrt@fmt,w
  6010     01E0  0086               	movwf	6
  6011     01E1  0187               	clrf	7
  6012     01E2  3001               	movlw	1
  6013     01E3  0781               	addwf	1,f
  6014     01E4  3141               	addfsr 1,1
  6015     01E5  1803               	skipnc
  6016     01E6  0A81               	incf	1,f
  6017     01E7  29BA               	goto	i1l2119
  6018     01E8                     i1l823:
  6019     01E8  0008               	return
  6020     01E9                     __end_ofi1_vfpfcnvrt:
  6021                           
  6022                           	psect	text34
  6023     05EC                     __ptext34:	
  6024 ;; *************** function i1_fputc *****************
  6025 ;; Defined at:
  6026 ;;		line 8 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputc.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;  c               2    0[COMMON] int 
  6029 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6030 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  2    0[COMMON] int 
  6035 ;; Registers used:
  6036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6042 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6044 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6045 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6046 ;;Total ram usage:        8 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; Hardware stack levels required when called: 1
  6049 ;; This function calls:
  6050 ;;		i1_putch
  6051 ;; This function is called by:
  6052 ;;		i1_vfpfcnvrt
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056     05EC                     i1_fputc:	
  6057                           ;psect for function i1_fputc
  6058                           
  6059     05EC                     i1l1945:	
  6060                           ;incstack = 0
  6061                           ; Regs used in i1_fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6062                           
  6063     05EC  0872               	movf	i1fputc@fp,w
  6064     05ED  1903               	btfsc	3,2
  6065     05EE  2DF0               	goto	u164_21
  6066     05EF  2DF1               	goto	u164_20
  6067     05F0                     u164_21:
  6068     05F0  2DF6               	goto	i1l1949
  6069     05F1                     u164_20:
  6070     05F1                     i1l1947:
  6071     05F1  0872               	movf	i1fputc@fp,w
  6072     05F2  1D03               	btfss	3,2
  6073     05F3  2DF5               	goto	u165_21
  6074     05F4  2DF6               	goto	u165_20
  6075     05F5                     u165_21:
  6076     05F5  2DFB               	goto	i1l1951
  6077     05F6                     u165_20:
  6078     05F6                     i1l1949:
  6079     05F6  0870               	movf	i1fputc@c,w
  6080     05F7  3180  2002  3185   	fcall	i1_putch
  6081     05FA  2E3F               	goto	i1l850
  6082     05FB                     i1l1951:
  6083     05FB  0872               	movf	i1fputc@fp,w
  6084     05FC  3E09               	addlw	9
  6085     05FD  0086               	movwf	6
  6086     05FE  0187               	clrf	7
  6087     05FF  0016               	moviw fsr1++
  6088     0600  0401               	iorwf	1,w
  6089     0601  1903               	btfsc	3,2
  6090     0602  2E04               	goto	u166_21
  6091     0603  2E05               	goto	u166_20
  6092     0604                     u166_21:
  6093     0604  2E23               	goto	i1l1955
  6094     0605                     u166_20:
  6095     0605                     i1l1953:
  6096     0605  0872               	movf	i1fputc@fp,w
  6097     0606  3E09               	addlw	9
  6098     0607  0086               	movwf	6
  6099     0608  0187               	clrf	7
  6100     0609  3F40               	moviw [0]fsr1
  6101     060A  00F3               	movwf	??i1_fputc
  6102     060B  3F41               	moviw [1]fsr1
  6103     060C  00F4               	movwf	??i1_fputc+1
  6104     060D  0872               	movf	i1fputc@fp,w
  6105     060E  3E02               	addlw	2
  6106     060F  0086               	movwf	6
  6107     0610  0187               	clrf	7
  6108     0611  3F40               	moviw [0]fsr1
  6109     0612  00F5               	movwf	??i1_fputc+2
  6110     0613  3F41               	moviw [1]fsr1
  6111     0614  00F6               	movwf	??i1_fputc+3
  6112     0615  0876               	movf	??i1_fputc+3,w
  6113     0616  3A80               	xorlw	128
  6114     0617  00F7               	movwf	??i1_fputc+4
  6115     0618  0874               	movf	??i1_fputc+1,w
  6116     0619  3A80               	xorlw	128
  6117     061A  0277               	subwf	??i1_fputc+4,w
  6118     061B  1D03               	skipz
  6119     061C  2E1F               	goto	u167_25
  6120     061D  0873               	movf	??i1_fputc,w
  6121     061E  0275               	subwf	??i1_fputc+2,w
  6122     061F                     u167_25:
  6123     061F  1803               	skipnc
  6124     0620  2E22               	goto	u167_21
  6125     0621  2E23               	goto	u167_20
  6126     0622                     u167_21:
  6127     0622  2E3F               	goto	i1l850
  6128     0623                     u167_20:
  6129     0623                     i1l1955:
  6130     0623  0872               	movf	i1fputc@fp,w
  6131     0624  3E02               	addlw	2
  6132     0625  0086               	movwf	6
  6133     0626  0187               	clrf	7
  6134     0627  0872               	movf	i1fputc@fp,w
  6135     0628  0084               	movwf	4
  6136     0629  0185               	clrf	5
  6137     062A  3F00               	moviw [0]fsr0
  6138     062B  00F3               	movwf	??i1_fputc
  6139     062C  3F01               	moviw [1]fsr0
  6140     062D  00F4               	movwf	??i1_fputc+1
  6141     062E  3F40               	moviw [0]fsr1
  6142     062F  0773               	addwf	??i1_fputc,w
  6143     0630  0084               	movwf	4
  6144     0631  3F41               	moviw [1]fsr1
  6145     0632  3D74               	addwfc	??i1_fputc+1,w
  6146     0633  0085               	movwf	5
  6147     0634  0870               	movf	i1fputc@c,w
  6148     0635  0080               	movwf	0
  6149     0636                     i1l1957:
  6150     0636  0872               	movf	i1fputc@fp,w
  6151     0637  3E02               	addlw	2
  6152     0638  0086               	movwf	6
  6153     0639  0187               	clrf	7
  6154     063A  3001               	movlw	1
  6155     063B  0781               	addwf	1,f
  6156     063C  3141               	addfsr 1,1
  6157     063D  1803               	skipnc
  6158     063E  0A81               	incf	1,f
  6159     063F                     i1l850:
  6160     063F  0008               	return
  6161     0640                     __end_ofi1_fputc:
  6162                           
  6163                           	psect	text35
  6164     0002                     __ptext35:	
  6165 ;; *************** function i1_putch *****************
  6166 ;; Defined at:
  6167 ;;		line 7 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/putch.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  c               1    wreg     unsigned char 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  c               1  (no storage) unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6185 ;;Total ram usage:        0 bytes
  6186 ;; Hardware stack levels used: 1
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		i1_fputc
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194     0002                     i1_putch:	
  6195                           ;psect for function i1_putch
  6196                           
  6197     0002                     i1l861:	
  6198                           ;incstack = 0
  6199                           ; Regs used in i1_putch: [wreg]
  6200                           
  6201     0002  0008               	return
  6202     0003                     __end_ofi1_putch:
  6203                           
  6204                           	psect	text36
  6205     0DDE                     __ptext36:	
  6206 ;; *************** function i1_abs *****************
  6207 ;; Defined at:
  6208 ;;		line 1 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/abs.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;  a               2    7[COMMON] int 
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;		None
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  2    7[COMMON] int 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2, status,0
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6225 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6226 ;;Total ram usage:        4 bytes
  6227 ;; Hardware stack levels used: 1
  6228 ;; This function calls:
  6229 ;;		Nothing
  6230 ;; This function is called by:
  6231 ;;		i1_vfpfcnvrt
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235     0DDE                     i1_abs:	
  6236                           ;psect for function i1_abs
  6237                           
  6238     0DDE                     i1l1937:	
  6239                           ;incstack = 0
  6240                           ; Regs used in i1_abs: [wreg+status,2+status,0]
  6241                           
  6242     0DDE  1BF8               	btfsc	i1abs@a+1,7
  6243     0DDF  2DE1               	goto	u163_21
  6244     0DE0  2DE2               	goto	u163_20
  6245     0DE1                     u163_21:
  6246     0DE1  2DE3               	goto	i1l1941
  6247     0DE2                     u163_20:
  6248     0DE2                     i1l1939:
  6249     0DE2  2DEE               	goto	i1l838
  6250     0DE3                     i1l1941:
  6251     0DE3  0977               	comf	i1abs@a,w
  6252     0DE4  00F9               	movwf	??i1_abs
  6253     0DE5  0978               	comf	i1abs@a+1,w
  6254     0DE6  00FA               	movwf	??i1_abs+1
  6255     0DE7  0AF9               	incf	??i1_abs,f
  6256     0DE8  1903               	skipnz
  6257     0DE9  0AFA               	incf	??i1_abs+1,f
  6258     0DEA  0879               	movf	??i1_abs,w
  6259     0DEB  00F7               	movwf	?i1_abs
  6260     0DEC  087A               	movf	??i1_abs+1,w
  6261     0DED  00F8               	movwf	?i1_abs+1
  6262     0DEE                     i1l838:
  6263     0DEE  0008               	return
  6264     0DEF                     __end_ofi1_abs:
  6265                           
  6266                           	psect	text37
  6267     0640                     __ptext37:	
  6268 ;; *************** function i1___awmod *****************
  6269 ;; Defined at:
  6270 ;;		line 5 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/awmod.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  divisor         2    0[COMMON] int 
  6273 ;;  dividend        2    2[COMMON] int 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  sign            1    6[COMMON] unsigned char 
  6276 ;;  counter         1    5[COMMON] unsigned char 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  2    0[COMMON] int 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6289 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6290 ;;Total ram usage:        7 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		i1_vfpfcnvrt
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299     0640                     i1___awmod:	
  6300                           ;psect for function i1___awmod
  6301                           
  6302     0640                     i1l1899:	
  6303                           ;incstack = 0
  6304                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  6305                           
  6306     0640  01F6               	clrf	i1___awmod@sign
  6307     0641                     i1l1901:
  6308     0641  1FF3               	btfss	i1___awmod@dividend+1,7
  6309     0642  2E44               	goto	u154_21
  6310     0643  2E45               	goto	u154_20
  6311     0644                     u154_21:
  6312     0644  2E4C               	goto	i1l1907
  6313     0645                     u154_20:
  6314     0645                     i1l1903:
  6315     0645  09F2               	comf	i1___awmod@dividend,f
  6316     0646  09F3               	comf	i1___awmod@dividend+1,f
  6317     0647  0AF2               	incf	i1___awmod@dividend,f
  6318     0648  1903               	skipnz
  6319     0649  0AF3               	incf	i1___awmod@dividend+1,f
  6320     064A                     i1l1905:
  6321     064A  01F6               	clrf	i1___awmod@sign
  6322     064B  0AF6               	incf	i1___awmod@sign,f
  6323     064C                     i1l1907:
  6324     064C  1FF1               	btfss	i1___awmod@divisor+1,7
  6325     064D  2E4F               	goto	u155_21
  6326     064E  2E50               	goto	u155_20
  6327     064F                     u155_21:
  6328     064F  2E55               	goto	i1l1911
  6329     0650                     u155_20:
  6330     0650                     i1l1909:
  6331     0650  09F0               	comf	i1___awmod@divisor,f
  6332     0651  09F1               	comf	i1___awmod@divisor+1,f
  6333     0652  0AF0               	incf	i1___awmod@divisor,f
  6334     0653  1903               	skipnz
  6335     0654  0AF1               	incf	i1___awmod@divisor+1,f
  6336     0655                     i1l1911:
  6337     0655  0870               	movf	i1___awmod@divisor,w
  6338     0656  0471               	iorwf	i1___awmod@divisor+1,w
  6339     0657  1903               	btfsc	3,2
  6340     0658  2E5A               	goto	u156_21
  6341     0659  2E5B               	goto	u156_20
  6342     065A                     u156_21:
  6343     065A  2E84               	goto	i1l1929
  6344     065B                     u156_20:
  6345     065B                     i1l1913:
  6346     065B  01F5               	clrf	i1___awmod@counter
  6347     065C  0AF5               	incf	i1___awmod@counter,f
  6348     065D  2E67               	goto	i1l1919
  6349     065E                     i1l1915:
  6350     065E  3001               	movlw	1
  6351     065F                     u157_25:
  6352     065F  35F0               	lslf	i1___awmod@divisor,f
  6353     0660  0DF1               	rlf	i1___awmod@divisor+1,f
  6354     0661  0B89               	decfsz	9,f
  6355     0662  2E5F               	goto	u157_25
  6356     0663                     i1l1917:
  6357     0663  3001               	movlw	1
  6358     0664  00F4               	movwf	??i1___awmod
  6359     0665  0874               	movf	??i1___awmod,w
  6360     0666  07F5               	addwf	i1___awmod@counter,f
  6361     0667                     i1l1919:
  6362     0667  1FF1               	btfss	i1___awmod@divisor+1,7
  6363     0668  2E6A               	goto	u158_21
  6364     0669  2E6B               	goto	u158_20
  6365     066A                     u158_21:
  6366     066A  2E5E               	goto	i1l1915
  6367     066B                     u158_20:
  6368     066B                     i1l1921:
  6369     066B  0871               	movf	i1___awmod@divisor+1,w
  6370     066C  0273               	subwf	i1___awmod@dividend+1,w
  6371     066D  1D03               	skipz
  6372     066E  2E71               	goto	u159_25
  6373     066F  0870               	movf	i1___awmod@divisor,w
  6374     0670  0272               	subwf	i1___awmod@dividend,w
  6375     0671                     u159_25:
  6376     0671  1C03               	skipc
  6377     0672  2E74               	goto	u159_21
  6378     0673  2E75               	goto	u159_20
  6379     0674                     u159_21:
  6380     0674  2E79               	goto	i1l1925
  6381     0675                     u159_20:
  6382     0675                     i1l1923:
  6383     0675  0870               	movf	i1___awmod@divisor,w
  6384     0676  02F2               	subwf	i1___awmod@dividend,f
  6385     0677  0871               	movf	i1___awmod@divisor+1,w
  6386     0678  3BF3               	subwfb	i1___awmod@dividend+1,f
  6387     0679                     i1l1925:
  6388     0679  3001               	movlw	1
  6389     067A                     u160_25:
  6390     067A  36F1               	lsrf	i1___awmod@divisor+1,f
  6391     067B  0CF0               	rrf	i1___awmod@divisor,f
  6392     067C  0B89               	decfsz	9,f
  6393     067D  2E7A               	goto	u160_25
  6394     067E                     i1l1927:
  6395     067E  3001               	movlw	1
  6396     067F  02F5               	subwf	i1___awmod@counter,f
  6397     0680  1D03               	btfss	3,2
  6398     0681  2E83               	goto	u161_21
  6399     0682  2E84               	goto	u161_20
  6400     0683                     u161_21:
  6401     0683  2E6B               	goto	i1l1921
  6402     0684                     u161_20:
  6403     0684                     i1l1929:
  6404     0684  0876               	movf	i1___awmod@sign,w
  6405     0685  1903               	btfsc	3,2
  6406     0686  2E88               	goto	u162_21
  6407     0687  2E89               	goto	u162_20
  6408     0688                     u162_21:
  6409     0688  2E8E               	goto	i1l1933
  6410     0689                     u162_20:
  6411     0689                     i1l1931:
  6412     0689  09F2               	comf	i1___awmod@dividend,f
  6413     068A  09F3               	comf	i1___awmod@dividend+1,f
  6414     068B  0AF2               	incf	i1___awmod@dividend,f
  6415     068C  1903               	skipnz
  6416     068D  0AF3               	incf	i1___awmod@dividend+1,f
  6417     068E                     i1l1933:
  6418     068E  0873               	movf	i1___awmod@dividend+1,w
  6419     068F  00F1               	movwf	?i1___awmod+1
  6420     0690  0872               	movf	i1___awmod@dividend,w
  6421     0691  00F0               	movwf	?i1___awmod
  6422     0692                     i1l484:
  6423     0692  0008               	return
  6424     0693                     __end_ofi1___awmod:
  6425                           
  6426                           	psect	text38
  6427     04E3                     __ptext38:	
  6428 ;; *************** function i1___awdiv *****************
  6429 ;; Defined at:
  6430 ;;		line 5 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/awdiv.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  divisor         2    0[COMMON] int 
  6433 ;;  dividend        2    2[COMMON] int 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  quotient        2    7[COMMON] int 
  6436 ;;  sign            1    6[COMMON] unsigned char 
  6437 ;;  counter         1    5[COMMON] unsigned char 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  2    0[COMMON] int 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2, status,0
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6448 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6450 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6451 ;;Total ram usage:        9 bytes
  6452 ;; Hardware stack levels used: 1
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		i1_vfpfcnvrt
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460     04E3                     i1___awdiv:	
  6461                           ;psect for function i1___awdiv
  6462                           
  6463     04E3                     i1l1855:	
  6464                           ;incstack = 0
  6465                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  6466                           
  6467     04E3  01F6               	clrf	i1___awdiv@sign
  6468     04E4                     i1l1857:
  6469     04E4  1FF1               	btfss	i1___awdiv@divisor+1,7
  6470     04E5  2CE7               	goto	u144_21
  6471     04E6  2CE8               	goto	u144_20
  6472     04E7                     u144_21:
  6473     04E7  2CEF               	goto	i1l1863
  6474     04E8                     u144_20:
  6475     04E8                     i1l1859:
  6476     04E8  09F0               	comf	i1___awdiv@divisor,f
  6477     04E9  09F1               	comf	i1___awdiv@divisor+1,f
  6478     04EA  0AF0               	incf	i1___awdiv@divisor,f
  6479     04EB  1903               	skipnz
  6480     04EC  0AF1               	incf	i1___awdiv@divisor+1,f
  6481     04ED                     i1l1861:
  6482     04ED  01F6               	clrf	i1___awdiv@sign
  6483     04EE  0AF6               	incf	i1___awdiv@sign,f
  6484     04EF                     i1l1863:
  6485     04EF  1FF3               	btfss	i1___awdiv@dividend+1,7
  6486     04F0  2CF2               	goto	u145_21
  6487     04F1  2CF3               	goto	u145_20
  6488     04F2                     u145_21:
  6489     04F2  2CFC               	goto	i1l1869
  6490     04F3                     u145_20:
  6491     04F3                     i1l1865:
  6492     04F3  09F2               	comf	i1___awdiv@dividend,f
  6493     04F4  09F3               	comf	i1___awdiv@dividend+1,f
  6494     04F5  0AF2               	incf	i1___awdiv@dividend,f
  6495     04F6  1903               	skipnz
  6496     04F7  0AF3               	incf	i1___awdiv@dividend+1,f
  6497     04F8                     i1l1867:
  6498     04F8  3001               	movlw	1
  6499     04F9  00F4               	movwf	??i1___awdiv
  6500     04FA  0874               	movf	??i1___awdiv,w
  6501     04FB  06F6               	xorwf	i1___awdiv@sign,f
  6502     04FC                     i1l1869:
  6503     04FC  01F7               	clrf	i1___awdiv@quotient
  6504     04FD  01F8               	clrf	i1___awdiv@quotient+1
  6505     04FE                     i1l1871:
  6506     04FE  0870               	movf	i1___awdiv@divisor,w
  6507     04FF  0471               	iorwf	i1___awdiv@divisor+1,w
  6508     0500  1903               	btfsc	3,2
  6509     0501  2D03               	goto	u146_21
  6510     0502  2D04               	goto	u146_20
  6511     0503                     u146_21:
  6512     0503  2D33               	goto	i1l1891
  6513     0504                     u146_20:
  6514     0504                     i1l1873:
  6515     0504  01F5               	clrf	i1___awdiv@counter
  6516     0505  0AF5               	incf	i1___awdiv@counter,f
  6517     0506  2D10               	goto	i1l1879
  6518     0507                     i1l1875:
  6519     0507  3001               	movlw	1
  6520     0508                     u147_25:
  6521     0508  35F0               	lslf	i1___awdiv@divisor,f
  6522     0509  0DF1               	rlf	i1___awdiv@divisor+1,f
  6523     050A  0B89               	decfsz	9,f
  6524     050B  2D08               	goto	u147_25
  6525     050C                     i1l1877:
  6526     050C  3001               	movlw	1
  6527     050D  00F4               	movwf	??i1___awdiv
  6528     050E  0874               	movf	??i1___awdiv,w
  6529     050F  07F5               	addwf	i1___awdiv@counter,f
  6530     0510                     i1l1879:
  6531     0510  1FF1               	btfss	i1___awdiv@divisor+1,7
  6532     0511  2D13               	goto	u148_21
  6533     0512  2D14               	goto	u148_20
  6534     0513                     u148_21:
  6535     0513  2D07               	goto	i1l1875
  6536     0514                     u148_20:
  6537     0514                     i1l1881:
  6538     0514  3001               	movlw	1
  6539     0515                     u149_25:
  6540     0515  35F7               	lslf	i1___awdiv@quotient,f
  6541     0516  0DF8               	rlf	i1___awdiv@quotient+1,f
  6542     0517  0B89               	decfsz	9,f
  6543     0518  2D15               	goto	u149_25
  6544     0519  0871               	movf	i1___awdiv@divisor+1,w
  6545     051A  0273               	subwf	i1___awdiv@dividend+1,w
  6546     051B  1D03               	skipz
  6547     051C  2D1F               	goto	u150_25
  6548     051D  0870               	movf	i1___awdiv@divisor,w
  6549     051E  0272               	subwf	i1___awdiv@dividend,w
  6550     051F                     u150_25:
  6551     051F  1C03               	skipc
  6552     0520  2D22               	goto	u150_21
  6553     0521  2D23               	goto	u150_20
  6554     0522                     u150_21:
  6555     0522  2D28               	goto	i1l1887
  6556     0523                     u150_20:
  6557     0523                     i1l1883:
  6558     0523  0870               	movf	i1___awdiv@divisor,w
  6559     0524  02F2               	subwf	i1___awdiv@dividend,f
  6560     0525  0871               	movf	i1___awdiv@divisor+1,w
  6561     0526  3BF3               	subwfb	i1___awdiv@dividend+1,f
  6562     0527                     i1l1885:
  6563     0527  1477               	bsf	i1___awdiv@quotient,0
  6564     0528                     i1l1887:
  6565     0528  3001               	movlw	1
  6566     0529                     u151_25:
  6567     0529  36F1               	lsrf	i1___awdiv@divisor+1,f
  6568     052A  0CF0               	rrf	i1___awdiv@divisor,f
  6569     052B  0B89               	decfsz	9,f
  6570     052C  2D29               	goto	u151_25
  6571     052D                     i1l1889:
  6572     052D  3001               	movlw	1
  6573     052E  02F5               	subwf	i1___awdiv@counter,f
  6574     052F  1D03               	btfss	3,2
  6575     0530  2D32               	goto	u152_21
  6576     0531  2D33               	goto	u152_20
  6577     0532                     u152_21:
  6578     0532  2D14               	goto	i1l1881
  6579     0533                     u152_20:
  6580     0533                     i1l1891:
  6581     0533  0876               	movf	i1___awdiv@sign,w
  6582     0534  1903               	btfsc	3,2
  6583     0535  2D37               	goto	u153_21
  6584     0536  2D38               	goto	u153_20
  6585     0537                     u153_21:
  6586     0537  2D3D               	goto	i1l1895
  6587     0538                     u153_20:
  6588     0538                     i1l1893:
  6589     0538  09F7               	comf	i1___awdiv@quotient,f
  6590     0539  09F8               	comf	i1___awdiv@quotient+1,f
  6591     053A  0AF7               	incf	i1___awdiv@quotient,f
  6592     053B  1903               	skipnz
  6593     053C  0AF8               	incf	i1___awdiv@quotient+1,f
  6594     053D                     i1l1895:
  6595     053D  0878               	movf	i1___awdiv@quotient+1,w
  6596     053E  00F1               	movwf	?i1___awdiv+1
  6597     053F  0877               	movf	i1___awdiv@quotient,w
  6598     0540  00F0               	movwf	?i1___awdiv
  6599     0541                     i1l471:
  6600     0541  0008               	return
  6601     0542                     __end_ofi1___awdiv:
  6602                           
  6603                           	psect	text39
  6604     0E8F                     __ptext39:	
  6605 ;; *************** function i1_LCD_WriteString *****************
  6606 ;; Defined at:
  6607 ;;		line 73 in file "../Ressources/lcd.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  data            1    wreg     PTR const unsigned char 
  6610 ;;		 -> String(3), 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  data            1    5[COMMON] PTR const unsigned char 
  6613 ;;		 -> String(3), 
  6614 ;;  i               1    6[COMMON] unsigned char 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  1    wreg      void 
  6617 ;; Registers used:
  6618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6627 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6628 ;;Total ram usage:        3 bytes
  6629 ;; Hardware stack levels used: 1
  6630 ;; Hardware stack levels required when called: 3
  6631 ;; This function calls:
  6632 ;;		i1_LCD_WriteByte
  6633 ;; This function is called by:
  6634 ;;		i1_lcd
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638     0E8F                     i1_LCD_WriteString:	
  6639                           ;psect for function i1_LCD_WriteString
  6640                           
  6641                           
  6642                           ;incstack = 0
  6643                           ; Regs used in i1_LCD_WriteString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6644                           ;i1LCD_WriteString@data stored from wreg
  6645     0E8F  00F5               	movwf	i1LCD_WriteString@data
  6646     0E90                     i1l2325:
  6647                           
  6648                           ;../Ressources/lcd.c: 74:     char i = 0;
  6649     0E90  01F6               	clrf	i1LCD_WriteString@i
  6650                           
  6651                           ;../Ressources/lcd.c: 75:     while (data[i]) {
  6652     0E91  2EA0               	goto	i1l2331
  6653     0E92                     i1l2327:
  6654                           
  6655                           ;../Ressources/lcd.c: 76:         LCD_WriteByte(data[i++]);
  6656     0E92  0876               	movf	i1LCD_WriteString@i,w
  6657     0E93  0775               	addwf	i1LCD_WriteString@data,w
  6658     0E94  00F4               	movwf	??i1_LCD_WriteString
  6659     0E95  0874               	movf	??i1_LCD_WriteString,w
  6660     0E96  0086               	movwf	6
  6661     0E97  0187               	clrf	7
  6662     0E98  0801               	movf	1,w
  6663     0E99  318E  2638  318E   	fcall	i1_LCD_WriteByte
  6664     0E9C                     i1l2329:
  6665     0E9C  3001               	movlw	1
  6666     0E9D  00F4               	movwf	??i1_LCD_WriteString
  6667     0E9E  0874               	movf	??i1_LCD_WriteString,w
  6668     0E9F  07F6               	addwf	i1LCD_WriteString@i,f
  6669     0EA0                     i1l2331:
  6670                           
  6671                           ;../Ressources/lcd.c: 75:     while (data[i]) {
  6672     0EA0  0876               	movf	i1LCD_WriteString@i,w
  6673     0EA1  0775               	addwf	i1LCD_WriteString@data,w
  6674     0EA2  00F4               	movwf	??i1_LCD_WriteString
  6675     0EA3  0874               	movf	??i1_LCD_WriteString,w
  6676     0EA4  0086               	movwf	6
  6677     0EA5  0187               	clrf	7
  6678     0EA6  0801               	movf	1,w
  6679     0EA7  1D03               	btfss	3,2
  6680     0EA8  2EAA               	goto	u216_21
  6681     0EA9  2EAB               	goto	u216_20
  6682     0EAA                     u216_21:
  6683     0EAA  2E92               	goto	i1l2327
  6684     0EAB                     u216_20:
  6685     0EAB                     i1l33:
  6686     0EAB  0008               	return
  6687     0EAC                     __end_ofi1_LCD_WriteString:
  6688                           
  6689                           	psect	text40
  6690     0E38                     __ptext40:	
  6691 ;; *************** function i1_LCD_WriteByte *****************
  6692 ;; Defined at:
  6693 ;;		line 67 in file "../Ressources/lcd.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  data            1    wreg     unsigned char 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  data            1    3[COMMON] unsigned char 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      void 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0, pclath, cstack
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6711 ;;Total ram usage:        1 bytes
  6712 ;; Hardware stack levels used: 1
  6713 ;; Hardware stack levels required when called: 2
  6714 ;; This function calls:
  6715 ;;		i1_LCD_WriteIOExpander
  6716 ;; This function is called by:
  6717 ;;		i1_LCD_WriteString
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721     0E38                     i1_LCD_WriteByte:	
  6722                           ;psect for function i1_LCD_WriteByte
  6723                           
  6724                           
  6725                           ;incstack = 0
  6726                           ; Regs used in i1_LCD_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  6727                           ;i1LCD_WriteByte@data stored from wreg
  6728     0E38  00F3               	movwf	i1LCD_WriteByte@data
  6729     0E39                     i1l2161:
  6730                           
  6731                           ;../Ressources/lcd.c: 68:     LCD_WriteIOExpander(0x12, 0xE0);
  6732     0E39  30E0               	movlw	224
  6733     0E3A  00F1               	movwf	i1LCD_WriteIOExpander@data
  6734     0E3B  3012               	movlw	18
  6735     0E3C  318E  2600  318E   	fcall	i1_LCD_WriteIOExpander
  6736                           
  6737                           ;../Ressources/lcd.c: 69:     LCD_WriteIOExpander(0x13, data);
  6738     0E3F  0873               	movf	i1LCD_WriteByte@data,w
  6739     0E40  00F1               	movwf	i1LCD_WriteIOExpander@data
  6740     0E41  3013               	movlw	19
  6741     0E42  318E  2600  318E   	fcall	i1_LCD_WriteIOExpander
  6742                           
  6743                           ;../Ressources/lcd.c: 70:     LCD_WriteIOExpander(0x12, 0xA0);
  6744     0E45  30A0               	movlw	160
  6745     0E46  00F1               	movwf	i1LCD_WriteIOExpander@data
  6746     0E47  3012               	movlw	18
  6747     0E48  318E  2600  318E   	fcall	i1_LCD_WriteIOExpander
  6748     0E4B                     i1l27:
  6749     0E4B  0008               	return
  6750     0E4C                     __end_ofi1_LCD_WriteByte:
  6751                           
  6752                           	psect	text41
  6753     0DBB                     __ptext41:	
  6754 ;; *************** function i1_LCD_Clear *****************
  6755 ;; Defined at:
  6756 ;;		line 87 in file "../Ressources/lcd.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;		None
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1    wreg      void 
  6763 ;; Registers used:
  6764 ;;		wreg, status,2, status,0, pclath, cstack
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6774 ;;Total ram usage:        0 bytes
  6775 ;; Hardware stack levels used: 1
  6776 ;; Hardware stack levels required when called: 4
  6777 ;; This function calls:
  6778 ;;		i1_LCD_GoTo
  6779 ;;		i1_LCD_WriteCommand
  6780 ;; This function is called by:
  6781 ;;		i1_lcd
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785     0DBB                     i1_LCD_Clear:	
  6786                           ;psect for function i1_LCD_Clear
  6787                           
  6788     0DBB                     i1l2333:	
  6789                           ;incstack = 0
  6790                           ; Regs used in i1_LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  6791                           
  6792                           
  6793                           ;../Ressources/lcd.c: 88:     LCD_WriteCommand(0x01);
  6794     0DBB  3001               	movlw	1
  6795     0DBC  318E  2624  318D   	fcall	i1_LCD_WriteCommand
  6796                           
  6797                           ;../Ressources/lcd.c: 89:     LCD_GoTo(0, 0);
  6798     0DBF  01F4               	clrf	i1LCD_GoTo@column
  6799     0DC0  3000               	movlw	0
  6800     0DC1  318E  26AC  318D   	fcall	i1_LCD_GoTo
  6801     0DC4                     i1l44:
  6802     0DC4  0008               	return
  6803     0DC5                     __end_ofi1_LCD_Clear:
  6804                           
  6805                           	psect	text42
  6806     0EAC                     __ptext42:	
  6807 ;; *************** function i1_LCD_GoTo *****************
  6808 ;; Defined at:
  6809 ;;		line 80 in file "../Ressources/lcd.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  row             1    wreg     unsigned char 
  6812 ;;  column          1    4[COMMON] unsigned char 
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;  row             1    8[COMMON] unsigned char 
  6815 ;;  pos             1    7[COMMON] unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1    wreg      void 
  6818 ;; Registers used:
  6819 ;;		wreg, status,2, status,0, pclath, cstack
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6825 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6826 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6828 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6829 ;;Total ram usage:        5 bytes
  6830 ;; Hardware stack levels used: 1
  6831 ;; Hardware stack levels required when called: 3
  6832 ;; This function calls:
  6833 ;;		i1_LCD_WriteCommand
  6834 ;; This function is called by:
  6835 ;;		i1_LCD_Clear
  6836 ;;		i1_lcd
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840     0EAC                     i1_LCD_GoTo:	
  6841                           ;psect for function i1_LCD_GoTo
  6842                           
  6843                           
  6844                           ;incstack = 0
  6845                           ; Regs used in i1_LCD_GoTo: [wreg+status,2+status,0+pclath+cstack]
  6846                           ;i1LCD_GoTo@row stored from wreg
  6847     0EAC  00F8               	movwf	i1LCD_GoTo@row
  6848     0EAD                     i1l2163:
  6849                           
  6850                           ;../Ressources/lcd.c: 81:     if (row < 2) {
  6851     0EAD  3002               	movlw	2
  6852     0EAE  0278               	subwf	i1LCD_GoTo@row,w
  6853     0EAF  1803               	skipnc
  6854     0EB0  2EB2               	goto	u195_21
  6855     0EB1  2EB3               	goto	u195_20
  6856     0EB2                     u195_21:
  6857     0EB2  2EC9               	goto	i1l41
  6858     0EB3                     u195_20:
  6859     0EB3                     i1l2165:
  6860                           
  6861                           ;../Ressources/lcd.c: 82:         char pos = (row == 0) ? (0x80 | column) : (0xC0 | colu
      +                          mn);
  6862     0EB3  0878               	movf	i1LCD_GoTo@row,w
  6863     0EB4  1903               	btfsc	3,2
  6864     0EB5  2EB7               	goto	u196_21
  6865     0EB6  2EB8               	goto	u196_20
  6866     0EB7                     u196_21:
  6867     0EB7  2EBE               	goto	i1l2169
  6868     0EB8                     u196_20:
  6869     0EB8                     i1l2167:
  6870     0EB8  30C0               	movlw	192
  6871     0EB9  0474               	iorwf	i1LCD_GoTo@column,w
  6872     0EBA  00F5               	movwf	i1_LCD_GoTo$119
  6873     0EBB  3000               	movlw	0
  6874     0EBC  00F6               	movwf	i1_LCD_GoTo$119+1
  6875     0EBD  2EC3               	goto	i1l40
  6876     0EBE                     i1l2169:
  6877     0EBE  3080               	movlw	128
  6878     0EBF  0474               	iorwf	i1LCD_GoTo@column,w
  6879     0EC0  00F5               	movwf	i1_LCD_GoTo$119
  6880     0EC1  3000               	movlw	0
  6881     0EC2  00F6               	movwf	i1_LCD_GoTo$119+1
  6882     0EC3                     i1l40:
  6883     0EC3  0875               	movf	i1_LCD_GoTo$119,w
  6884     0EC4  00F7               	movwf	i1LCD_GoTo@pos
  6885     0EC5                     i1l2171:
  6886                           
  6887                           ;../Ressources/lcd.c: 83:         LCD_WriteCommand(pos);
  6888     0EC5  0877               	movf	i1LCD_GoTo@pos,w
  6889     0EC6  318E  2624  318E   	fcall	i1_LCD_WriteCommand
  6890     0EC9                     i1l41:
  6891     0EC9  0008               	return
  6892     0ECA                     __end_ofi1_LCD_GoTo:
  6893                           
  6894                           	psect	text43
  6895     0E24                     __ptext43:	
  6896 ;; *************** function i1_LCD_WriteCommand *****************
  6897 ;; Defined at:
  6898 ;;		line 61 in file "../Ressources/lcd.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  cmd             1    wreg     unsigned char 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;  cmd             1    3[COMMON] unsigned char 
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  1    wreg      void 
  6905 ;; Registers used:
  6906 ;;		wreg, status,2, status,0, pclath, cstack
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6916 ;;Total ram usage:        1 bytes
  6917 ;; Hardware stack levels used: 1
  6918 ;; Hardware stack levels required when called: 2
  6919 ;; This function calls:
  6920 ;;		i1_LCD_WriteIOExpander
  6921 ;; This function is called by:
  6922 ;;		i1_LCD_GoTo
  6923 ;;		i1_LCD_Clear
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927     0E24                     i1_LCD_WriteCommand:	
  6928                           ;psect for function i1_LCD_WriteCommand
  6929                           
  6930                           
  6931                           ;incstack = 0
  6932                           ; Regs used in i1_LCD_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
  6933                           ;i1LCD_WriteCommand@cmd stored from wreg
  6934     0E24  00F3               	movwf	i1LCD_WriteCommand@cmd
  6935     0E25                     i1l2049:
  6936                           
  6937                           ;../Ressources/lcd.c: 62:     LCD_WriteIOExpander(0x12, 0x60);
  6938     0E25  3060               	movlw	96
  6939     0E26  00F1               	movwf	i1LCD_WriteIOExpander@data
  6940     0E27  3012               	movlw	18
  6941     0E28  318E  2600  318E   	fcall	i1_LCD_WriteIOExpander
  6942                           
  6943                           ;../Ressources/lcd.c: 63:     LCD_WriteIOExpander(0x13, cmd);
  6944     0E2B  0873               	movf	i1LCD_WriteCommand@cmd,w
  6945     0E2C  00F1               	movwf	i1LCD_WriteIOExpander@data
  6946     0E2D  3013               	movlw	19
  6947     0E2E  318E  2600  318E   	fcall	i1_LCD_WriteIOExpander
  6948                           
  6949                           ;../Ressources/lcd.c: 64:     LCD_WriteIOExpander(0x12, 0x20);
  6950     0E31  3020               	movlw	32
  6951     0E32  00F1               	movwf	i1LCD_WriteIOExpander@data
  6952     0E33  3012               	movlw	18
  6953     0E34  318E  2600  318E   	fcall	i1_LCD_WriteIOExpander
  6954     0E37                     i1l24:
  6955     0E37  0008               	return
  6956     0E38                     __end_ofi1_LCD_WriteCommand:
  6957                           
  6958                           	psect	text44
  6959     0E00                     __ptext44:	
  6960 ;; *************** function i1_LCD_WriteIOExpander *****************
  6961 ;; Defined at:
  6962 ;;		line 53 in file "../Ressources/lcd.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;  reg             1    wreg     unsigned char 
  6965 ;;  data            1    1[COMMON] unsigned char 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;  reg             1    2[COMMON] unsigned char 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1    wreg      void 
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0, pclath, cstack
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6977 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6981 ;;Total ram usage:        2 bytes
  6982 ;; Hardware stack levels used: 1
  6983 ;; Hardware stack levels required when called: 1
  6984 ;; This function calls:
  6985 ;;		i1_SPI_Exchange8bit
  6986 ;; This function is called by:
  6987 ;;		i1_LCD_WriteCommand
  6988 ;;		i1_LCD_WriteByte
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992     0E00                     i1_LCD_WriteIOExpander:	
  6993                           ;psect for function i1_LCD_WriteIOExpander
  6994                           
  6995                           
  6996                           ;incstack = 0
  6997                           ; Regs used in i1_LCD_WriteIOExpander: [wreg+status,2+status,0+pclath+cstack]
  6998                           ;i1LCD_WriteIOExpander@reg stored from wreg
  6999     0E00  00F2               	movwf	i1LCD_WriteIOExpander@reg
  7000     0E01                     i1l1849:
  7001                           
  7002                           ;../Ressources/lcd.c: 54:     LATAbits.LATA2 = 0;
  7003     0E01  0022               	movlb	2	; select bank2
  7004     0E02  110C               	bcf	12,2	;volatile
  7005     0E03                     i1l1851:
  7006                           
  7007                           ;../Ressources/lcd.c: 55:     SPI_Exchange8bit(0x40);
  7008     0E03  3040               	movlw	64
  7009     0E04  318D  25D0  318E   	fcall	i1_SPI_Exchange8bit
  7010                           
  7011                           ;../Ressources/lcd.c: 56:     SPI_Exchange8bit(reg);
  7012     0E07  0872               	movf	i1LCD_WriteIOExpander@reg,w
  7013     0E08  318D  25D0  318E   	fcall	i1_SPI_Exchange8bit
  7014                           
  7015                           ;../Ressources/lcd.c: 57:     SPI_Exchange8bit(data);
  7016     0E0B  0871               	movf	i1LCD_WriteIOExpander@data,w
  7017     0E0C  318D  25D0  318E   	fcall	i1_SPI_Exchange8bit
  7018     0E0F                     i1l1853:
  7019                           
  7020                           ;../Ressources/lcd.c: 58:     LATAbits.LATA2 = 1;
  7021     0E0F  0022               	movlb	2	; select bank2
  7022     0E10  150C               	bsf	12,2	;volatile
  7023     0E11                     i1l21:
  7024     0E11  0008               	return
  7025     0E12                     __end_ofi1_LCD_WriteIOExpander:
  7026                           
  7027                           	psect	text45
  7028     0DD0                     __ptext45:	
  7029 ;; *************** function i1_SPI_Exchange8bit *****************
  7030 ;; Defined at:
  7031 ;;		line 66 in file "../Ressources/spi.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  data            1    wreg     unsigned char 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  data            1    0[COMMON] unsigned char 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      unsigned char 
  7038 ;; Registers used:
  7039 ;;		wreg
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7048 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7049 ;;Total ram usage:        1 bytes
  7050 ;; Hardware stack levels used: 1
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		i1_LCD_WriteIOExpander
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058     0DD0                     i1_SPI_Exchange8bit:	
  7059                           ;psect for function i1_SPI_Exchange8bit
  7060                           
  7061                           
  7062                           ;incstack = 0
  7063                           ; Regs used in i1_SPI_Exchange8bit: [wreg]
  7064                           ;i1SPI_Exchange8bit@data stored from wreg
  7065     0DD0  00F0               	movwf	i1SPI_Exchange8bit@data
  7066     0DD1                     i1l1733:
  7067                           
  7068                           ;../Ressources/spi.c: 66: char SPI_Exchange8bit(char data);../Ressources/spi.c: 67: {;..
      +                          /Ressources/spi.c: 69:     SSP1CON1bits.WCOL = 0;
  7069     0DD1  0024               	movlb	4	; select bank4
  7070     0DD2  1395               	bcf	21,7	;volatile
  7071     0DD3                     i1l1735:
  7072                           
  7073                           ;../Ressources/spi.c: 71:     SSP1BUF = data;
  7074     0DD3  0870               	movf	i1SPI_Exchange8bit@data,w
  7075     0DD4  0091               	movwf	17	;volatile
  7076                           
  7077                           ;../Ressources/spi.c: 73:     while(SSP1STATbits.BF == 0x0)
  7078     0DD5  2DD7               	goto	i1l223
  7079     0DD6                     i1l224:
  7080     0DD6  0064               	clrwdt	;# 
  7081     0DD7                     i1l223:	
  7082                           ;../Ressources/spi.c: 76:     }
  7083                           
  7084                           
  7085                           ;../Ressources/spi.c: 73:     while(SSP1STATbits.BF == 0x0)
  7086     0DD7  0024               	movlb	4	; select bank4
  7087     0DD8  1C14               	btfss	20,0	;volatile
  7088     0DD9  2DDB               	goto	u119_21
  7089     0DDA  2DDC               	goto	u119_20
  7090     0DDB                     u119_21:
  7091     0DDB  2DD6               	goto	i1l224
  7092     0DDC                     u119_20:
  7093     0DDC                     i1l225:
  7094                           
  7095                           ;../Ressources/spi.c: 78:     return (SSP1BUF);;	Return value of i1_SPI_Exchange8bit is 
      +                          never used
  7096     0DDC  0811               	movf	17,w	;volatile
  7097     0DDD                     i1l226:
  7098     0DDD  0008               	return
  7099     0DDE                     __end_ofi1_SPI_Exchange8bit:
  7100                           
  7101                           	psect	text46
  7102     033C                     __ptext46:	
  7103 ;; *************** function _cesar *****************
  7104 ;; Defined at:
  7105 ;;		line 162 in file "main.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  value           2    0[COMMON] int 
  7108 ;;  offsetBis       2    2[COMMON] int 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;  renvoi          2    9[COMMON] int 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  2    0[COMMON] int 
  7113 ;; Registers used:
  7114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7120 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7121 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7122 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7123 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7124 ;;Total ram usage:       11 bytes
  7125 ;; Hardware stack levels used: 1
  7126 ;; This function calls:
  7127 ;;		_cesar
  7128 ;; This function is called by:
  7129 ;;		_isr
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133     033C                     _cesar:	
  7134                           ;psect for function _cesar
  7135                           
  7136     033C                     i1l2235:	
  7137                           ;incstack = 0
  7138 ;; hardware stack exceeded
  7139                           ; Regs used in _cesar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7140                           
  7141                           
  7142                           ;main.c: 163:     int renvoi;;main.c: 165:     switch (Chiffrement) {
  7143     033C  2C11               	goto	i1l2273
  7144     033D                     i1l2237:
  7145                           
  7146                           ;main.c: 167:             if (value < 58) {
  7147     033D  0871               	movf	cesar@value+1,w
  7148     033E  3A80               	xorlw	128
  7149     033F  00F4               	movwf	??_cesar
  7150     0340  3080               	movlw	128
  7151     0341  0274               	subwf	??_cesar,w
  7152     0342  1D03               	skipz
  7153     0343  2B46               	goto	u199_25
  7154     0344  303A               	movlw	58
  7155     0345  0270               	subwf	cesar@value,w
  7156     0346                     u199_25:
  7157     0346  1803               	skipnc
  7158     0347  2B49               	goto	u199_21
  7159     0348  2B4A               	goto	u199_20
  7160     0349                     u199_21:
  7161     0349  2B7C               	goto	i1l2247
  7162     034A                     u199_20:
  7163     034A                     i1l2239:
  7164                           
  7165                           ;main.c: 168:                 if (value + offsetBis >= 58) {
  7166     034A  0872               	movf	cesar@offsetBis,w
  7167     034B  0770               	addwf	cesar@value,w
  7168     034C  00F4               	movwf	??_cesar
  7169     034D  0873               	movf	cesar@offsetBis+1,w
  7170     034E  3D71               	addwfc	cesar@value+1,w
  7171     034F  00F5               	movwf	??_cesar+1
  7172     0350  0875               	movf	??_cesar+1,w
  7173     0351  3A80               	xorlw	128
  7174     0352  00F6               	movwf	??_cesar+2
  7175     0353  3080               	movlw	128
  7176     0354  0276               	subwf	??_cesar+2,w
  7177     0355  1D03               	skipz
  7178     0356  2B59               	goto	u200_25
  7179     0357  303A               	movlw	58
  7180     0358  0274               	subwf	??_cesar,w
  7181     0359                     u200_25:
  7182     0359  1C03               	skipc
  7183     035A  2B5C               	goto	u200_21
  7184     035B  2B5D               	goto	u200_20
  7185     035C                     u200_21:
  7186     035C  2B75               	goto	i1l2245
  7187     035D                     u200_20:
  7188     035D                     i1l2241:
  7189                           
  7190                           ;main.c: 169:                     offsetBis = offsetBis - (58 - value);
  7191     035D  0872               	movf	cesar@offsetBis,w
  7192     035E  0770               	addwf	cesar@value,w
  7193     035F  00F4               	movwf	??_cesar
  7194     0360  0873               	movf	cesar@offsetBis+1,w
  7195     0361  3D71               	addwfc	cesar@value+1,w
  7196     0362  00F5               	movwf	??_cesar+1
  7197     0363  0874               	movf	??_cesar,w
  7198     0364  3EC6               	addlw	198
  7199     0365  00F2               	movwf	cesar@offsetBis
  7200     0366  30FF               	movlw	255
  7201     0367  3D75               	addwfc	??_cesar+1,w
  7202     0368  00F3               	movwf	cesar@offsetBis+1
  7203     0369                     i1l2243:
  7204                           
  7205                           ;main.c: 170:                     renvoi = cesar(97, offsetBis);
  7206     0369  3061               	movlw	97
  7207     036A  00F0               	movwf	cesar@value
  7208     036B  3000               	movlw	0
  7209     036C  00F1               	movwf	cesar@value+1
  7210     036D  3183  233C  3183   	fcall	_cesar
  7211     0370  0871               	movf	?_cesar+1,w
  7212     0371  00FA               	movwf	cesar@renvoi+1
  7213     0372  0870               	movf	?_cesar,w
  7214     0373  00F9               	movwf	cesar@renvoi
  7215                           
  7216                           ;main.c: 171:                 } else {
  7217     0374  2C1C               	goto	i1l2275
  7218     0375                     i1l2245:
  7219                           
  7220                           ;main.c: 172:                     renvoi = value + offsetBis;
  7221     0375  0872               	movf	cesar@offsetBis,w
  7222     0376  0770               	addwf	cesar@value,w
  7223     0377  00F9               	movwf	cesar@renvoi
  7224     0378  0873               	movf	cesar@offsetBis+1,w
  7225     0379  3D71               	addwfc	cesar@value+1,w
  7226     037A  00FA               	movwf	cesar@renvoi+1
  7227     037B  2C1C               	goto	i1l2275
  7228     037C                     i1l2247:
  7229                           
  7230                           ;main.c: 175:                 if (value + offsetBis >= 123) {
  7231     037C  0872               	movf	cesar@offsetBis,w
  7232     037D  0770               	addwf	cesar@value,w
  7233     037E  00F4               	movwf	??_cesar
  7234     037F  0873               	movf	cesar@offsetBis+1,w
  7235     0380  3D71               	addwfc	cesar@value+1,w
  7236     0381  00F5               	movwf	??_cesar+1
  7237     0382  0875               	movf	??_cesar+1,w
  7238     0383  3A80               	xorlw	128
  7239     0384  00F6               	movwf	??_cesar+2
  7240     0385  3080               	movlw	128
  7241     0386  0276               	subwf	??_cesar+2,w
  7242     0387  1D03               	skipz
  7243     0388  2B8B               	goto	u201_25
  7244     0389  307B               	movlw	123
  7245     038A  0274               	subwf	??_cesar,w
  7246     038B                     u201_25:
  7247     038B  1C03               	skipc
  7248     038C  2B8E               	goto	u201_21
  7249     038D  2B8F               	goto	u201_20
  7250     038E                     u201_21:
  7251     038E  2B75               	goto	i1l2245
  7252     038F                     u201_20:
  7253     038F                     i1l2249:
  7254                           
  7255                           ;main.c: 176:                     offsetBis = offsetBis - (123 - value);
  7256     038F  0872               	movf	cesar@offsetBis,w
  7257     0390  0770               	addwf	cesar@value,w
  7258     0391  00F4               	movwf	??_cesar
  7259     0392  0873               	movf	cesar@offsetBis+1,w
  7260     0393  3D71               	addwfc	cesar@value+1,w
  7261     0394  00F5               	movwf	??_cesar+1
  7262     0395  0874               	movf	??_cesar,w
  7263     0396  3E85               	addlw	133
  7264     0397  00F2               	movwf	cesar@offsetBis
  7265     0398  30FF               	movlw	255
  7266     0399  3D75               	addwfc	??_cesar+1,w
  7267     039A  00F3               	movwf	cesar@offsetBis+1
  7268     039B                     i1l2251:
  7269                           
  7270                           ;main.c: 177:                     renvoi = cesar(48, offsetBis);
  7271     039B  3030               	movlw	48
  7272     039C  00F0               	movwf	cesar@value
  7273     039D  3000               	movlw	0
  7274     039E  00F1               	movwf	cesar@value+1
  7275     039F  3183  233C  3183   	fcall	_cesar
  7276     03A2  0871               	movf	?_cesar+1,w
  7277     03A3  00FA               	movwf	cesar@renvoi+1
  7278     03A4  0870               	movf	?_cesar,w
  7279     03A5  00F9               	movwf	cesar@renvoi
  7280                           
  7281                           ;main.c: 178:                 } else {
  7282     03A6  2C1C               	goto	i1l2275
  7283     03A7                     i1l2255:
  7284                           
  7285                           ;main.c: 184:             if (value > 96) {
  7286     03A7  0871               	movf	cesar@value+1,w
  7287     03A8  3A80               	xorlw	128
  7288     03A9  00F4               	movwf	??_cesar
  7289     03AA  3080               	movlw	128
  7290     03AB  0274               	subwf	??_cesar,w
  7291     03AC  1D03               	skipz
  7292     03AD  2BB0               	goto	u202_25
  7293     03AE  3061               	movlw	97
  7294     03AF  0270               	subwf	cesar@value,w
  7295     03B0                     u202_25:
  7296     03B0  1C03               	skipc
  7297     03B1  2BB3               	goto	u202_21
  7298     03B2  2BB4               	goto	u202_20
  7299     03B3                     u202_21:
  7300     03B3  2BE6               	goto	i1l2265
  7301     03B4                     u202_20:
  7302     03B4                     i1l2257:
  7303                           
  7304                           ;main.c: 185:                 if (value - offsetBis <= 96) {
  7305     03B4  0872               	movf	cesar@offsetBis,w
  7306     03B5  0270               	subwf	cesar@value,w
  7307     03B6  00F4               	movwf	??_cesar
  7308     03B7  0873               	movf	cesar@offsetBis+1,w
  7309     03B8  3B71               	subwfb	cesar@value+1,w
  7310     03B9  00F5               	movwf	??_cesar+1
  7311     03BA  0875               	movf	??_cesar+1,w
  7312     03BB  3A80               	xorlw	128
  7313     03BC  00F6               	movwf	??_cesar+2
  7314     03BD  3080               	movlw	128
  7315     03BE  0276               	subwf	??_cesar+2,w
  7316     03BF  1D03               	skipz
  7317     03C0  2BC3               	goto	u203_25
  7318     03C1  3061               	movlw	97
  7319     03C2  0274               	subwf	??_cesar,w
  7320     03C3                     u203_25:
  7321     03C3  1803               	skipnc
  7322     03C4  2BC6               	goto	u203_21
  7323     03C5  2BC7               	goto	u203_20
  7324     03C6                     u203_21:
  7325     03C6  2BDF               	goto	i1l2263
  7326     03C7                     u203_20:
  7327     03C7                     i1l2259:
  7328                           
  7329                           ;main.c: 186:                     offsetBis = offsetBis - (value - 96);
  7330     03C7  0870               	movf	cesar@value,w
  7331     03C8  0272               	subwf	cesar@offsetBis,w
  7332     03C9  00F4               	movwf	??_cesar
  7333     03CA  0871               	movf	cesar@value+1,w
  7334     03CB  3B73               	subwfb	cesar@offsetBis+1,w
  7335     03CC  00F5               	movwf	??_cesar+1
  7336     03CD  0874               	movf	??_cesar,w
  7337     03CE  3E60               	addlw	96
  7338     03CF  00F2               	movwf	cesar@offsetBis
  7339     03D0  3000               	movlw	0
  7340     03D1  3D75               	addwfc	??_cesar+1,w
  7341     03D2  00F3               	movwf	cesar@offsetBis+1
  7342     03D3                     i1l2261:
  7343                           
  7344                           ;main.c: 187:                     renvoi = cesar(57, offsetBis);
  7345     03D3  3039               	movlw	57
  7346     03D4  00F0               	movwf	cesar@value
  7347     03D5  3000               	movlw	0
  7348     03D6  00F1               	movwf	cesar@value+1
  7349     03D7  3183  233C  3183   	fcall	_cesar
  7350     03DA  0871               	movf	?_cesar+1,w
  7351     03DB  00FA               	movwf	cesar@renvoi+1
  7352     03DC  0870               	movf	?_cesar,w
  7353     03DD  00F9               	movwf	cesar@renvoi
  7354                           
  7355                           ;main.c: 188:                 } else {
  7356     03DE  2C1C               	goto	i1l2275
  7357     03DF                     i1l2263:
  7358                           
  7359                           ;main.c: 189:                     renvoi = value - offsetBis;
  7360     03DF  0872               	movf	cesar@offsetBis,w
  7361     03E0  0270               	subwf	cesar@value,w
  7362     03E1  00F9               	movwf	cesar@renvoi
  7363     03E2  0873               	movf	cesar@offsetBis+1,w
  7364     03E3  3B71               	subwfb	cesar@value+1,w
  7365     03E4  00FA               	movwf	cesar@renvoi+1
  7366     03E5  2C1C               	goto	i1l2275
  7367     03E6                     i1l2265:
  7368                           
  7369                           ;main.c: 192:                 if (value - offsetBis <= 47) {
  7370     03E6  0872               	movf	cesar@offsetBis,w
  7371     03E7  0270               	subwf	cesar@value,w
  7372     03E8  00F4               	movwf	??_cesar
  7373     03E9  0873               	movf	cesar@offsetBis+1,w
  7374     03EA  3B71               	subwfb	cesar@value+1,w
  7375     03EB  00F5               	movwf	??_cesar+1
  7376     03EC  0875               	movf	??_cesar+1,w
  7377     03ED  3A80               	xorlw	128
  7378     03EE  00F6               	movwf	??_cesar+2
  7379     03EF  3080               	movlw	128
  7380     03F0  0276               	subwf	??_cesar+2,w
  7381     03F1  1D03               	skipz
  7382     03F2  2BF5               	goto	u204_25
  7383     03F3  3030               	movlw	48
  7384     03F4  0274               	subwf	??_cesar,w
  7385     03F5                     u204_25:
  7386     03F5  1803               	skipnc
  7387     03F6  2BF8               	goto	u204_21
  7388     03F7  2BF9               	goto	u204_20
  7389     03F8                     u204_21:
  7390     03F8  2BDF               	goto	i1l2263
  7391     03F9                     u204_20:
  7392     03F9                     i1l2267:
  7393                           
  7394                           ;main.c: 193:                     offsetBis = offsetBis - (value - 47);
  7395     03F9  0870               	movf	cesar@value,w
  7396     03FA  0272               	subwf	cesar@offsetBis,w
  7397     03FB  00F4               	movwf	??_cesar
  7398     03FC  0871               	movf	cesar@value+1,w
  7399     03FD  3B73               	subwfb	cesar@offsetBis+1,w
  7400     03FE  00F5               	movwf	??_cesar+1
  7401     03FF  0874               	movf	??_cesar,w
  7402     0400  3E2F               	addlw	47
  7403     0401  00F2               	movwf	cesar@offsetBis
  7404     0402  3000               	movlw	0
  7405     0403  3D75               	addwfc	??_cesar+1,w
  7406     0404  00F3               	movwf	cesar@offsetBis+1
  7407     0405                     i1l2269:
  7408                           
  7409                           ;main.c: 194:                     renvoi = cesar(122, offsetBis);
  7410     0405  307A               	movlw	122
  7411     0406  00F0               	movwf	cesar@value
  7412     0407  3000               	movlw	0
  7413     0408  00F1               	movwf	cesar@value+1
  7414     0409  3183  233C  3183   	fcall	_cesar
  7415     040C  0871               	movf	?_cesar+1,w
  7416     040D  00FA               	movwf	cesar@renvoi+1
  7417     040E  0870               	movf	?_cesar,w
  7418     040F  00F9               	movwf	cesar@renvoi
  7419                           
  7420                           ;main.c: 195:                 } else {
  7421     0410  2C1C               	goto	i1l2275
  7422     0411                     i1l2273:
  7423                           
  7424                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7425                           ; Switch size 1, requested type "simple"
  7426                           ; Number of cases is 1, Range of values is 0 to 0
  7427                           ; switch strategies available:
  7428                           ; Name         Instructions Cycles
  7429                           ; simple_byte            4     3 (average)
  7430                           ; direct_byte            8     6 (fixed)
  7431                           ; jumptable            260     6 (fixed)
  7432                           ;	Chosen strategy is simple_byte
  7433     0411  0021               	movlb	1	; select bank1
  7434     0412  0860               	movf	(_Chiffrement+1)^(0+128),w
  7435     0413  3A00               	xorlw	0	; case 0
  7436     0414  1903               	skipnz
  7437     0415  2C17               	goto	i1l2593
  7438     0416  2BA7               	goto	i1l2255
  7439     0417                     i1l2593:
  7440                           
  7441                           ; Switch size 1, requested type "simple"
  7442                           ; Number of cases is 1, Range of values is 1 to 1
  7443                           ; switch strategies available:
  7444                           ; Name         Instructions Cycles
  7445                           ; simple_byte            4     3 (average)
  7446                           ; direct_byte           11     9 (fixed)
  7447                           ; jumptable            263     9 (fixed)
  7448                           ;	Chosen strategy is simple_byte
  7449     0417  085F               	movf	_Chiffrement^(0+128),w
  7450     0418  3A01               	xorlw	1	; case 1
  7451     0419  1903               	skipnz
  7452     041A  2B3D               	goto	i1l2237
  7453     041B  2BA7               	goto	i1l2255
  7454     041C                     i1l2275:
  7455                           
  7456                           ;main.c: 201:     return renvoi;
  7457     041C  087A               	movf	cesar@renvoi+1,w
  7458     041D  00F1               	movwf	?_cesar+1
  7459     041E  0879               	movf	cesar@renvoi,w
  7460     041F  00F0               	movwf	?_cesar
  7461     0420                     i1l182:
  7462     0420  0008               	return
  7463     0421                     __end_of_cesar:
  7464     007E                     btemp	set	126	;btemp
  7465     007E                     int$flags	set	126
  7466     007E                     wtemp0	set	126
  7467                           
  7468                           	psect	config
  7469                           
  7470                           ;Config register CONFIG1 @ 0x8007
  7471                           ;	Oscillator Selection Bits
  7472                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  7473                           ;	Watchdog Timer Enable
  7474                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  7475                           ;	Power-up Timer Enable
  7476                           ;	PWRTE = OFF, PWRT disabled
  7477                           ;	MCLR Pin Function Select
  7478                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7479                           ;	Flash Program Memory Code Protection
  7480                           ;	CP = OFF, Program memory code protection is disabled
  7481                           ;	Brown-out Reset Enable
  7482                           ;	BOREN = ON, Brown-out Reset enabled
  7483                           ;	Clock Out Enable
  7484                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7485                           ;	Internal/External Switchover Mode
  7486                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  7487                           ;	Fail-Safe Clock Monitor Enable
  7488                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7489     8007                     	org	32775
  7490     8007  3FEA               	dw	16362
  7491                           
  7492                           ;Config register CONFIG2 @ 0x8008
  7493                           ;	Flash Memory Self-Write Protection
  7494                           ;	WRT = OFF, Write protection off
  7495                           ;	Peripheral Pin Select one-way control
  7496                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  7497                           ;	Zero-cross detect disable
  7498                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7499                           ;	Phase Lock Loop enable
  7500                           ;	PLLEN = OFF, 4x PLL is disnabled
  7501                           ;	Stack Overflow/Underflow Reset Enable
  7502                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7503                           ;	Brown-out Reset Voltage Selection
  7504                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7505                           ;	Low-Power Brown Out Reset
  7506                           ;	LPBOR = OFF, Low-Power BOR is disabled
  7507                           ;	In-Circuit Debugger Mode
  7508                           ;	DEBUG = 0x1, unprogrammed default
  7509                           ;	Low-Voltage Programming Enable
  7510                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  7511     8008                     	org	32776
  7512     8008  1EFB               	dw	7931

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         41
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      78
    BANK1            80     57      70
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    i1sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    i1sprintf@f$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_WriteString@data	PTR const unsigned char  size(1) Largest target is 3
		 -> String(BANK1[3]), 

    S1080$buffer	PTR unsigned char  size(2) Largest target is 0

    S1080$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16384
		 -> ROM(CODE[16384]), STR_1(CODE[13]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), String(BANK1[3]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16384
		 -> ROM(CODE[16384]), STR_1(CODE[13]), STR_2(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16384
		 -> ROM(CODE[16384]), STR_1(CODE[13]), STR_2(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16384
		 -> ROM(CODE[16384]), STR_1(CODE[13]), STR_2(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    i1_sprintf->i1_vfprintf
    i1_vfprintf->i1_vfpfcnvrt
    i1_vfpfcnvrt->i1_abs
    i1_abs->i1___awmod
    i1_LCD_WriteString->i1_LCD_WriteByte
    i1_LCD_WriteByte->i1_LCD_WriteIOExpander
    i1_LCD_Clear->i1_LCD_GoTo
    i1_LCD_GoTo->i1_LCD_WriteCommand
    i1_LCD_WriteCommand->i1_LCD_WriteIOExpander
    i1_LCD_WriteIOExpander->i1_SPI_Exchange8bit

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->i1_lcd
    i1_lcd->i1_sprintf
    i1_sprintf->i1_vfprintf
    i1_vfprintf->i1_vfpfcnvrt

Critical Paths under _main in BANK1

    _main->_lcd
    _main->_setOffset
    _setOffset->_sprintf
    ___lwdiv->___wmul
    _lcd->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _LCD_WriteString->_LCD_WriteByte
    _LCD_WriteByte->_LCD_WriteIOExpander
    _LCD_Clear->_LCD_GoTo
    _LCD_GoTo->_LCD_WriteCommand
    _init->_LCD_Initialize
    _LCD_Initialize->_LCD_WriteCommand
    _LCD_WriteCommand->_LCD_WriteIOExpander
    _LCD_WriteIOExpander->_SPI_Exchange8bit
    _charToRien->___awdiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   19083
                                             55 BANK1      2     2      0
                          _LCD_Clear
                           _LCD_GoTo
                         _charToRien
          _configurerInterruptBouton
                               _init
                           _init_adc
                           _init_pot
                                _lcd
                          _setOffset
 ---------------------------------------------------------------------------------
 (1) _setOffset                                            2     2      0    4777
                                             53 BANK1      2     2      0
                            ___lwdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              6 BANK1      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  2     2      0    8296
                                             53 BANK1      2     2      0
                          _LCD_Clear
                           _LCD_GoTo
                    _LCD_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    14      6    4174
                                             35 BANK1     18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3    3506
                                             28 BANK1      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           17    15      2    3178
                                             11 BANK1     17    15      2
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     934
                                              0 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteString                                      3     3      0     928
                                              4 BANK1      3     3      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteByte                                        1     1      0     772
                                              3 BANK1      1     1      0
                _LCD_WriteIOExpander
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1983
                           _LCD_GoTo
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_GoTo                                             5     4      1    1211
                                              4 BANK1      5     4      1
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _init_pot                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    1522
                     _LCD_Initialize
                 _LCD_InitializePins
                     _SPI_Initialize
                 _SPI_InitializePins
 ---------------------------------------------------------------------------------
 (2) _SPI_InitializePins                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_InitializePins                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       2     2      0    1522
                                              4 BANK1      2     2      0
                   _LCD_WriteCommand
                _LCD_WriteIOExpander
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteCommand                                     1     1      0     772
                                              3 BANK1      1     1      0
                _LCD_WriteIOExpander
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteIOExpander                                  2     1      1     750
                                              1 BANK1      2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurerInterruptBouton                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _charToRien                                           5     5      0    1294
                                              9 BANK1      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     600
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     604
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  5     5      0   10099
                                             41 BANK0      5     5      0
                              _cesar
                              i1_lcd
 ---------------------------------------------------------------------------------
 (8) i1_lcd                                                2     2      0    3863
                                             39 BANK0      2     2      0
                        i1_LCD_Clear
                         i1_LCD_GoTo
                  i1_LCD_WriteString
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (9) i1_sprintf                                           20    14      6    2423
                                             21 BANK0     18    12      6
                         i1_vfprintf
 ---------------------------------------------------------------------------------
 (10) i1_vfprintf                                          7     4      3    2118
                                             13 COMMON     1     1      0
                                             15 BANK0      6     3      3
                        i1_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (11) i1_vfpfcnvrt                                        17    15      2    1939
                                             11 COMMON     2     0      2
                                              0 BANK0     15    15      0
                          i1___awdiv
                          i1___awmod
                              i1_abs
                            i1_fputc
 ---------------------------------------------------------------------------------
 (12) i1_fputc                                             8     5      3     382
                                              0 COMMON     8     5      3
                            i1_putch
 ---------------------------------------------------------------------------------
 (13) i1_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (12) i1_abs                                               4     2      2      92
                                              7 COMMON     4     2      2
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___awmod                                           7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (12) i1___awdiv                                           9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (9) i1_LCD_WriteString                                    3     3      0     334
                                              4 COMMON     3     3      0
                    i1_LCD_WriteByte
 ---------------------------------------------------------------------------------
 (10) i1_LCD_WriteByte                                     1     1      0     244
                                              3 COMMON     1     1      0
              i1_LCD_WriteIOExpander
 ---------------------------------------------------------------------------------
 (9) i1_LCD_Clear                                          0     0      0     675
                         i1_LCD_GoTo
                 i1_LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (9) i1_LCD_GoTo                                           5     4      1     431
                                              4 COMMON     5     4      1
                 i1_LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (10) i1_LCD_WriteCommand                                  1     1      0     244
                                              3 COMMON     1     1      0
              i1_LCD_WriteIOExpander
 ---------------------------------------------------------------------------------
 (11) i1_LCD_WriteIOExpander                               2     1      1     222
                                              1 COMMON     2     1      1
                 i1_SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (12) i1_SPI_Exchange8bit                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (?) _cesar                                                9     5      4    6056
                                              0 COMMON    11     7      4
                              _cesar
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth unknown (due to recursion)
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_GoTo
       _LCD_WriteCommand
         _LCD_WriteIOExpander
           _SPI_Exchange8bit
     _LCD_WriteCommand
   _LCD_GoTo
   _charToRien
     ___awdiv
     ___awmod
   _configurerInterruptBouton
   _init
     _LCD_Initialize
       _LCD_WriteCommand
       _LCD_WriteIOExpander
     _LCD_InitializePins
     _SPI_Initialize
     _SPI_InitializePins
   _init_adc
   _init_pot
   _lcd
     _LCD_Clear
     _LCD_GoTo
     _LCD_WriteString
       _LCD_WriteByte
         _LCD_WriteIOExpander
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _setOffset
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _sprintf

 _isr (ROOT)
   _cesar
   i1_lcd
     i1_LCD_Clear
       i1_LCD_GoTo
         i1_LCD_WriteCommand
           i1_LCD_WriteIOExpander
             i1_SPI_Exchange8bit
       i1_LCD_WriteCommand
     i1_LCD_GoTo
     i1_LCD_WriteString
       i1_LCD_WriteByte
         i1_LCD_WriteIOExpander
     i1_sprintf
       i1_vfprintf
         i1_vfpfcnvrt
           i1___awdiv
           i1___awmod
           i1_abs
             i1___awmod (ARG)
           i1_fputc
             i1_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     39      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      A2      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      A2      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 20 11:01:28 2024

                   _SPI_Initialize 0DB4                     _LCD_Initialize 0421  
                               l21 0E60                                 l15 0DA7  
                               l24 0E77                                 l40 0EE2  
                               l41 0EE8                                 l33 0F07  
                               l18 0482                                 l27 0E8E  
                               l44 07FF                       ___awdiv@sign 00A6  
              __end_ofi1_vfpfcnvrt 01E9                ___wmul@multiplicand 00A2  
                              l122 0DAD                                l220 0DBA  
                              l125 0D9E                                l133 075A  
                              l223 0DF9                                l119 07F4  
                              l151 079A                                l224 0DF8  
                              l128 0DCF                                l320 0F27  
                              l217 0F48                                l226 0DFF  
                              l154 07C7                                l163 0FFF  
                              l318 0F13                                l187 06B2  
                              l471 04E2                                l484 05EB  
                              l823 033B                                l831 0F6A  
                              l850 0597                                l861 0003  
                              l781 0FB0                                l838 0E23  
                              l598 0797                                _abs 0E12  
                              _lcd 071D                                _isr 0004  
                     ___awmod@sign 00A6                                wreg 0009  
                ??_LCD_WriteString 00A4                  ?_LCD_WriteCommand 0070  
                     _BAUD1CONbits 019F                 ??_LCD_WriteCommand 00A3  
                             l2001 0294                               l2011 02BC  
                             l2003 029C                               ?_abs 00A7  
                             l2021 02E6                               l2005 02A1  
                             l2031 030B                               l2007 02B1  
                             l2015 02C1                               l2201 0475  
                             l2017 02CB                               l2025 02E9  
                             l2009 02B6                               l2041 031A  
                             l2203 0479                               l2211 0EFC  
                             l2043 0331                               l2027 02FA  
                             l2035 0311                               l2019 02D9  
                             l2221 0DB9                               l2141 0ED2  
                             l2213 07F5                               l2205 0EEB  
                             l2029 0302                               l2301 075E  
                             l2215 0F28                               l2143 0ED7  
                             l2207 0EED                               l2151 0F4F  
                             l2231 0FA3                               l2223 0F8E  
                             l2311 0774                               l2303 0764  
                             l2217 0F34                               l2145 0EDD  
                             l2137 0E7A                               l2209 0EF7  
                             l2153 0F52                               l2225 0F95  
                             l2401 071D                               l2313 0783  
                             l2305 0767                               l2321 0793  
                             l2219 0DB4                               l2147 0EE4  
                             l2139 0ECC                               l2155 0F5F  
                             l2227 0F97                               l2411 0756  
                             l2403 0726                               l2315 0787  
                             l2307 076C                               l2157 0F68  
                             l2149 0F4B                               l2229 0F99  
                             l2405 072D                               l2317 0788  
                             l2309 0770                               l2413 0798  
                             l2501 06C4                               l2423 0FD7  
                             l2191 043D                               l2351 07D4  
                             l2407 073F                               l2319 078D  
                             l2415 079E                               l2503 06C7  
                             l1801 05B4                               l2425 0FFB  
                             l2193 044A                               l2185 0DA3  
                             l2361 07DC                               l2353 07D5  
                             l2409 0744                               l2417 07A2  
                      ?i1_LCD_GoTo 0074                               l1811 05CE  
                             l1803 05B7                               l2427 0FFD  
                             l2195 044E                               l2187 0421  
                             l2371 07E2                               l2363 07DD  
                             l2355 07D7                               l2347 07C8  
                             l2291 0F18                               l2419 07AD  
                             l1821 05E7                               l1813 05D2  
                             l1805 05BC                               l1725 0DF1  
                             l1741 0E5E                               l2197 045B  
                             l2189 0434                               l2381 07E8  
                             l2373 07E3                               l2365 07DE  
                             l2357 07D9                               l2349 07D2  
                             l2293 0F1D                               l2285 0F08  
                             l1751 0490                               l1743 0483  
                             l1815 05D7                               l1807 05C0  
                             l1727 0DF3                               l2199 0464  
                             l2383 07EB                               l2375 07E4  
                             l2367 07DF                               l2359 07DB  
                             l2391 0D9B                               l1831 0552  
                             l2295 0F23                               l2287 0F0B  
                             l1761 04A5                               l1753 0494  
                             l1745 0485                               l1809 05C4  
                             l1817 05DD                               l1729 0DFE  
                             l1737 0E4E                               l2385 07EE  
                             l2377 07E5                               l2369 07E1  
                             l2393 0DC5                               l1841 0E12  
                             l1833 055C                               l1825 0542  
                             l2289 0F0F                               ?_lcd 0070  
                             l1771 04C4                               l1763 04A8  
                             l1755 0499                               l1747 0489  
                             l1819 05E2                               l1739 0E50  
                             l2387 07F1                               l2379 07E6  
                             l2395 0DC7                               l1843 0E17  
                             l1835 057A                               l1827 0548  
                             l2299 075B                               l2491 069F  
                             l2483 0693                               l1781 04D9  
                             l1773 04C8                               l1765 04AD  
                             l1757 049D                               l1749 048E  
                             l2389 0DA8                               l2397 0DCB  
                             l1845 0E18                               l1837 058E  
                             l1829 054D                               l2493 06A5  
                             l2485 0696                               l1783 04DE  
                             l1775 04C9                               l1767 04B1  
                             l1759 049F                               l1791 059E  
                             l2399 0DCC                               l2495 06B5  
                             l2487 0699                               l1777 04CE  
                             l1769 04B5                               l1793 05A3  
                             l1961 0E63                               l2497 06BA  
                             l2489 069C                               l1779 04D4  
                             l1795 05A5                               l1787 0598  
                             l1971 020D                               l1963 01EB  
                             l2499 06BE                               l1797 05A9  
                             l1789 059A                               l1981 0238  
                             l1973 0211                               l1965 01ED  
                             l1799 05AE                               l1991 027B  
                             l1983 0245                               l1975 0218  
                             l1967 01FE                               l1993 027F  
                             l1985 0247                               l1977 0222  
                             l1969 0206                               l1995 0285  
                             l1987 024E                               l1979 022C  
                             l1997 028A                               l1989 026B  
                             l1999 028F                               ?_isr 0070  
                             STR_1 100F                               STR_2 1000  
                             STR_3 1019                               u1200 0489  
                             u1201 0488                               u1210 0494  
                             u1211 0493                               u1220 04A5  
                             u1300 059E                               u1221 04A4  
                             u1301 059D                               u1310 05A9  
                             u2110 0774                               u1311 05A8  
                             u2111 0773                               u1240 04B5  
                             u1320 05B4                               u1400 054D  
                             u1241 04B4                               u1321 05B3  
                             u1401 054C                               u2105 0768  
                             u1410 055C                               u2130 0783  
                             u2050 0F0F                               u1235 04A9  
                             u1411 055B                               u2131 0782  
                             u2051 0F0E                               u1260 04C4  
                             u1340 05C4                               u1180 0DFE  
                             u1420 057A                               u1261 04C3  
                             u1341 05C3                               u1181 0DFD  
                             u1421 0579                               u2125 0775  
                             u1350 05CE                               u1430 0E17  
                             u2150 0793                               u1255 04B6  
                             u1351 05CD                               u1335 05B8  
                             u1431 0E16                               u2151 0792  
                             u2135 077F                               u1280 04D4  
                             u2080 0F23                               u1281 04D3  
                             u1265 04C0                               u1425 0576  
                             u2145 0789                               u2081 0F22  
                             u2065 0F14                               u1290 04D9  
                             u1370 05DD                               u2170 072D  
                             u2090 0764                               u1291 04D8  
                             u1275 04CA                               u1371 05DC  
                             u1355 05CA                               u2171 072C  
                             u2091 0763                               u2075 0F19  
                             u1380 05E2                               u1700 022C  
                             u2180 079E                               u1381 05E1  
                             u1365 05D3                               u1701 022B  
                             u2181 079D                               u1390 0548  
                             u1710 024C                               u2407 045F  
                             u1391 0547                               u1711 024A  
                             u1720 024D                               u2417 046E  
                             u1730 0285                               u2427 047D  
                             u1731 0284                               u1740 028A  
                             u1741 0289                               u2357 06AB  
                             u1750 028F                               u1751 028E  
                             u2367 06CD                               u1920 0ED2  
                             u1760 0294                               u1680 01FE  
                             u2377 0438                               u1921 0ED1  
                             u1761 0293                               u1681 01FD  
                             u1930 0ED7                               u1770 02BC  
                             u1690 0222                               u2387 0445  
                             u1931 0ED6                               u1771 02BB  
                             u1691 0221                               u1780 02CB  
                             u1940 0F68                               u2397 0452  
                             u1781 02CA                               u1941 0F67  
                             u1790 02FA                               u1791 02F9  
                             u1980 0F07                               i1l21 0E11  
                             u1981 0F06                               _INTF 0059  
                             i1l24 0E37                               i1l40 0EC3  
                             i1l41 0EC9                               i1l33 0EAB  
                             i1l27 0E4B                               i1l44 0DC4  
                      LCD_GoTo@pos 00A7                        LCD_GoTo@row 00A8  
                             abs@a 00A7                               _dbuf 004E  
                             _main 0693                               _init 07C8  
                             _prec 00DD                               _nout 00D9  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               start 006E  
                  __end_ofi1_fputc 0640             __end_of_SPI_Initialize 0DBB  
                  __end_ofi1_putch 0003             __end_of_LCD_Initialize 0483  
               _SPI_InitializePins 0F28                      _LCD_WriteByte 0E78  
                       i1_vfprintf 0FB1         ?_configurerInterruptBouton 0070  
                            ??_abs 00A9                              ??_lcd 00D5  
                            ??_isr 0049                   __end_of_LCD_GoTo 0EE9  
              ?_SPI_InitializePins 0070                      i1vfpfcnvrt@ap 007C  
                    i1vfpfcnvrt@cp 002C                      i1vfpfcnvrt@fp 0027  
                     ?i1_LCD_Clear 0070                _LCD_WriteIOExpander 0E4C  
              LCD_WriteString@data 00A6                              ?_main 0070  
                   i1___awdiv@sign 0076                              ?_init 0070  
                  __end_of___awdiv 04E3                    __end_of___awmod 05EC  
                  ___awdiv@divisor 00A0                    __end_of___lwdiv 0798  
                            i1l133 071C                              i1l223 0DD7  
                            i1l224 0DD6                              i1l144 0056  
                            i1l225 0DDC                              i1l226 0DDD  
                            i1l148 006C                              i1l182 0420  
                            i1l471 0541                              i1l484 0692  
                            i1l823 01E8                              i1l831 0FD4  
                            i1l850 063F                              i1l861 0002  
                            i1l781 0F8D                              i1l838 0DEE  
                  ___awdiv@counter 00A5                       vfpfcnvrt@cnt 00B2  
                     vfpfcnvrt@fmt 00AB                              i1_abs 0DDE  
                            i1_lcd 06DA                     i1___awmod@sign 0076  
                            _cesar 033C                              _flags 00E1  
                            _fputc 0542                 _LCD_InitializePins 0DA3  
                            _width 00DB                              _putch 0003  
                      _Chiffrement 00DF               ??_SPI_InitializePins 00A0  
               i1_SPI_Exchange8bit 0DD0               ?_LCD_WriteIOExpander 00A1  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 0FB1                ?_LCD_InitializePins 0070  
                   ?_LCD_WriteByte 0070                    ?_SPI_Initialize 0070  
                      i1_vfpfcnvrt 0095                    ?_LCD_Initialize 0070  
              ?i1_SPI_Exchange8bit 0070                    __initialization 0070  
                     __end_of_main 06DA                      i1vfprintf@fmt 002F  
                     __end_of_init 07F5                         i1sprintf@f 003C  
                       i1sprintf@s 0035                             ??_main 00D7  
                           ??_init 00A6               ??_LCD_InitializePins 00A0  
                __end_of_LCD_Clear 0800                             ?i1_abs 0077  
                           ?i1_lcd 0070               ??i1_SPI_Exchange8bit 0070  
                   i1vfpfcnvrt@cnt 0025                     i1vfpfcnvrt@fmt 007B  
         __end_of_SPI_Exchange8bit 0E00                             ?_cesar 0070  
                           ?_fputc 00A0                             _ADRESH 009C  
                           _ADRESL 009B                   ___awdiv@dividend 00A2  
                           ?_putch 0070                             _RC1REG 0199  
                           i1l2103 016E                             i1l2105 0178  
                           i1l2113 0198                             i1l2131 01DF  
                           i1l2115 01A9                             i1l2123 01BF  
                           i1l2107 0187                             i1l2051 0097  
                           i1l2117 01B1                             i1l2109 0195  
                           i1l2061 00BE                             i1l2053 0099  
                           i1l2119 01BA                             i1l2071 00F3  
                           i1l2063 00C6                             i1l2055 00AA  
                           u200_20 035D                             i1l2241 035D  
                           u200_21 035C                             i1l2049 0E25  
                           i1l2161 0E39                             i1l2081 012C  
                           i1l2073 00F5                             i1l2065 00D0  
                           i1l2057 00B2                             i1l2129 01C8  
                           i1l2251 039B                             i1l2243 0369  
                           i1l2235 033C                             i1l2171 0EC5  
                           i1l2163 0EAD                             i1l2331 0EA0  
                           i1l2091 0149                             i1l2083 0132  
                           i1l2075 00FC                             i1l2067 00DA  
                           i1l2059 00BA                             i1l2261 03D3  
                           i1l2245 0375                             u200_25 0359  
                           i1l2237 033D                             i1l2165 0EB3  
                           i1l2333 0DBB                             i1l2325 0E90  
                           i1l2093 014E                             i1l2085 0137  
                           i1l2077 0117                             i1l2069 00E6  
                           i1l2181 0FD2                             i1l2173 0FB3  
                           i1l2341 0F76                             i1l2263 03DF  
                           i1l2255 03A7                             i1l2239 034A  
                           i1l2247 037C                             i1l2167 0EB8  
                           i1l2327 0E92                             i1l2095 015E  
                           i1l2087 013C                             i1l2079 0128  
                           i1l2175 0FB7                             i1l2343 0F80  
                           i1l2335 0F6B                             i1l2431 06E2  
                           u201_20 038F                             i1l2257 03B4  
                           i1l2265 03E6                             i1l2249 038F  
                           u201_21 038E                             i1l2273 0411  
                           i1l2169 0EBE                             i1l2329 0E9C  
                           i1l2089 0141                             i1l2097 0163  
                           i1l2177 0FBB                             i1l2337 0F72  
                           i1l2433 06E9                             i1l2441 0006  
                           i1l2267 03F9                             i1l2259 03C7  
                           i1l2275 041C                             i1l2099 0169  
                           i1l2179 0FC8                             i1l2339 0F74  
                           i1l2435 06FE                             i1l2451 0024  
                           i1l2443 0007                             i1l2269 0405  
                           u201_25 038B                             i1l1733 0DD1  
                           i1l1901 0641                             i1l2437 0703  
                           i1l2429 06DA                             i1l2461 004E  
                           i1l2453 002A                             i1l2445 0011  
                           i1l1735 0DD3                             i1l1911 0655  
                           i1l1903 0645                             i1l2439 0718  
                           i1l2471 0065                             i1l2455 0041  
                           i1l2447 0018                             i1l2463 0051  
                           u202_20 03B4                             u202_21 03B3  
                           i1l1921 066B                             i1l1913 065B  
                           i1l1905 064A                             i1l2473 0069  
                           i1l2465 005A                             i1l2457 0047  
                           i1l2449 001D                             i1l1851 0E03  
                           i1l1931 0689                             i1l1923 0675  
                           i1l1915 065E                             i1l1907 064C  
                           i1l2467 005B                             u202_25 03B0  
                           i1l1853 0E0F                             i1l1861 04ED  
                           i1l1933 068E                             i1l1925 0679  
                           i1l1917 0663                             i1l1909 0650  
                           i1l1941 0DE3                             i1l2469 0062  
                           i1l1871 04FE                             i1l1863 04EF  
                           i1l1855 04E3                             i1l1927 067E  
                           i1l1919 0667                             i1l1951 05FB  
                           u203_20 03C7                             i1l2593 0417  
                           u203_21 03C6                             i1l1849 0E01  
                           i1l1881 0514                             i1l1873 0504  
                           i1l1865 04F3                             i1l1857 04E4  
                           i1l1929 0684                             i1l1937 0DDE  
                           i1l1953 0605                             i1l1945 05EC  
                           i1l1883 0523                             i1l1875 0507  
                           i1l1891 0533                             i1l1867 04F8  
                           i1l1859 04E8                             i1l1939 0DE2  
                           i1l1955 0623                             i1l1947 05F1  
                           u203_25 03C3                             i1l1893 0538  
                           i1l1885 0527                             i1l1877 050C  
                           i1l1869 04FC                             i1l1957 0636  
                           i1l1949 05F6                             i1l1895 053D  
                           i1l1887 0528                             i1l1879 0510  
                           u204_20 03F9                             u220_20 0011  
                           u204_21 03F8                             i1l1889 052D  
                           u220_21 0010                             i1l1899 0640  
                           u204_25 03F5                             u221_20 0018  
                           u221_21 0017                             u150_20 0523  
                           u222_20 0024                             u150_21 0522  
                           u222_21 0023                             _INTEDG 04AE  
                           u150_25 051F                             u119_20 0DDC  
                           u223_20 002A                             u119_21 0DDB  
                           u223_21 0029                             u151_25 0529  
                           u216_20 0EAB                             u152_20 0533  
                           u144_20 04E8                             u224_20 0047  
                           u216_21 0EAA                             u152_21 0532  
                           u144_21 04E7                             u224_21 0046  
                        ??i1_fputc 0073                             u160_25 067A  
                           u153_20 0538                             u145_20 04F3  
                           u161_20 0684                             u225_20 004D  
                           u153_21 0537                             u145_21 04F2  
                           u161_21 0683                             u225_21 004C  
                           u146_20 0504                             u162_20 0689  
                           u154_20 0645                             u226_20 0056  
                           u146_21 0503                             u162_21 0688  
                           u154_21 0644                             u226_21 0055  
                           u155_20 0650                             u163_20 0DE2  
                           u219_20 06E9                             u227_20 005A  
                           u155_21 064F                             u163_21 0DE1  
                           u219_21 06E8                             u227_21 0059  
                           u147_25 0508                             u148_20 0514  
                           u156_20 065B                             u164_20 05F1  
                           u180_20 00AA                             u228_20 0062  
                           u148_21 0513                             u156_21 065A  
                           u164_21 05F0                             u180_21 00A9  
                           u228_21 0061                             u165_20 05F6  
                           u181_20 00D0                             u165_21 05F5  
                           u181_21 00CF              ??_LCD_WriteIOExpander 00A2  
                           u149_25 0515                             u157_25 065F  
                           u158_20 066B                             u166_20 0605  
                           u190_20 0178                             u182_20 00DA  
                           u158_21 066A                             u166_21 0604  
                           u190_21 0177                             u182_21 00D9  
                           u159_20 0675                             u167_20 0623  
                           u191_20 01A9                             u183_20 00FA  
                           u159_21 0674                             u167_21 0622  
                           u191_21 01A8                             u183_21 00F8  
                           u159_25 0671                             u167_25 061F  
                           u184_20 00FB                             u185_20 0132  
                           u185_21 0131                             u186_20 0137  
                           u186_21 0136                             u195_20 0EB3  
                           u187_20 013C                             u195_21 0EB2  
                           u187_21 013B                             u196_20 0EB8  
                           u188_20 0141                             u196_21 0EB7  
                           u188_21 0140                             u189_20 0169  
                           u197_20 0FD2                             u189_21 0168  
                           u197_21 0FD1                             u199_20 034A  
                           u199_21 0349                             u199_25 0346  
                        ??i1_putch 0070                      vfpfcnvrt@done 00B1  
                           _TX1REG 019A                             i1abs@a 0077  
                     vfprintf@cfmt 00C1                        ?i1_vfprintf 002F  
                           _String 00E3                             ___wmul 0F08  
                        ??___awdiv 00A4                          ??___awmod 00A4  
    __end_ofi1_LCD_WriteIOExpander 0E12                          ??___lwdiv 00AA  
                 __end_of_init_adc 0DD0                             _offset 00E2  
                 __end_of_init_pot 0D9F                    i1_LCD_WriteByte 0E38  
                 ___awdiv@quotient 00A7                    ___awmod@divisor 00A0  
                  ___awmod@counter 00A5              i1LCD_WriteCommand@cmd 0073  
                __end_ofi1___awdiv 0542                  __end_ofi1___awmod 0693  
                           fputc@c 00A0                             putch@c 0070  
                 __end_of_vfprintf 0F6B                          ??_sprintf 00C9  
          __end_of__initialization 0091                          ?_LCD_GoTo 00A4  
                  ??_LCD_WriteByte 00A3                  __end_ofi1_sprintf 0F8E  
                 LCD_WriteString@i 00A5                      __end_ofi1_abs 0DEF  
                    __end_ofi1_lcd 071D                     __pcstackCOMMON 0070  
                     __pidataBANK1 0D9F                      __end_of_cesar 0421  
                  _LCD_WriteString 0EE9                     i1vfprintf@cfmt 0033  
                    __end_of_fputc 0598                      __end_of_putch 0004  
          LCD_WriteIOExpander@data 00A1                            ??i1_abs 0079  
                          ??i1_lcd 0047                        i1sprintf@ap 003B  
                          ??_cesar 0074                            ??_fputc 00A3  
                     ??i1_LCD_GoTo 0075                            ??_putch 00A0  
                       _charToRien 0FD5                         __pbssBANK0 004E  
                       __pbssBANK1 00D9                         ??_LCD_GoTo 00A5  
        i1LCD_WriteIOExpander@data 0071                       isr@caractere 004D  
          __end_ofi1_LCD_WriteByte 0E4C                    i1vfpfcnvrt@done 0024  
                       __pmaintext 0693        ??_configurerInterruptBouton 00A0  
                          ?___wmul 00A0                         __pintentry 0004  
               __end_ofi1_LCD_GoTo 0ECA                 i1___awdiv@dividend 0072  
         i1LCD_WriteIOExpander@reg 0072                            _SSP1ADD 0212  
                          _SSP1BUF 0211             i1SPI_Exchange8bit@data 0070  
                          i1_fputc 05EC                   ??_SPI_Initialize 00A0  
                          i1_putch 0002                   ??_LCD_Initialize 00A4  
                        ?_init_adc 0070                          ?_init_pot 0070  
                   LCD_GoTo@column 00A4            __end_of_LCD_WriteString 0F08  
                     ?i1_vfpfcnvrt 007B                 i1___awdiv@quotient 0077  
                          ___awdiv 0483                            ___awmod 0598  
                          ___lwdiv 075B                          ?_vfprintf 00BC  
                          __ptext1 0798                            __ptext2 0F08  
                          __ptext3 075B                            __ptext4 071D  
                          __ptext5 0F8E                            __ptext6 0F49  
                          __ptext7 01E9                            __ptext8 0542  
                          __ptext9 0003         __end_ofi1_LCD_WriteCommand 0E38  
                 ___awmod@dividend 00A2                 charToRien@dizaines 00AC  
                        _LCD_Clear 07F5                         cesar@value 0070  
        _configurerInterruptBouton 0DA8                  ?_SPI_Exchange8bit 0070  
                          _sprintf 0F8E                            clrloop0 0DAF  
                      ?_charToRien 0070               end_of_initialization 0091  
               i1LCD_WriteString@i 0076                  __end_of_setOffset 07C8  
               ??_SPI_Exchange8bit 00A0               SPI_Exchange8bit@data 00A0  
                LCD_WriteByte@data 00A3                            fputc@fp 00A2  
                       ??_init_adc 00A0                         ??_init_pot 00A0  
                 ?i1_LCD_WriteByte 0070                       ??i1_vfprintf 007D  
                __end_of_vfpfcnvrt 033C                       _LCD_GoTo$119 00A5  
                 vfpfcnvrt@convarg 00B5                         ??_vfprintf 00BF  
                        _TRISAbits 008C                          _TRISBbits 008D  
                        _TRISCbits 008E        __end_of_LCD_WriteIOExpander 0E61  
                       ?_LCD_Clear 0070                          i1___awdiv 04E3  
                        i1___awmod 0640                 __end_ofi1_vfprintf 0FD5  
                        _RXPPSbits 0E24                   ?_LCD_WriteString 0070  
                 _LCD_WriteCommand 0E61                          i1_sprintf 0F6B  
                     i1vfpfcnvrt@c 002E                     i1_LCD_GoTo$119 0075  
                      vfpfcnvrt@ap 00AC                        vfpfcnvrt@cp 00B9  
                      vfpfcnvrt@fp 00B4                     __end_of___wmul 0F28  
                        i1fputc@fp 0072              i1_LCD_WriteIOExpander 0E00  
            i1LCD_WriteString@data 0075                start_initialization 0070  
                      __end_of_abs 0E24                        __end_of_lcd 075B  
                     i1vfprintf@ap 0031                       i1vfprintf@fp 0032  
                      __end_of_isr 006E                         ?i1___awdiv 0070  
                       ?i1___awmod 0070                      i1LCD_GoTo@pos 0077  
                    i1LCD_GoTo@row 0078                       i1sprintf@fmt 0037  
            __end_of_LCD_WriteByte 0E8F                        vfprintf@fmt 00BC  
                       ?i1_sprintf 0035                           ??___wmul 00A4  
                      __pdataBANK1 00E2                 i1___awmod@dividend 0072  
                    ??i1_LCD_Clear 0079                          ___latbits 0003  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
                      ??_LCD_Clear 00A9                           ?i1_fputc 0070  
           LCD_WriteIOExpander@reg 00A2                           ?i1_putch 0070  
               i1vfpfcnvrt@convarg 0028                   ___lwdiv@dividend 00A8  
                         ?___awdiv 00A0                           ?___awmod 00A0  
                         ?___lwdiv 00A6             ?i1_LCD_WriteIOExpander 0071  
                i1___awdiv@divisor 0070                  i1___awdiv@counter 0075  
                 i1LCD_GoTo@column 0074                __end_ofi1_LCD_Clear 0DC5  
                      ??i1___awdiv 0074                        ??i1___awmod 0074  
                 ___lwdiv@quotient 00AB                           ?_sprintf 00C3  
                     ??_charToRien 00A9                 i1_LCD_WriteCommand 0E24  
                         _LCD_GoTo 0ECA                     ___wmul@product 00A4  
                         _LATAbits 010C                           _LATCbits 010E  
                        _setOffset 0798                          clear_ram0 0DAE  
                         _PIE1bits 0091                ?i1_LCD_WriteCommand 0070  
__end_of_configurerInterruptBouton 0DAE                           _PIR1bits 0011  
                      ??i1_sprintf 007E                           _SSP1CON1 0215  
                         _SSP1STAT 0214                          _vfpfcnvrt 01E9  
               __end_of_charToRien 1000                         _ADCON0bits 009D  
                       _ADCON1bits 009E                  ___wmul@multiplier 00A0  
              LCD_WriteCommand@cmd 00A3               ??i1_LCD_WriteCommand 0073  
         __end_of_LCD_WriteCommand 0E78                         vfpfcnvrt@c 00BB  
                         i1fputc@c 0070         __end_of_SPI_InitializePins 0F49  
                       ?_setOffset 0070                         vfprintf@ap 00BE  
                       vfprintf@fp 00C0                  i1___awmod@divisor 0070  
                i1___awmod@counter 0075                         ?_vfpfcnvrt 00AB  
       __end_of_LCD_InitializePins 0DA8                        _SP1BRGHbits 019C  
              i1LCD_WriteByte@data 0073                        _SP1BRGLbits 019B  
                      i1_LCD_Clear 0DBB                         _ANSELAbits 018C  
                       _ANSELBbits 018D                         _ANSELCbits 018E  
       __end_ofi1_SPI_Exchange8bit 0DDE                         sprintf@fmt 00C5  
                  ___lwdiv@divisor 00A6                    ___lwdiv@counter 00AD  
                         __ptext10 0E12                           __ptext11 0EE9  
                         __ptext20 0DA3                           __ptext12 0E78  
                         __ptext21 0421                           __ptext13 07F5  
                         __ptext30 06DA                           __ptext22 0E61  
                         __ptext14 0ECA                           __ptext31 0F6B  
                         __ptext23 0E4C                           __ptext15 0D9B  
                         __ptext40 0E38                           __ptext32 0FB1  
                         __ptext24 0DEF                           __ptext16 0DC5  
                         __ptext41 0DBB                           __ptext33 0095  
                         __ptext25 0DA8                           __ptext17 07C8  
                         __ptext42 0EAC                           __ptext34 05EC  
                         __ptext26 0FD5                           __ptext18 0F28  
                         __ptext43 0E24                           __ptext35 0002  
                         __ptext27 0598                           __ptext19 0DB4  
                         __ptext44 0E00                           __ptext36 0DDE  
                         __ptext28 0483                           __ptext45 0DD0  
                         __ptext37 0640                           __ptext46 033C  
                         __ptext38 04E3                           __ptext39 0E8F  
                     _SSP1CON1bits 0215                           _init_adc 0DC5  
                    _SSPDATPPSbits 0E21                           _init_pot 0D9B  
                   setOffset@potar 00D5                   charToRien@nombre 00AD  
                       _RC1STAbits 019D                  i1_LCD_WriteString 0E8F  
                       _RC3PPSbits 0EA3                        cesar@renvoi 0079  
                    _SSPCLKPPSbits 0E20                           int$flags 007E  
                       _RC5PPSbits 0EA5                 ?i1_LCD_WriteString 0070  
                       _RC6PPSbits 0EA6                           _vfprintf 0F49  
                     _SSP1STATbits 0214                ??i1_LCD_WriteString 0074  
                       _INTCONbits 000B                         i1_LCD_GoTo 0EAC  
                         intlevel1 0000                          sprintf@ap 00C9  
                      ??_setOffset 00D5          __end_ofi1_LCD_WriteString 0EAC  
                    ??i1_vfpfcnvrt 0020            ??i1_LCD_WriteIOExpander 0072  
                  charToRien@unite 00AB                   _SPI_Exchange8bit 0DEF  
                   cesar@offsetBis 0072                        ??_vfpfcnvrt 00AD  
                    __pstringtext1 1000                      __pstringtext2 100F  
                    __pstringtext3 0000                           sprintf@f 00CA  
                         sprintf@s 00C3                  ??i1_LCD_WriteByte 0073  
                       _TX1STAbits 019E  
